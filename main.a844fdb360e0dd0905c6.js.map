{"version":3,"file":"main.a844fdb360e0dd0905c6.js","mappings":"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","sources":["webpack://bumpy/webpack/runtime/chunk loaded","webpack://bumpy/webpack/runtime/create fake namespace object","webpack://bumpy/webpack/runtime/load script","webpack://bumpy/./src/scss/component/frame/app/App.module.scss","webpack://bumpy/./src/scss/component/frame/control/button/ArrowButton.module.scss","webpack://bumpy/./src/scss/component/frame/control/button/Icon.module.scss","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenu.module.scss","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuItem.module.scss","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuItemGroup.module.scss","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuSeparator.module.scss","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuTitle.module.scss","webpack://bumpy/./src/scss/component/frame/control/gallery/RibbonGallery.module.scss","webpack://bumpy/./src/scss/component/frame/control/gallery/RibbonGalleryItem.module.scss","webpack://bumpy/./src/scss/component/frame/control/label/RibbonLabel.module.scss","webpack://bumpy/./src/scss/component/frame/mainpage/MainPage.module.scss","webpack://bumpy/./src/scss/component/frame/mainpage/proxylayer/apparea/AppAreaProxyLayer.module.scss","webpack://bumpy/./src/scss/component/frame/mainpage/proxylayer/editview/EditViewProxyLayer.module.scss","webpack://bumpy/./src/scss/component/frame/ribbon/group/RibbonGroup.module.scss","webpack://bumpy/./src/scss/component/frame/ribbon/group/RibbonGroupLabelArea.module.scss","webpack://bumpy/./src/scss/component/frame/ribbon/group/RibbonGroupWrapper.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/WorkArea.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/composite/CompositeView.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/content/Content.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/edit/EditView.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPane.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneDock.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneDockButton.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneTitle.module.scss","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneWrapper.module.scss","webpack://bumpy/./src/scss/component/node/graphic/GraphicChildWrapper.module.scss","webpack://bumpy/./src/scss/component/node/graphic/GraphicWrapper.module.scss","webpack://bumpy/./src/scss/component/node/slide/EditPreviewLayer.module.scss","webpack://bumpy/./src/scss/component/node/slide/Slide.module.scss","webpack://bumpy/./src/scss/component/node/slide/selectionlayer/graphic/GraphicSelection.module.scss","webpack://bumpy/./src/scss/component/frame/app/App.module.scss?f853","webpack://bumpy/./src/util/id/Identifiable.ts","webpack://bumpy/./src/model/node/TreeNode.ts","webpack://bumpy/./src/types/model/node/TreeNodeTypeEnum.ts","webpack://bumpy/./src/model/node/slide/SlideModel.ts","webpack://bumpy/./src/types/store/container/edit/GraphicEditEventSubStateEnum.ts","webpack://bumpy/./src/store/container/edit/GraphicModelEditRequest.ts","webpack://bumpy/./src/store/container/edit/GraphicEditInfoContainer.ts","webpack://bumpy/./src/store/container/proxylayer/ProxyLayerInfoContainer.ts","webpack://bumpy/./src/store/container/shortcut/ShortcutContainer.ts","webpack://bumpy/./src/hook/resource/useImgRes.ts","webpack://bumpy/./src/component/frame/control/resource/SVGComponent.tsx","webpack://bumpy/./src/component/frame/control/resource/ImgResComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/button/Icon.module.scss?558b","webpack://bumpy/./src/component/frame/control/button/IconComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/label/RibbonLabel.module.scss?6037","webpack://bumpy/./src/component/frame/control/label/RibbonLabelComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/gallery/RibbonGalleryItem.module.scss?340d","webpack://bumpy/./src/component/frame/control/gallery/RibbonGalleryItemComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenu.module.scss?a9b8","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuItemGroup.module.scss?0eec","webpack://bumpy/./src/store/container/ui/controlhandler/handler/ShapeInsertGalleryHandler.tsx","webpack://bumpy/./src/hook/component/frame/control/gallery/useRibbonGallery.ts","webpack://bumpy/./src/store/container/ui/controlhandler/handler/ShapeInsertGalleryItemHandler.ts","webpack://bumpy/./src/store/container/ui/controlhandler/ControlHandlerContainer.ts","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPane.module.scss?47c1","webpack://bumpy/./src/component/frame/control/button/base/ButtonBaseComponent.tsx","webpack://bumpy/./src/component/frame/control/button/base/ButtonBaseIconComponent.tsx","webpack://bumpy/./src/component/frame/control/button/IconButtonComponent.tsx","webpack://bumpy/./src/hook/resource/useTextRes.ts","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneTitle.module.scss?fffa","webpack://bumpy/./src/component/frame/workarea/toolpane/ToolPaneTitleComponent.tsx","webpack://bumpy/./src/component/frame/workarea/toolpane/ToolPaneComponent.tsx","webpack://bumpy/./src/component/frame/workarea/toolpane/extended/DummieToolPaneComponent.tsx","webpack://bumpy/./src/component/frame/workarea/toolpane/extended/DummyToolPaneComponent.tsx","webpack://bumpy/./src/types/store/container/ui/toolpane/ToolPaneContainerTypes.ts","webpack://bumpy/./src/types/store/container/ui/toolpane/ToolPaneTypeEnum.ts","webpack://bumpy/./src/store/container/ui/toolpane/ToolPaneContainer.ts","webpack://bumpy/./src/store/container/ui/UIContainer.ts","webpack://bumpy/./src/store/container/viewmode/ViewModeContainer.ts","webpack://bumpy/./src/store/manager/command/UndoStack.ts","webpack://bumpy/./src/store/manager/selection/graphic/GraphicModelSelection.ts","webpack://bumpy/./src/store/manager/selection/InternalSelectionContainer.ts","webpack://bumpy/./src/types/model/node/graphic/GraphicTypeEnum.ts","webpack://bumpy/./src/util/node/TreeNodeTypeGuards.ts","webpack://bumpy/./src/util/node/graphic/GraphicModelTreeNodeUtil.ts","webpack://bumpy/./src/store/manager/selection/graphic/GraphicModelSelectionContainer.ts","webpack://bumpy/./src/store/manager/selection/SelectionContainer.ts","webpack://bumpy/./src/types/store/command/CommandModeEnum.ts","webpack://bumpy/./src/types/store/event/EventStateEnum.ts","webpack://bumpy/./src/util/id/IdGenerator.ts","webpack://bumpy/./src/store/context/EditableContext.ts","webpack://bumpy/./src/store/context/ReadOnlyContext.ts","webpack://bumpy/./src/store/context/AppContext.ts","webpack://bumpy/./src/store/manager/command/CommandCompositor.ts","webpack://bumpy/./src/store/manager/command/CommandController.ts","webpack://bumpy/./src/store/manager/command/commandhandler/factory/CommandHandlerFactory.ts","webpack://bumpy/./src/store/manager/command/commandhandler/CommandHandler.ts","webpack://bumpy/./src/model/node/graphic/info/CoordinateInfo.ts","webpack://bumpy/./src/util/coordinate/CoordinateUtil.ts","webpack://bumpy/./src/model/node/graphic/info/FillInfo.ts","webpack://bumpy/./src/model/node/graphic/info/PathInfo.ts","webpack://bumpy/./src/model/node/graphic/info/StrokeInfo.ts","webpack://bumpy/./src/model/node/graphic/GraphicModel.ts","webpack://bumpy/./src/model/node/graphic/info/path/PathBuilder.ts","webpack://bumpy/./src/util/node/graphic/path/PathUtil.ts","webpack://bumpy/./src/model/node/graphic/info/path/PrstDiagonalRectBuilder.ts","webpack://bumpy/./src/model/node/graphic/info/path/PrstRectBuilder.ts","webpack://bumpy/./src/model/node/graphic/info/path/PathBuilderFactory.ts","webpack://bumpy/./src/types/model/color/ColorTypes.ts","webpack://bumpy/./src/model/color/Color.ts","webpack://bumpy/./src/model/node/graphic/info/fill/FillBase.ts","webpack://bumpy/./src/types/model/node/graphic/FillTypeEnum.ts","webpack://bumpy/./src/model/node/graphic/info/fill/SolidFill.ts","webpack://bumpy/./src/util/node/graphic/edit/GraphicModelEditingUtil.ts","webpack://bumpy/./src/types/store/container/edit/GraphicEditingHandleEnum.ts","webpack://bumpy/./src/util/node/graphic/coordinate/GraphicModelCoordinateUtil.ts","webpack://bumpy/./src/store/manager/command/simplecommand/SimpleCommand.ts","webpack://bumpy/./src/store/manager/command/simplecommand/node/graphic/SetGraphicAttributeCommand.ts","webpack://bumpy/./src/store/manager/command/simplecommand/node/AppendTreeNodeCommand.ts","webpack://bumpy/./src/store/manager/command/simplecommand/rerender/RequestRerenderTreeNodeComponentCommand.ts","webpack://bumpy/./src/store/manager/command/commandhandler/graphic/GraphicInsertCommandHandler.ts","webpack://bumpy/./src/util/node/graphic/GraphicModelCreateUtil.ts","webpack://bumpy/./src/util/node/graphic/style/FillStyleUtil.ts","webpack://bumpy/./src/store/manager/command/CommandMapper/CommandMapper.ts","webpack://bumpy/./src/store/manager/command/commandhandler/graphic/GraphicMoveCommandHandler.ts","webpack://bumpy/./src/store/manager/command/commandhandler/graphic/GraphicRotateCommandHandler.ts","webpack://bumpy/./src/store/manager/command/commandhandler/graphic/GraphicResizeCommandHandler.ts","webpack://bumpy/./src/store/manager/command/simplecommand/node/RemoveTreeNodeCommand.ts","webpack://bumpy/./src/store/manager/command/simplecommand/node/MoveTreeNodeCommand.ts","webpack://bumpy/./src/store/manager/command/commandhandler/graphic/GraphicDeleteCommandHandler.ts","webpack://bumpy/./src/store/manager/command/commandhandler/graphic/GraphicGroupCommandHandler.ts","webpack://bumpy/./src/store/manager/command/CommandMapper/EditModeCommandMapper.ts","webpack://bumpy/./src/store/manager/command/CommandModeMapper.ts","webpack://bumpy/./src/store/manager/command/CommandManager.ts","webpack://bumpy/./src/store/manager/event/EventHandlerFactory.ts","webpack://bumpy/./src/types/component/node/slide/SlideComponentTypes.ts","webpack://bumpy/./src/util/coordinate/RenderCoordinateUtil.ts","webpack://bumpy/./src/store/manager/event/handler/EventHandler.ts","webpack://bumpy/./src/store/manager/event/handler/graphic/GraphicInsertEventHandler.ts","webpack://bumpy/./src/store/manager/event/handler/graphic/GraphicEventHandler.ts","webpack://bumpy/./src/store/manager/event/handler/graphic/GraphicSelectionEventHandler.ts","webpack://bumpy/./src/store/manager/event/handler/graphic/GraphicMoveEventHandler.ts","webpack://bumpy/./src/store/manager/event/handler/graphic/GraphicRotateEventHandler.ts","webpack://bumpy/./src/store/manager/event/handler/graphic/GraphicResizeEventHandler.ts","webpack://bumpy/./src/store/manager/event/EventMapper.ts","webpack://bumpy/./src/store/manager/event/EventManager.ts","webpack://bumpy/./src/store/manager/selection/SelectionManager.ts","webpack://bumpy/./src/store/AppStore.ts","webpack://bumpy/./src/store/AppStoreProvider.ts","webpack://bumpy/./src/hook/store/useAppStore.ts","webpack://bumpy/./src/util/i18n/I18nInit.ts","webpack://bumpy/./src/component/frame/controlhandler/WithControlHandlerComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/button/ArrowButton.module.scss?4dcc","webpack://bumpy/./src/component/frame/control/button/ArrowButtonComponent.tsx","webpack://bumpy/./src/component/frame/control/button/MoreItemsGalleryArrowButtonComponent.tsx","webpack://bumpy/./src/component/frame/control/dropdown/menu/DropdownMenuItemGroupComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuItem.module.scss?4e97","webpack://bumpy/./src/component/frame/control/dropdown/menu/DropdownMenuItemFactoryComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuSeparator.module.scss?b990","webpack://bumpy/./src/component/frame/control/dropdown/menu/DropdownMenuSeparatorComponent.tsx","webpack://bumpy/./src/component/frame/control/label/LabelComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/dropdown/menu/DropdownMenuTitle.module.scss?5a13","webpack://bumpy/./src/component/frame/control/dropdown/menu/DropdownMenuTitleComponent.tsx","webpack://bumpy/./src/component/frame/control/dropdown/menu/DropdownMenuFactoryComponent.tsx","webpack://bumpy/./src/component/frame/control/dropdown/menu/DropdownMenuComponent.tsx","webpack://bumpy/./src/scss/component/frame/control/gallery/RibbonGallery.module.scss?98fc","webpack://bumpy/./src/scss/component/frame/ribbon/group/RibbonGroupLabelArea.module.scss?1c77","webpack://bumpy/./src/component/frame/ribbon/group/RibbonGroupLabelAreaComponent.tsx","webpack://bumpy/./src/scss/component/frame/ribbon/group/RibbonGroup.module.scss?21c1","webpack://bumpy/./src/component/frame/control/getControl.tsx","webpack://bumpy/./src/component/frame/ribbon/group/RibbonGroupComponent.tsx","webpack://bumpy/./src/component/frame/control/gallery/RibbonGalleryComponent.tsx","webpack://bumpy/./src/hook/component/frame/control/dropdown/useDropdownMenu.ts","webpack://bumpy/./src/scss/component/frame/ribbon/group/RibbonGroupWrapper.module.scss?a286","webpack://bumpy/./src/component/frame/ribbon/group/RibbonGroupWrapperComponent.tsx","webpack://bumpy/./src/component/frame/ribbon/RibbonComponent.tsx","webpack://bumpy/./src/scss/component/frame/workarea/WorkArea.module.scss?1f80","webpack://bumpy/./src/scss/component/frame/workarea/content/Content.module.scss?65e9","webpack://bumpy/./src/hook/store/useRerender.ts","webpack://bumpy/./src/types/component/frame/workarea/edit/EditViewTypes.ts","webpack://bumpy/./src/hook/event/useResizeObserver.ts","webpack://bumpy/./src/hook/component/node/useRenderChildren.tsx","webpack://bumpy/./src/scss/component/node/slide/Slide.module.scss?3f8c","webpack://bumpy/./src/hook/component/node/useTreeNodeRerender.tsx","webpack://bumpy/./src/component/node/slide/SlideBackgroundComponent.tsx","webpack://bumpy/./src/store/manager/event/wrapper/BaseEvent.ts","webpack://bumpy/./src/store/manager/event/wrapper/MouseEvent.ts","webpack://bumpy/./src/store/manager/event/wrapper/WheelEvent.ts","webpack://bumpy/./src/store/manager/event/wrapper/KeyEvent.ts","webpack://bumpy/./src/util/event/isMac.ts","webpack://bumpy/./src/hook/event/useEventListener.ts","webpack://bumpy/./src/component/node/slide/SlideEventComponent.tsx","webpack://bumpy/./src/model/node/graphic/info/path/EventRectBuilder.ts","webpack://bumpy/./src/scss/component/node/slide/selectionlayer/graphic/GraphicSelection.module.scss?294e","webpack://bumpy/./src/component/node/slide/selectionlayer/graphic/GraphicSelectionComponent.tsx","webpack://bumpy/./src/types/component/node/slide/selectionlayer/graphic/GraphicSelectionComponentTypes.tsx","webpack://bumpy/./src/hook/component/node/slide/selectionlayer/graphic/useGraphicSelectionComponent.ts","webpack://bumpy/./src/hook/component/node/slide/selectionlayer/graphic/useGraphicSelectionComponentEventListener.ts","webpack://bumpy/./src/util/node/slide/selectionlayer/graphic/GraphicSelectionComponentUtil.ts","webpack://bumpy/./src/component/node/slide/selectionlayer/SelectionLayerComponent.tsx","webpack://bumpy/./src/scss/component/node/slide/EditPreviewLayer.module.scss?639d","webpack://bumpy/./src/component/node/slide/editpreviewlayer/EditPreviewLayerComponent.tsx","webpack://bumpy/./src/util/node/graphic/component/GraphicWrapperComponentUtil.ts","webpack://bumpy/./src/scss/component/node/graphic/GraphicWrapper.module.scss?4ac8","webpack://bumpy/./src/component/node/graphic/GraphicComponent.tsx","webpack://bumpy/./src/hook/component/node/graphic/useGraphicComponentEventListener.ts","webpack://bumpy/./src/util/node/graphic/component/GraphicComponentUtil.tsx","webpack://bumpy/./src/scss/component/node/graphic/GraphicChildWrapper.module.scss?8e9c","webpack://bumpy/./src/component/node/graphic/GraphicChildWrapperComponent.tsx","webpack://bumpy/./src/component/node/factory/TreeNodeComponentMap.tsx","webpack://bumpy/./src/component/node/slide/SlideComponent.tsx","webpack://bumpy/./src/hook/component/node/slide/useSlideSize.ts","webpack://bumpy/./src/component/node/graphic/GraphicWrapperComponent.tsx","webpack://bumpy/./src/component/node/factory/TreeNodeFactoryComponent.tsx","webpack://bumpy/./src/scss/component/frame/workarea/edit/EditView.module.scss?77e8","webpack://bumpy/./src/component/frame/workarea/edit/EditViewComponent.tsx","webpack://bumpy/./src/hook/component/frame/workarea/composite/useCompositeViewDivider.ts","webpack://bumpy/./src/scss/component/frame/workarea/composite/CompositeView.module.scss?08d5","webpack://bumpy/./src/component/frame/workarea/composite/CompositeViewComponent.tsx","webpack://bumpy/./src/component/frame/workarea/list/ListViewComponent.tsx","webpack://bumpy/./src/component/frame/workarea/note/NoteViewComponent.tsx","webpack://bumpy/./src/component/frame/workarea/content/ContentComponent.tsx","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneWrapper.module.scss?36a1","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneDock.module.scss?04e9","webpack://bumpy/./src/scss/component/frame/workarea/toolpane/ToolPaneDockButton.module.scss?de76","webpack://bumpy/./src/component/frame/workarea/toolpane/ToolPaneDockButtonComponent.tsx","webpack://bumpy/./src/component/frame/workarea/toolpane/ToolPaneDockComponent.tsx","webpack://bumpy/./src/component/frame/workarea/toolpane/ToolPaneWrapperComponent.tsx","webpack://bumpy/./src/component/frame/workarea/WorkAreaComponent.tsx","webpack://bumpy/./src/scss/component/frame/mainpage/MainPage.module.scss?b9a8","webpack://bumpy/./src/hook/event/useRegisterEventListener.ts","webpack://bumpy/./src/scss/component/frame/mainpage/proxylayer/apparea/AppAreaProxyLayer.module.scss?1834","webpack://bumpy/./src/hook/cursor/useCursorStyle.ts","webpack://bumpy/./src/hook/component/frame/mainpage/proxylayer/apparea/useAppAreaProxyCursorStyle.ts","webpack://bumpy/./src/component/frame/mainpage/proxylayer/apparea/AppAreaEventProxyComponent.tsx","webpack://bumpy/./src/hook/component/frame/mainpage/proxylayer/apparea/useAppAreaProxyEventListener.ts","webpack://bumpy/./src/component/frame/mainpage/proxylayer/apparea/AppAreaEventBlockComponent.tsx","webpack://bumpy/./src/component/frame/mainpage/proxylayer/apparea/AppAreaProxyLayerComponent.tsx","webpack://bumpy/./src/scss/component/frame/mainpage/proxylayer/editview/EditViewProxyLayer.module.scss?95a0","webpack://bumpy/./src/component/frame/mainpage/proxylayer/editview/EditViewEventProxyComponent.tsx","webpack://bumpy/./src/hook/component/frame/mainpage/proxylayer/editview/useEditViewProxyLayer.ts","webpack://bumpy/./src/hook/component/frame/mainpage/proxylayer/editview/useEditViewProxyEventListener.ts","webpack://bumpy/./src/hook/component/frame/mainpage/proxylayer/editview/useEditViewProxyCursorStyle.ts","webpack://bumpy/./src/component/frame/mainpage/proxylayer/editview/EditViewProxyLayerComponent.tsx","webpack://bumpy/./src/component/frame/mainpage/MainPageComponent.tsx","webpack://bumpy/./src/hook/component/frame/mainpage/useMousePressedTracker.ts","webpack://bumpy/./src/hook/component/frame/style/cursor/useCursorStyleComponent.ts","webpack://bumpy/./src/component/frame/style/cursor/CursorStyleComponent.tsx","webpack://bumpy/./src/component/frame/style/cursor/CursorStyleWrapperComponent.tsx","webpack://bumpy/./src/component/frame/app/AppComponent.tsx","webpack://bumpy/./src/hook/event/shortcut/useShortcut.ts","webpack://bumpy/./src/index.tsx","webpack://bumpy/./src/resource/color/PresetColorMap.ts","webpack://bumpy/./src/resource/ribbon/RibbonData.ts","webpack://bumpy/./src/resource/style/cursor/PresetCursorStyle.ts","webpack://bumpy/./src/types/common/cursor/CursorTypes.ts","webpack://bumpy/./src/types/component/frame/control/ControlSubTypeEnum.ts","webpack://bumpy/./src/types/component/frame/control/ControlTypeEnum.ts","webpack://bumpy/./src/types/model/node/graphic/ShapeTypeEnum.ts","webpack://bumpy/./src/types/resource/ReactKeyEnum.ts","webpack://bumpy/./src/types/resource/ResourceEnum.ts","webpack://bumpy/./src/types/store/command/CommandEnum.ts","webpack://bumpy/./src/resource/ lazy ^\\.\\/.*\\/.*$ namespace object","webpack://bumpy/webpack/bootstrap","webpack://bumpy/webpack/runtime/amd define","webpack://bumpy/webpack/runtime/amd options","webpack://bumpy/webpack/runtime/compat get default export","webpack://bumpy/webpack/runtime/define property getters","webpack://bumpy/webpack/runtime/ensure chunk","webpack://bumpy/webpack/runtime/get javascript chunk filename","webpack://bumpy/webpack/runtime/get mini-css chunk filename","webpack://bumpy/webpack/runtime/global","webpack://bumpy/webpack/runtime/hasOwnProperty shorthand","webpack://bumpy/webpack/runtime/make namespace object","webpack://bumpy/webpack/runtime/node module decorator","webpack://bumpy/webpack/runtime/publicPath","webpack://bumpy/webpack/runtime/jsonp chunk loading","webpack://bumpy/webpack/runtime/nonce","webpack://bumpy/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"bumpy:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Bold.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Bold.woff\";\nimport ___CSS_LOADER_URL_IMPORT_2___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Light.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_3___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Light.woff\";\nimport ___CSS_LOADER_URL_IMPORT_4___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Medium.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_5___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Medium.woff\";\nimport ___CSS_LOADER_URL_IMPORT_6___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Regular.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_7___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Regular.woff\";\nimport ___CSS_LOADER_URL_IMPORT_8___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Thin.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_9___ from \"../../../../resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Thin.woff\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_8___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_9___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face{font-family:\\\"Spoqa Han Sans Neo\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format(\\\"woff2\\\"),url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format(\\\"woff\\\");font-weight:700;font-display:swap}@font-face{font-family:\\\"Spoqa Han Sans Neo\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format(\\\"woff2\\\"),url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format(\\\"woff\\\");font-weight:300;font-display:swap}@font-face{font-family:\\\"Spoqa Han Sans Neo\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \") format(\\\"woff2\\\"),url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \") format(\\\"woff\\\");font-weight:500;font-display:swap}@font-face{font-family:\\\"Spoqa Han Sans Neo\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \") format(\\\"woff2\\\"),url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \") format(\\\"woff\\\");font-weight:400;font-display:swap}@font-face{font-family:\\\"Spoqa Han Sans Neo\\\";src:url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \") format(\\\"woff2\\\"),url(\" + ___CSS_LOADER_URL_REPLACEMENT_9___ + \") format(\\\"woff\\\");font-weight:200;font-display:swap}.src-scss-component-frame-app-App-module__container--bmOcf{--app_color: 67,155,237;--app_border_color: 126,182,234;--app_hovered_color: 222,228,234;display:flex;flex:1;flex-direction:column;font-family:\\\"Spoqa Han Sans Neo\\\",\\\"sans-serif\\\";outline:0;overflow:auto;user-select:none;white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/common/fonts.scss\",\"webpack://./src/scss/component/frame/app/App.module.scss\"],\"names\":[],\"mappings\":\"AAAA,WACE,gCAAA,CACA,kHAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,gCAAA,CACA,kHAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,gCAAA,CACA,kHAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,gCAAA,CACA,kHAAA,CACA,eAAA,CACA,iBAAA,CAGF,WACE,gCAAA,CACA,kHAAA,CACA,eAAA,CACA,iBAAA,CCvBF,2DACE,uBAAA,CACA,+BAAA,CACA,gCAAA,CAEA,YAAA,CACA,MAAA,CACA,qBAAA,CAEA,6CAAA,CACA,SAAA,CACA,aAAA,CACA,gBAAA,CACA,oBAAA\",\"sourcesContent\":[\"@font-face {\\n  font-family: 'Spoqa Han Sans Neo';\\n  src: url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Bold.woff2') format('woff2'), url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Bold.woff') format('woff');\\n  font-weight: 700;\\n  font-display: swap;\\n}\\n\\n@font-face {\\n  font-family: 'Spoqa Han Sans Neo';\\n  src: url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Light.woff2') format('woff2'), url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Light.woff') format('woff');\\n  font-weight: 300;\\n  font-display: swap;\\n}\\n\\n@font-face {\\n  font-family: 'Spoqa Han Sans Neo';\\n  src: url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Medium.woff2') format('woff2'), url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Medium.woff') format('woff');\\n  font-weight: 500;\\n  font-display: swap;\\n}\\n\\n@font-face {\\n  font-family: 'Spoqa Han Sans Neo';\\n  src: url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Regular.woff2') format('woff2'), url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Regular.woff') format('woff');\\n  font-weight: 400;\\n  font-display: swap;\\n}\\n\\n@font-face {\\n  font-family: 'Spoqa Han Sans Neo';\\n  src: url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Thin.woff2') format('woff2'), url('resource/fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Thin.woff') format('woff');\\n  font-weight: 200;\\n  font-display: swap;\\n}\\n\",\"@use 'scss/common/common_color';\\n@use 'scss/helper';\\n\\n/*\\n * 주의!\\n * fonts는 한 번만 import 할 것\\n */\\n@import 'scss/common/fonts';\\n\\n.container {\\n  --app_color: #{helper.hex-to-rgb-string(common_color.$default_app_color)};\\n  --app_border_color: #{helper.hex-to-rgb-string(common_color.$default_app_border_color)};\\n  --app_hovered_color: #{helper.hex-to-rgb-string(common_color.$default_app_hovered_color)};\\n\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n\\n  font-family: 'Spoqa Han Sans Neo', 'sans-serif';\\n  outline: 0;\\n  overflow: auto;\\n  user-select: none;\\n  white-space: pre-wrap; \\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-app-App-module__container--bmOcf\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__disabled--lfFye svg{color:#3e4248;font-size:12px;opacity:.3;text-align:center}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4{border-width:1px;height:24px;width:16px}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__up--k48D6{padding-left:1px}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__up--k48D6>svg{transform:rotateX(180deg)}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__down--1yzGJ{padding-left:1px}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__more--eRgBf{border-top-width:0}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__disabled--lfFye{pointer-events:none}.src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4.src-scss-component-frame-control-button-ArrowButton-module__disabled--lfFye svg{opacity:.3}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/common/_common_font.scss\",\"webpack://./src/scss/common/_common_color.scss\",\"webpack://./src/scss/component/frame/control/button/ArrowButton.module.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAgBA,8JACE,aCHa,CDIb,cAAA,CACA,UAAA,CACA,iBAAA,CEjBF,8EACE,gBAAA,CACA,WAAA,CACA,UCEmB,CAAA,oJDCjB,gBAAA,CAEA,wJACE,yBAAA,CAIJ,sJACE,gBAAA,CAGF,sJACE,kBAAA,CAGF,0JACE,mBAAA,CAEA,8JAEE,UAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n// default\\n%default_main_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  text-align: left;\\n}\\n\\n// ribbon group\\n%ribbon_group_center {\\n    font-size: 12px;\\n    text-align: center;\\n}\\n\\n// ribbon\\n%ribbon_comp_disable_center {\\n  color: common_color.$ribbon_black;\\n  font-size: 12px;\\n  opacity: 0.3;\\n  text-align: center;\\n}\\n\\n// ribbon dropdown\\n%ribbon_dropdown_title_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\n// toolpane\\n%toolpane_title_left {\\n  color: #8e939e;\\n  font-size: 15px;\\n  text-align: left;\\n}\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\",\"@use 'scss/common/common_size';\\n@use 'scss/common/common_font';\\n\\n.container {\\n  border-width: 1px;\\n  height: common_size.$button_height;\\n  width: common_size.$button_arrow_width;\\n\\n  &.up {\\n    padding-left: 1px;\\n\\n    >svg {\\n      transform: rotateX(180deg);\\n    }\\n  }\\n\\n  &.down {\\n    padding-left: 1px;\\n  }\\n\\n  &.more {\\n    border-top-width: 0;\\n  }\\n\\n  &.disabled {\\n    pointer-events: none;\\n    \\n    svg {\\n      @extend %ribbon_comp_disable_center;\\n      opacity: 0.3;\\n    }\\n  }\\n}\\n\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-button-ArrowButton-module__container--QYAF4\",\n\t\"disabled\": \"src-scss-component-frame-control-button-ArrowButton-module__disabled--lfFye\",\n\t\"up\": \"src-scss-component-frame-control-button-ArrowButton-module__up--k48D6\",\n\t\"down\": \"src-scss-component-frame-control-button-ArrowButton-module__down--1yzGJ\",\n\t\"more\": \"src-scss-component-frame-control-button-ArrowButton-module__more--eRgBf\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-button-Icon-module__icon--NeS5S{align-items:center;display:flex;justify-content:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/button/Icon.module.scss\"],\"names\":[],\"mappings\":\"AAAA,kEACE,kBAAA,CACA,YAAA,CACA,sBAAA\",\"sourcesContent\":[\".icon {\\n  align-items: center;\\n  display: flex;\\n  justify-content: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"icon\": \"src-scss-component-frame-control-button-Icon-module__icon--NeS5S\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-dropdown-menu-DropdownMenu-module__container--vCOj3{color:#3e4248;font-size:12px;text-align:left}.src-scss-component-frame-control-dropdown-menu-DropdownMenu-module__container--vCOj3{background-color:#fff;border:1px solid #e2e2e2;box-shadow:rgba(0,0,0,.2) 0 0 4px 2px;left:0;margin:0;outline:rgba(0,0,0,0);overflow-y:auto;padding:0;position:fixed;top:0;z-index:10002}.src-scss-component-frame-control-dropdown-menu-DropdownMenu-module__container--vCOj3.src-scss-component-frame-control-dropdown-menu-DropdownMenu-module__shape_insert_gallery--D88cx{height:500px;width:265px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/common/_common_font.scss\",\"webpack://./src/scss/common/_common_color.scss\",\"webpack://./src/scss/component/frame/control/dropdown/menu/DropdownMenu.module.scss\",\"webpack://./src/scss/_mix_in.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAGA,sFACE,aCFa,CDGb,cAAA,CACA,eAAA,CEHF,sFCEE,qBFaiC,CEZjC,wBAAA,CACA,qCAAA,CACA,MAAA,CACA,QAAA,CACA,qBAAA,CACA,eAAA,CACA,SAAA,CACA,cAAA,CACA,KAAA,CACA,aAAA,CDTA,sLACE,YEmCkC,CFlClC,WEiCiC\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n// default\\n%default_main_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  text-align: left;\\n}\\n\\n// ribbon group\\n%ribbon_group_center {\\n    font-size: 12px;\\n    text-align: center;\\n}\\n\\n// ribbon\\n%ribbon_comp_disable_center {\\n  color: common_color.$ribbon_black;\\n  font-size: 12px;\\n  opacity: 0.3;\\n  text-align: center;\\n}\\n\\n// ribbon dropdown\\n%ribbon_dropdown_title_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\n// toolpane\\n%toolpane_title_left {\\n  color: #8e939e;\\n  font-size: 15px;\\n  text-align: left;\\n}\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\",\"@use 'scss/common/common_size';\\n@use 'scss/mix_in';\\n\\n.container {\\n  @include mix_in.menu_base;\\n\\n  &.shape_insert_gallery {\\n    height: common_size.$ribbon_dropdown_shape_insert_height;\\n    width: common_size.$ribbon_dropdown_shape_insert_width;\\n  }\\n}\\n\",\"@use 'scss/common/common_color';\\n@use 'scss/common/common_font';\\n\\n@mixin menu_base {\\n  @extend %default_main_left;\\n  background-color: common_color.$ribbon_dropdown_background_white;\\n  border: 1px solid common_color.$ribbon_dropdown_border_gray;\\n  box-shadow: rgba(0, 0, 0, 0.2) 0 0 4px 2px;\\n  left: 0;\\n  margin: 0;\\n  outline: transparent;\\n  overflow-y: auto;\\n  padding: 0;\\n  position: fixed;\\n  top: 0;\\n  z-index: 10002;\\n}\\n\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenu-module__container--vCOj3\",\n\t\"shape_insert_gallery\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenu-module__shape_insert_gallery--D88cx\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL{align-items:center;border-color:rgba(0,0,0,0);border-style:solid;border-width:1px;box-sizing:border-box;cursor:default;display:flex}.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__disabled--n1ETt{opacity:.3;pointer-events:none}.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__a1--wSBlL:hover,.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__a1--wSBlL:focus{background-color:rgba(var(--app_color), 0.15)}.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__a1--wSBlL:active,.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__a1--wSBlL.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__selected--W7B7m{background-color:rgba(var(--app_color), 0.3)}.src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL .src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__content--idqMI{align-items:center;border-right:1px solid #ececec;display:flex;height:100%;justify-content:center;width:28px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/dropdown/menu/DropdownMenuItem.module.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAIA,0FACE,kBAAA,CACA,0BAAA,CACA,kBAAA,CACA,gBAAA,CACA,qBAAA,CACA,cAAA,CACA,YAAA,CAEA,kLACE,UAAA,CACA,mBAAA,CAIA,oWAEE,6CAAA,CAGF,ubAEE,4CAAA,CAIJ,kLACE,kBAAA,CACA,8BAAA,CACA,YAAA,CACA,WAAA,CACA,sBAAA,CACA,UCE0B\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n@use 'scss/common/common_size';\\n@use 'scss/variables';\\n\\n.container {\\n  align-items: center;\\n  border-color: transparent;\\n  border-style: solid;\\n  border-width: 1px;\\n  box-sizing: border-box;\\n  cursor: default;\\n  display: flex;\\n\\n  &.disabled {\\n    opacity: 0.3;\\n    pointer-events: none;\\n  }\\n\\n  &.a1 {\\n    &:hover,\\n    &:focus {\\n      background-color: rgba(variables.$app_color, 0.15);\\n    }\\n\\n    &:active,\\n    &.selected {\\n      background-color: rgba(variables.$app_color, 0.3);\\n    }\\n  }\\n\\n  .content {\\n    align-items: center;\\n    border-right: 1px solid common_color.$default_border_gray;\\n    display: flex;\\n    height: 100%;\\n    justify-content: center;\\n    width: common_size.$ribbon_dropdown_item_height;\\n  }\\n}\\n\\n\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__container--wRCbL\",\n\t\"disabled\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__disabled--n1ETt\",\n\t\"a1\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__a1--wSBlL\",\n\t\"selected\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__selected--W7B7m\",\n\t\"content\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItem-module__content--idqMI\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-dropdown-menu-DropdownMenuItemGroup-module__container--2yT3U{overflow-y:auto}.src-scss-component-frame-control-dropdown-menu-DropdownMenuItemGroup-module__shape_insert_gallery--UHqE1{display:flex;flex-wrap:wrap;padding:0 8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/dropdown/menu/DropdownMenuItemGroup.module.scss\"],\"names\":[],\"mappings\":\"AAEA,+FACE,eAAA,CAGF,0GACE,YAAA,CACA,cAAA,CACA,aAAA\",\"sourcesContent\":[\"@use 'scss/common/common_size';\\n\\n.container {\\n  overflow-y: auto;\\n}\\n\\n.shape_insert_gallery {\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: 0 common_size.$ribbon_dropdown_basic_margin;\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItemGroup-module__container--2yT3U\",\n\t\"shape_insert_gallery\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuItemGroup-module__shape_insert_gallery--UHqE1\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-dropdown-menu-DropdownMenuSeparator-module__line--2dyce{display:flex;flex:1;height:5px;justify-content:center}.src-scss-component-frame-control-dropdown-menu-DropdownMenuSeparator-module__line--2dyce.src-scss-component-frame-control-dropdown-menu-DropdownMenuSeparator-module__full--ok0k0{background-color:#d4d4d7}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/dropdown/menu/DropdownMenuSeparator.module.scss\",\"webpack://./src/scss/common/_common_size.scss\",\"webpack://./src/scss/common/_common_color.scss\"],\"names\":[],\"mappings\":\"AAGA,0FACE,YAAA,CACA,MAAA,CACA,UC+BiC,CD9BjC,sBAAA,CAEA,mLACE,wBEU6B\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n@use 'scss/common/common_size';\\n\\n.line {\\n  display: flex;\\n  flex: 1;\\n  height: common_size.$ribbon_dropdown_separator_height;\\n  justify-content: center;\\n\\n  &.full {\\n    background-color: common_color.$ribbon_dropdown_separator_gray;\\n  }\\n}\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"line\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuSeparator-module__line--2dyce\",\n\t\"full\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuSeparator-module__full--ok0k0\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__container--9DMFB{color:#3e4248;font-size:12px;font-weight:bold;text-align:left}.src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__container--9DMFB{cursor:default;display:flex;flex-direction:column;line-height:12px;padding:8px 0}.src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__container--9DMFB .src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__content--UePXl{align-items:center;display:flex;margin:0 8px}.src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__container--9DMFB .src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__content--UePXl::after{border-color:rgba(0,0,0,.1);border-style:solid;border-width:1px;content:\\\"\\\";flex:1;height:0;margin-left:8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/common/_common_font.scss\",\"webpack://./src/scss/common/_common_color.scss\",\"webpack://./src/scss/component/frame/control/dropdown/menu/DropdownMenuTitle.module.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAwBA,2FACE,aCvBa,CDwBb,cAAA,CACA,gBAAA,CACA,eAAA,CEvBF,2FAEE,cAAA,CACA,YAAA,CACA,qBAAA,CACA,gBAAA,CACA,aAAA,CAEA,oLACE,kBAAA,CACA,YAAA,CACA,YAAA,CAEA,2LACE,2BAAA,CACA,kBAAA,CACA,gBAAA,CACA,UAAA,CACA,MAAA,CACA,QAAA,CACA,eCUyB\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n// default\\n%default_main_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  text-align: left;\\n}\\n\\n// ribbon group\\n%ribbon_group_center {\\n    font-size: 12px;\\n    text-align: center;\\n}\\n\\n// ribbon\\n%ribbon_comp_disable_center {\\n  color: common_color.$ribbon_black;\\n  font-size: 12px;\\n  opacity: 0.3;\\n  text-align: center;\\n}\\n\\n// ribbon dropdown\\n%ribbon_dropdown_title_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\n// toolpane\\n%toolpane_title_left {\\n  color: #8e939e;\\n  font-size: 15px;\\n  text-align: left;\\n}\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\",\"@use 'scss/common/common_size';\\n@use 'scss/common/common_color';\\n@use 'scss/common/common_font';\\n@use 'sass:color';\\n\\n.container {\\n  @extend %ribbon_dropdown_title_left;\\n  cursor: default;\\n  display: flex;\\n  flex-direction: column;\\n  line-height: 12px;\\n  padding: common_size.$ribbon_dropdown_basic_margin 0;\\n\\n  .content {\\n    align-items: center;\\n    display: flex;\\n    margin: 0 common_size.$ribbon_dropdown_basic_margin;\\n\\n    &::after {\\n      border-color: color.adjust(common_color.$default_black, $alpha: -0.9);\\n      border-style: solid;\\n      border-width: 1px;\\n      content: '';\\n      flex: 1;\\n      height: 0;\\n      margin-left: common_size.$ribbon_dropdown_basic_margin;\\n    }\\n  }\\n}\\n\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__container--9DMFB\",\n\t\"content\": \"src-scss-component-frame-control-dropdown-menu-DropdownMenuTitle-module__content--UePXl\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-gallery-RibbonGallery-module__container--NXncB{display:flex;height:72px}.src-scss-component-frame-control-gallery-RibbonGallery-module__container--NXncB.src-scss-component-frame-control-gallery-RibbonGallery-module__ga1--pEnIH{width:160px}.src-scss-component-frame-control-gallery-RibbonGallery-module__container--NXncB.src-scss-component-frame-control-gallery-RibbonGallery-module__disabled--MbTbm{opacity:.3;pointer-events:none}.src-scss-component-frame-control-gallery-RibbonGallery-module__content--u9tOD{align-content:flex-start;border-color:#d5d5d5;border-style:solid;border-width:1px 0 1px 1px;display:flex;flex:1;flex-wrap:wrap;overflow:hidden}.src-scss-component-frame-control-gallery-RibbonGallery-module__content--u9tOD.src-scss-component-frame-control-gallery-RibbonGallery-module__rg1--Pl2QJ{gap:1px;padding:1px}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow-container--UG24s{display:flex;flex-direction:column}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI{align-items:center;background-color:#fff;border-color:#d5d5d5;border-style:solid;border-width:1px;display:flex;height:24px;justify-content:center;width:13px}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI.src-scss-component-frame-control-gallery-RibbonGallery-module__down--CWIPV{border-top-width:0}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI.src-scss-component-frame-control-gallery-RibbonGallery-module__down--CWIPV:hover{border-top-width:1px}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI.src-scss-component-frame-control-gallery-RibbonGallery-module__more--\\\\+jV2m{border-top-width:0}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI.src-scss-component-frame-control-gallery-RibbonGallery-module__more--\\\\+jV2m:hover{border-top-width:1px}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI:hover{background-color:rgba(var(--app_color), 0.1);border-color:rgb(var(--app_border_color))}.src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI:active{background-color:rgba(var(--app_color), 0.5);border-color:rgb(var(--app_color))}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/gallery/RibbonGallery.module.scss\",\"webpack://./src/scss/common/_common_size.scss\",\"webpack://./src/scss/common/_common_color.scss\"],\"names\":[],\"mappings\":\"AAIA,iFACE,YAAA,CACA,WCkByB,CDhBzB,2JACE,WCcsB,CDXxB,gKACE,UAAA,CACA,mBAAA,CAIJ,+EACE,wBAAA,CACA,oBELmB,CFMnB,kBAAA,CACA,0BAAA,CACA,YAAA,CACA,MAAA,CACA,cAAA,CACA,eAAA,CAEA,yJACE,OAAA,CACA,WAAA,CAIJ,uFACE,YAAA,CACA,qBAAA,CAGF,6EACE,kBAAA,CACA,qBE5BwB,CF6BxB,oBE3BmB,CF4BnB,kBAAA,CACA,gBAAA,CACA,YAAA,CACA,WCfkB,CDgBlB,sBAAA,CACA,UChC0B,CDkC1B,wJACE,kBAAA,CAEA,8JACE,oBAAA,CAIJ,yJACE,kBAAA,CAEA,+JACE,oBAAA,CAIJ,mFACE,4CAAA,CACA,yCAAA,CAGF,oFACE,4CAAA,CACA,kCAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n@use 'scss/common/common_size';\\n@use 'scss/variables';\\n\\n.container {\\n  display: flex;\\n  height: common_size.$ribbon_gallery_height_01;\\n\\n  &.ga1 {\\n    width: common_size.$ribbon_gallery_width_01;\\n  }\\n\\n  &.disabled {\\n    opacity: 0.3;\\n    pointer-events: none;\\n  }\\n}\\n\\n.content {\\n  align-content: flex-start;\\n  border-color: common_color.$ribbon_border_gray;\\n  border-style: solid;\\n  border-width: 1px 0 1px 1px;\\n  display: flex;\\n  flex: 1;\\n  flex-wrap: wrap;\\n  overflow: hidden;\\n\\n  &.rg1 {\\n    gap: 1px;\\n    padding: 1px;\\n  }  \\n}\\n\\n.arrow-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.arrow {\\n  align-items: center;\\n  background-color: common_color.$ribbon_background_white;\\n  border-color: common_color.$ribbon_border_gray;\\n  border-style: solid;\\n  border-width: 1px;\\n  display: flex;\\n  height: common_size.$ribbon_comp_width;\\n  justify-content: center;\\n  width: common_size.$ribbon_button_arrow_width;\\n\\n  &.down {\\n    border-top-width: 0;\\n\\n    &:hover {\\n      border-top-width: 1px;\\n    }\\n  }\\n\\n  &.more {\\n    border-top-width: 0;\\n\\n    &:hover {\\n      border-top-width: 1px;\\n    }\\n  }\\n\\n  &:hover {\\n    background-color: rgba(variables.$app_color, 0.1);\\n    border-color: rgb(variables.$app_border_color);\\n  }\\n\\n  &:active {\\n    background-color: rgba(variables.$app_color, 0.5);\\n    border-color: rgb(variables.$app_color);\\n  }\\n}\\n\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__container--NXncB\",\n\t\"ga1\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__ga1--pEnIH\",\n\t\"disabled\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__disabled--MbTbm\",\n\t\"content\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__content--u9tOD\",\n\t\"rg1\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__rg1--Pl2QJ\",\n\t\"arrow-container\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__arrow-container--UG24s\",\n\t\"arrow\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__arrow--bFIMI\",\n\t\"down\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__down--CWIPV\",\n\t\"more\": \"src-scss-component-frame-control-gallery-RibbonGallery-module__more--+jV2m\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-gallery-RibbonGalleryItem-module__gallery_item--QqBKQ{height:22px;width:22px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/gallery/RibbonGalleryItem.module.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAEA,wFACE,WCwB2B,CDvB3B,UCwB0B\",\"sourcesContent\":[\"@use 'scss/common/common_size';\\n\\n.gallery_item {\\n  height: common_size.$ribbon_gallery_item_height;\\n  width: common_size.$ribbon_gallery_item_width;\\n}\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"gallery_item\": \"src-scss-component-frame-control-gallery-RibbonGalleryItem-module__gallery_item--QqBKQ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z{align-items:center;display:flex;justify-content:center}.src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z.src-scss-component-frame-control-label-RibbonLabel-module__disabled--Xu-kz{opacity:.3;pointer-events:none}.src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z.src-scss-component-frame-control-label-RibbonLabel-module__gi1--AO1Di{border:1px solid rgba(0,0,0,0);box-sizing:border-box;height:24px;width:24px}.src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z.src-scss-component-frame-control-label-RibbonLabel-module__gi1--AO1Di:hover{background-color:rgba(var(--app_color), 0.2)}.src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z.src-scss-component-frame-control-label-RibbonLabel-module__gi1--AO1Di:active{background-color:rgba(var(--app_color), 0.5)}.src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z.src-scss-component-frame-control-label-RibbonLabel-module__gi1--AO1Di.src-scss-component-frame-control-label-RibbonLabel-module__selected---wI1D{background-color:rgba(var(--app_color), 0.5)}.src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z.src-scss-component-frame-control-label-RibbonLabel-module__gi1--AO1Di.src-scss-component-frame-control-label-RibbonLabel-module__selected---wI1D:hover{background-color:rgba(var(--app_color), 0.2);border-color:rgba(var(--app_color), 0.5)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/control/label/RibbonLabel.module.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAGA,6EACE,kBAAA,CACA,YAAA,CACA,sBAAA,CAEA,wJACE,UAAA,CACA,mBAAA,CAGF,mJACE,8BAAA,CACA,qBAAA,CACA,WCgBiB,CDfjB,UCcgB,CDZhB,yJACE,4CAAA,CAGF,0JACE,4CAAA,CAGF,8NACE,4CAAA,CAEA,oOACE,4CAAA,CACA,wCAAA\",\"sourcesContent\":[\"@use 'scss/common/common_size';\\n@use 'scss/variables';\\n\\n.container {\\n  align-items: center;\\n  display: flex;\\n  justify-content: center;\\n\\n  &.disabled {\\n    opacity: 0.3;\\n    pointer-events: none;\\n  }\\n\\n  &.gi1 {\\n    border: common_size.$default_border_width solid transparent;\\n    box-sizing: border-box;\\n    height: common_size.$ribbon_comp_height;\\n    width: common_size.$ribbon_comp_width;\\n\\n    &:hover {\\n      background-color: rgba(variables.$app-color, 0.2);\\n    }\\n\\n    &:active {\\n      background-color: rgba(variables.$app-color, 0.5);\\n    }\\n\\n    &.selected {\\n      background-color: rgba(variables.$app-color, 0.5);\\n\\n      &:hover {\\n        background-color: rgba(variables.$app-color, 0.2);\\n        border-color: rgba(variables.$app-color, 0.5);\\n      }\\n    }\\n  }\\n}\\n\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-control-label-RibbonLabel-module__container--iM06Z\",\n\t\"disabled\": \"src-scss-component-frame-control-label-RibbonLabel-module__disabled--Xu-kz\",\n\t\"gi1\": \"src-scss-component-frame-control-label-RibbonLabel-module__gi1--AO1Di\",\n\t\"selected\": \"src-scss-component-frame-control-label-RibbonLabel-module__selected---wI1D\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-mainpage-MainPage-module__container--T5Tqi{display:flex;flex:1;flex-direction:column;overflow:hidden}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/mainpage/MainPage.module.scss\"],\"names\":[],\"mappings\":\"AAAA,qEACE,YAAA,CACA,MAAA,CACA,qBAAA,CACA,eAAA\",\"sourcesContent\":[\".container {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-mainpage-MainPage-module__container--T5Tqi\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-mainpage-proxylayer-apparea-AppAreaProxyLayer-module__container--Uzp2D{height:100%;left:0;position:absolute;top:0;width:100%}.src-scss-component-frame-mainpage-proxylayer-apparea-AppAreaProxyLayer-module__container--Uzp2D .src-scss-component-frame-mainpage-proxylayer-apparea-AppAreaProxyLayer-module__block_event--a8kAi{pointer-events:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/mainpage/proxylayer/apparea/AppAreaProxyLayer.module.scss\"],\"names\":[],\"mappings\":\"AAAA,iGACE,WAAA,CACA,MAAA,CACA,iBAAA,CACA,KAAA,CACA,UAAA,CAEA,oMACE,mBAAA\",\"sourcesContent\":[\".container {\\n  height: 100%;\\n  left: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n\\n  .block_event {\\n    pointer-events: none;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-mainpage-proxylayer-apparea-AppAreaProxyLayer-module__container--Uzp2D\",\n\t\"block_event\": \"src-scss-component-frame-mainpage-proxylayer-apparea-AppAreaProxyLayer-module__block_event--a8kAi\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-mainpage-proxylayer-editview-EditViewProxyLayer-module__container--QzTci{position:absolute}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/mainpage/proxylayer/editview/EditViewProxyLayer.module.scss\"],\"names\":[],\"mappings\":\"AAAA,mGACE,iBAAA\",\"sourcesContent\":[\".container {\\n  position: absolute;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-mainpage-proxylayer-editview-EditViewProxyLayer-module__container--QzTci\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-ribbon-group-RibbonGroup-module__container--J2kFM{border:#ececec;border-right-style:solid;border-width:1px;box-sizing:border-box;display:flex;flex-direction:column;flex-shrink:0;height:100px}.src-scss-component-frame-ribbon-group-RibbonGroup-module__rg1--iEB22{display:flex;padding:6px 4px 0 12px}.src-scss-component-frame-ribbon-group-RibbonGroup-module__rg1--iEB22 .src-scss-component-frame-ribbon-group-RibbonGroup-module__ga1--3fRE3{margin-right:6px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/ribbon/group/RibbonGroup.module.scss\",\"webpack://./src/scss/common/_common_color.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAGA,4EACE,cCCoB,CAAA,wBAAA,CDCpB,gBAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,aAAA,CACA,YAAA,CAGF,sEACE,YAAA,CACA,sBAAA,CAEA,4IACE,gBEFmB\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n@use 'scss/common/common_size';\\n\\n.container {\\n  border: common_color.$default_border_gray;\\n  border-right-style: solid;\\n  border-width: 1px;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  flex-shrink: 0;\\n  height: common_size.$ribbon_height;\\n}\\n\\n.rg1 {\\n  display: flex;\\n  padding: common_size.$ribbon_top_margin common_size.$ribbon_margin 0 common_size.$default-margin;\\n\\n  .ga1 {\\n    margin-right: common_size.$ribbon_button_margin;\\n  }\\n}\\n\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-ribbon-group-RibbonGroup-module__container--J2kFM\",\n\t\"rg1\": \"src-scss-component-frame-ribbon-group-RibbonGroup-module__rg1--iEB22\",\n\t\"ga1\": \"src-scss-component-frame-ribbon-group-RibbonGroup-module__ga1--3fRE3\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-ribbon-group-RibbonGroupLabelArea-module__container--gNBt0{font-size:12px;text-align:center}.src-scss-component-frame-ribbon-group-RibbonGroupLabelArea-module__container--gNBt0{align-items:center;cursor:default;display:flex;justify-content:center;margin:auto 4px 4px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/common/_common_font.scss\",\"webpack://./src/scss/component/frame/ribbon/group/RibbonGroupLabelArea.module.scss\"],\"names\":[],\"mappings\":\"AAUA,qFACI,cAAA,CACA,iBAAA,CCTJ,qFAEE,kBAAA,CACA,cAAA,CACA,YAAA,CACA,sBAAA,CACA,mBAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n// default\\n%default_main_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  text-align: left;\\n}\\n\\n// ribbon group\\n%ribbon_group_center {\\n    font-size: 12px;\\n    text-align: center;\\n}\\n\\n// ribbon\\n%ribbon_comp_disable_center {\\n  color: common_color.$ribbon_black;\\n  font-size: 12px;\\n  opacity: 0.3;\\n  text-align: center;\\n}\\n\\n// ribbon dropdown\\n%ribbon_dropdown_title_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\n// toolpane\\n%toolpane_title_left {\\n  color: #8e939e;\\n  font-size: 15px;\\n  text-align: left;\\n}\",\"@use 'scss/common/common_size';\\n@use 'scss/common/common_font';\\n\\n.container {\\n  @extend %ribbon_group_center;\\n  align-items: center;\\n  cursor: default;\\n  display: flex;\\n  justify-content: center;\\n  margin: auto common_size.$ribbon_group_label_area_margin common_size.$ribbon_group_label_area_margin;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-ribbon-group-RibbonGroupLabelArea-module__container--gNBt0\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-ribbon-group-RibbonGroupWrapper-module__container--XrFoJ{border-bottom:1px solid #ececec;display:flex;overflow:auto hidden}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/ribbon/group/RibbonGroupWrapper.module.scss\"],\"names\":[],\"mappings\":\"AAEA,mFACE,+BAAA,CACA,YAAA,CACA,oBAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n.container {\\n  border-bottom: 1px solid common_color.$default_border_gray;\\n  display: flex;\\n  overflow: auto hidden;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-ribbon-group-RibbonGroupWrapper-module__container--XrFoJ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-WorkArea-module__container--GQq2c{background:#f6f7fb;border:#ececec;border-style:solid;border-width:1px;display:flex;flex:1;overflow:hidden}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/WorkArea.module.scss\",\"webpack://./src/scss/common/_common_color.scss\",\"webpack://./src/scss/common/_common_size.scss\"],\"names\":[],\"mappings\":\"AAIA,qEACE,kBAAA,CACA,cCDoB,CDEpB,kBAAA,CACA,gBEPqB,CFQrB,YAAA,CACA,MAAA,CACA,eAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n@use 'scss/common/common_size';\\n@use 'scss/helper';\\n\\n.container {\\n  background: #f6f7fb;\\n  border: common_color.$default_border_gray;\\n  border-style: solid;\\n  border-width: common_size.$default_border_width;\\n  display: flex;\\n  flex: 1;\\n  overflow: hidden;\\n}\\n\",\"// default\\n$default_black: #000;\\n$default_dark: #3e4248;\\n$default_background_white: #fff;\\n$default_border_black: #040404;\\n$default_border_gray: #ececec;\\n\\n// app\\n$default_app_color: #439bed;\\n$default_app_border_color: #7eb6ea;\\n$default_app_hovered_color: #dee4ea;\\n\\n// ribbon\\n$ribbon_background_white: #fff;\\n$ribbon_black: #3e4248;\\n$ribbon_border_gray: #d5d5d5;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_background_white: #fff;\\n$ribbon_dropdown_border_gray: #e2e2e2;\\n$ribbon_dropdown_separator_gray: #d4d4d7;\",\"// default\\n$default_border_width: 1px;\\n$default_margin: 12px;\\n\\n// button\\n$button_height: 24px;\\n\\n// arrow button\\n$button_arrow_width: 16px;\\n\\n// ribbon\\n$ribbon_height: 100px;\\n$ribbon_margin: 4px;\\n$ribbon_top_margin: 6px;\\n\\n// ribbon button\\n$ribbon_button_arrow_width: 13px;\\n$ribbon_button_margin: 6px;\\n\\n// ribbon group label\\n$ribbon_group_label_area_margin: 4px;\\n\\n// ribbon gallery\\n$ribbon_gallery_width_01: 160px;\\n$ribbon_gallery_height_01: 72px;\\n\\n// ribbon gallery item\\n$ribbon_gallery_item_height: 22px;\\n$ribbon_gallery_item_width: 22px;\\n\\n// ribbon component\\n$ribbon_comp_width: 24px;\\n$ribbon_comp_height: 24px;\\n\\n// ribbon dropdown\\n$ribbon_dropdown_basic_margin: 8px;\\n$ribbon_dropdown_separator_width: 247px;\\n$ribbon_dropdown_separator_height: 5px;\\n$ribbon_dropdown_item_height: 28px;\\n\\n// ribbon dropdown shape insert gallery menu\\n$ribbon_dropdown_shape_insert_width: 265px;\\n$ribbon_dropdown_shape_insert_height: 500px;\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-workarea-WorkArea-module__container--GQq2c\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-composite-CompositeView-module__container--nrpBZ.src-scss-component-frame-workarea-composite-CompositeView-module__row--\\\\+Gpil{display:flex;flex-direction:row;width:100%}.src-scss-component-frame-workarea-composite-CompositeView-module__container--nrpBZ.src-scss-component-frame-workarea-composite-CompositeView-module__column--ao-d1{display:flex;flex-direction:column;height:100%}.src-scss-component-frame-workarea-composite-CompositeView-module__child--986C-{display:flex}.src-scss-component-frame-workarea-composite-CompositeView-module__child--986C-.src-scss-component-frame-workarea-composite-CompositeView-module__second--Ivr2F{flex:1}.src-scss-component-frame-workarea-composite-CompositeView-module__child--986C-.src-scss-component-frame-workarea-composite-CompositeView-module__row--\\\\+Gpil{height:100%;min-width:10px}.src-scss-component-frame-workarea-composite-CompositeView-module__child--986C-.src-scss-component-frame-workarea-composite-CompositeView-module__column--ao-d1{min-height:10px;width:100%}.src-scss-component-frame-workarea-composite-CompositeView-module__divider_view--1Vmwu{background-color:#d5d5d5;display:flex}.src-scss-component-frame-workarea-composite-CompositeView-module__divider_view--1Vmwu.src-scss-component-frame-workarea-composite-CompositeView-module__row--\\\\+Gpil{height:100%;width:1px}.src-scss-component-frame-workarea-composite-CompositeView-module__divider_view--1Vmwu.src-scss-component-frame-workarea-composite-CompositeView-module__column--ao-d1{height:1px;width:100%}.src-scss-component-frame-workarea-composite-CompositeView-module__divider_controller--b0gXc{position:absolute}.src-scss-component-frame-workarea-composite-CompositeView-module__divider_controller--b0gXc.src-scss-component-frame-workarea-composite-CompositeView-module__row--\\\\+Gpil{width:10px;cursor:ew-resize}.src-scss-component-frame-workarea-composite-CompositeView-module__divider_controller--b0gXc.src-scss-component-frame-workarea-composite-CompositeView-module__column--ao-d1{height:10px;cursor:ns-resize}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/composite/CompositeView.module.scss\"],\"names\":[],\"mappings\":\"AAGE,kKACE,YAAA,CACA,kBAAA,CACA,UAAA,CAGF,oKACE,YAAA,CACA,qBAAA,CACA,WAAA,CAIJ,gFACE,YAAA,CAEA,gKACE,MAAA,CAGF,8JACE,WAAA,CACA,cAAA,CAGF,gKACE,eAAA,CACA,UAAA,CAIJ,uFACE,wBAAA,CACA,YAAA,CAEA,qKACE,WAAA,CACA,SAAA,CAGF,uKACE,UAAA,CACA,UAAA,CAIJ,6FACE,iBAAA,CAEA,2KACE,UAAA,CACA,gBAAA,CAGF,6KACE,WAAA,CACA,gBAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n.container {\\n  &.row {\\n    display: flex;\\n    flex-direction: row;\\n    width: 100%;\\n  }\\n\\n  &.column {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n  }\\n}\\n\\n.child {\\n  display: flex;\\n\\n  &.second {\\n    flex: 1;\\n  }\\n\\n  &.row {\\n    height: 100%;\\n    min-width: 10px;\\n  }\\n  \\n  &.column {\\n    min-height: 10px;\\n    width: 100%;\\n  }\\n}\\n\\n.divider_view {\\n  background-color: #d5d5d5;\\n  display: flex;\\n\\n  &.row {\\n    height: 100%;\\n    width: 1px;\\n  }\\n\\n  &.column {\\n    height: 1px;\\n    width: 100%;\\n  }\\n}\\n\\n.divider_controller {\\n  position: absolute;\\n\\n  &.row {\\n    width: 10px;\\n    cursor: ew-resize;\\n  }\\n\\n  &.column {\\n    height: 10px;\\n    cursor: ns-resize;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-workarea-composite-CompositeView-module__container--nrpBZ\",\n\t\"row\": \"src-scss-component-frame-workarea-composite-CompositeView-module__row--+Gpil\",\n\t\"column\": \"src-scss-component-frame-workarea-composite-CompositeView-module__column--ao-d1\",\n\t\"child\": \"src-scss-component-frame-workarea-composite-CompositeView-module__child--986C-\",\n\t\"second\": \"src-scss-component-frame-workarea-composite-CompositeView-module__second--Ivr2F\",\n\t\"divider_view\": \"src-scss-component-frame-workarea-composite-CompositeView-module__divider_view--1Vmwu\",\n\t\"divider_controller\": \"src-scss-component-frame-workarea-composite-CompositeView-module__divider_controller--b0gXc\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-content-Content-module__container--7bUK9{display:flex;flex:1;height:100%;justify-content:center;overflow:hidden}.src-scss-component-frame-workarea-content-Content-module__list--\\\\+1Hfy{display:flex;flex:1;width:100%}.src-scss-component-frame-workarea-content-Content-module__edit--SwNTg{display:flex;flex:1;flex-direction:column;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/content/Content.module.scss\"],\"names\":[],\"mappings\":\"AAAA,4EACE,YAAA,CACA,MAAA,CACA,WAAA,CACA,sBAAA,CACA,eAAA,CAGF,wEACE,YAAA,CACA,MAAA,CACA,UAAA,CAGF,uEACE,YAAA,CACA,MAAA,CACA,qBAAA,CACA,UAAA\",\"sourcesContent\":[\".container {\\n  display: flex;\\n  flex: 1;\\n  height: 100%;\\n  justify-content: center;\\n  overflow: hidden;\\n}\\n\\n.list {\\n  display: flex;\\n  flex: 1;\\n  width: 100%;\\n}\\n\\n.edit {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-workarea-content-Content-module__container--7bUK9\",\n\t\"list\": \"src-scss-component-frame-workarea-content-Content-module__list--+1Hfy\",\n\t\"edit\": \"src-scss-component-frame-workarea-content-Content-module__edit--SwNTg\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-edit-EditView-module__container--9MlrU{position:relative;width:100%;height:100%}.src-scss-component-frame-workarea-edit-EditView-module__size_tracker--YZNbU{position:absolute;width:100%;height:100%}.src-scss-component-frame-workarea-edit-EditView-module__contents--XDEfV{height:100%;width:100%;overflow:auto}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/edit/EditView.module.scss\"],\"names\":[],\"mappings\":\"AAAA,0EACE,iBAAA,CACA,UAAA,CACA,WAAA,CAGF,6EACE,iBAAA,CACA,UAAA,CACA,WAAA,CAGF,yEACE,WAAA,CACA,UAAA,CACA,aAAA\",\"sourcesContent\":[\".container {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.size_tracker {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.contents {\\n  height: 100%;\\n  width: 100%;\\n  overflow: auto;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-workarea-edit-EditView-module__container--9MlrU\",\n\t\"size_tracker\": \"src-scss-component-frame-workarea-edit-EditView-module__size_tracker--YZNbU\",\n\t\"contents\": \"src-scss-component-frame-workarea-edit-EditView-module__contents--XDEfV\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes src-scss-component-frame-workarea-toolpane-ToolPane-module__slide--kCqNk{from{width:0}to{width:297px}}.src-scss-component-frame-workarea-toolpane-ToolPane-module__toolPane--DnXZD{background-color:#fff;border-left:1px solid #d5d5d5;box-sizing:border-box;display:flex;flex-direction:column;overflow:hidden;padding-bottom:20px;width:297px}.src-scss-component-frame-workarea-toolpane-ToolPane-module__open---qe3W{animation:src-scss-component-frame-workarea-toolpane-ToolPane-module__slide--kCqNk .4s ease-in-out 1 normal forwards}.src-scss-component-frame-workarea-toolpane-ToolPane-module__close--Y2UpR{animation:src-scss-component-frame-workarea-toolpane-ToolPane-module__slide--kCqNk .4s ease-in-out 1 reverse forwards}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/toolpane/ToolPane.module.scss\"],\"names\":[],\"mappings\":\"AAAA,oFACE,KACE,OAAA,CAGF,GACE,WAAA,CAAA,CAIJ,6EACE,qBAAA,CACA,6BAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,eAAA,CACA,mBAAA,CACA,WAAA,CAGF,yEACE,oHAAA,CAGF,0EACE,qHAAA\",\"sourcesContent\":[\"@keyframes slide {\\n  from {\\n    width: 0;    \\n  }\\n\\n  to {\\n    width: 297px;\\n  }\\n}\\n\\n.toolPane {\\n  background-color: #fff;\\n  border-left: 1px solid #D5D5D5;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  padding-bottom: 20px;\\n  width: 297px;\\n}\\n\\n.open {\\n  animation: slide 0.4s ease-in-out 1 normal forwards;\\n}\\n\\n.close {\\n  animation: slide 0.4s ease-in-out 1 reverse forwards;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"toolPane\": \"src-scss-component-frame-workarea-toolpane-ToolPane-module__toolPane--DnXZD\",\n\t\"open\": \"src-scss-component-frame-workarea-toolpane-ToolPane-module__open---qe3W\",\n\t\"slide\": \"src-scss-component-frame-workarea-toolpane-ToolPane-module__slide--kCqNk\",\n\t\"close\": \"src-scss-component-frame-workarea-toolpane-ToolPane-module__close--Y2UpR\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-toolpane-ToolPaneDock-module__container--XYHZs{background:#f6f7fb;border-left:1px solid #d5d5d5;width:40px;flex-shrink:0;align-items:center;box-sizing:border-box;display:flex;flex-direction:column;gap:16px;padding:16px 8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/toolpane/ToolPaneDock.module.scss\"],\"names\":[],\"mappings\":\"AAAA,kFACE,kBAAA,CACA,6BAAA,CACA,UAAA,CACA,aAAA,CACA,kBAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CACA,gBAAA\",\"sourcesContent\":[\".container {\\n  background: #f6f7fb;\\n  border-left: 1px solid #d5d5d5;\\n  width: 40px;\\n  flex-shrink: 0;\\n  align-items: center;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  padding: 16px 8px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-workarea-toolpane-ToolPaneDock-module__container--XYHZs\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP{align-items:center;border-radius:6px;display:flex;flex-shrink:0;height:30px;justify-content:center;position:relative;width:30px}.src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP path{fill:#5f6368}.src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP:hover{background:#e8eaed}.src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP[aria-pressed=true]{background:#d5e6ff}.src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP[disabled]{background:none}.src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP[disabled] path{fill:#8e959d}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/toolpane/ToolPaneDockButton.module.scss\"],\"names\":[],\"mappings\":\"AACA,qFACE,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,aAAA,CACA,WAAA,CACA,sBAAA,CACA,iBAAA,CACA,UAAA,CAEA,0FACE,YAAA,CAGF,2FACE,kBAAA,CAGF,wGACE,kBAAA,CAGF,+FACE,eAAA,CAEA,oGACE,YAAA\",\"sourcesContent\":[\"\\n.button {\\n  align-items: center;\\n  border-radius: 6px;\\n  display: flex;\\n  flex-shrink: 0;\\n  height: 30px;\\n  justify-content: center;\\n  position: relative;\\n  width: 30px;\\n\\n  path {\\n    fill: rgba(95, 99, 104, 1);\\n  }\\n\\n  &:hover {\\n    background: #e8eaed;\\n  }\\n\\n  &[aria-pressed=true] {\\n    background: #d5e6ff;\\n  }\\n\\n  &[disabled] {\\n    background: none;\\n    \\n    path {\\n      fill: rgba(142, 149, 157, 1)\\n    }\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"button\": \"src-scss-component-frame-workarea-toolpane-ToolPaneDockButton-module__button--LuGgP\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__label--\\\\+WE3g{color:#8e939e;font-size:15px;text-align:left}.src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__title--kEQoY{align-items:center;border-bottom:1px solid #d5d5d5;box-sizing:border-box;display:flex;height:48px;padding:0 24px 0 30px;flex-shrink:0}.src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__label--\\\\+WE3g{flex-shrink:0;overflow:hidden;white-space:nowrap}.src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__closeIcon--lgvf-{display:flex;margin-left:auto;border:0}.src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__closeIcon--lgvf-:hover path{fill:rgb(var(--app_color))}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/common/_common_font.scss\",\"webpack://./src/scss/component/frame/workarea/toolpane/ToolPaneTitle.module.scss\"],\"names\":[],\"mappings\":\"AAgCA,gFACE,aAAA,CACA,cAAA,CACA,eAAA,CChCF,+EACE,kBAAA,CACA,+BAAA,CACA,qBAAA,CACA,YAAA,CACA,WAAA,CACA,qBAAA,CACA,aAAA,CAGF,gFAEE,aAAA,CACA,eAAA,CACA,kBAAA,CAGF,mFACE,YAAA,CACA,gBAAA,CACA,QAAA,CAGE,8FACE,0BAAA\",\"sourcesContent\":[\"@use 'scss/common/common_color';\\n\\n// default\\n%default_main_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  text-align: left;\\n}\\n\\n// ribbon group\\n%ribbon_group_center {\\n    font-size: 12px;\\n    text-align: center;\\n}\\n\\n// ribbon\\n%ribbon_comp_disable_center {\\n  color: common_color.$ribbon_black;\\n  font-size: 12px;\\n  opacity: 0.3;\\n  text-align: center;\\n}\\n\\n// ribbon dropdown\\n%ribbon_dropdown_title_left {\\n  color: common_color.$default_dark;\\n  font-size: 12px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\n// toolpane\\n%toolpane_title_left {\\n  color: #8e939e;\\n  font-size: 15px;\\n  text-align: left;\\n}\",\"@use 'scss/common/common_font';\\n@use 'scss/variables';\\n\\n.title {\\n  align-items: center;\\n  border-bottom: 1px solid #D5D5D5;\\n  box-sizing: border-box;\\n  display: flex;\\n  height: 48px;\\n  padding: 0 24px 0 30px;\\n  flex-shrink: 0;\\n}\\n\\n.label {\\n  @extend %toolpane_title_left;\\n  flex-shrink: 0;\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\n\\n.closeIcon {\\n  display: flex;\\n  margin-left: auto; \\n  border: 0;\\n\\n  &:hover {\\n    path {\\n      fill: rgb(variables.$app_color);\\n    }\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"label\": \"src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__label--+WE3g\",\n\t\"title\": \"src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__title--kEQoY\",\n\t\"closeIcon\": \"src-scss-component-frame-workarea-toolpane-ToolPaneTitle-module__closeIcon--lgvf-\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-frame-workarea-toolpane-ToolPaneWrapper-module__container--JnaS5{display:flex;flex-direction:row-reverse}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/frame/workarea/toolpane/ToolPaneWrapper.module.scss\"],\"names\":[],\"mappings\":\"AAAA,qFACE,YAAA,CACA,0BAAA\",\"sourcesContent\":[\".container {\\n  display: flex;\\n  flex-direction: row-reverse;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-frame-workarea-toolpane-ToolPaneWrapper-module__container--JnaS5\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-node-graphic-GraphicChildWrapper-module__container--I4NIQ{position:absolute;left:0;top:0;overflow:visible;display:flex;justify-content:center;align-items:center;pointer-events:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/node/graphic/GraphicChildWrapper.module.scss\"],\"names\":[],\"mappings\":\"AAAA,8EACE,iBAAA,CACA,MAAA,CACA,KAAA,CACA,gBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA\",\"sourcesContent\":[\".container {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  overflow: visible;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  pointer-events: none;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-node-graphic-GraphicChildWrapper-module__container--I4NIQ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-node-graphic-GraphicWrapper-module__container--m1Mjz{display:block;position:absolute;align-items:center;justify-content:center;outline:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/node/graphic/GraphicWrapper.module.scss\"],\"names\":[],\"mappings\":\"AAAA,yEACE,aAAA,CACA,iBAAA,CACA,kBAAA,CACA,sBAAA,CACA,SAAA\",\"sourcesContent\":[\".container {\\n  display: block;\\n  position: absolute;\\n  align-items: center;\\n  justify-content: center;\\n  outline: 0;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-node-graphic-GraphicWrapper-module__container--m1Mjz\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-node-slide-EditPreviewLayer-module__container--kKrGw{position:absolute}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/node/slide/EditPreviewLayer.module.scss\"],\"names\":[],\"mappings\":\"AAAA,yEACE,iBAAA\",\"sourcesContent\":[\".container {\\n  position: absolute;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-node-slide-EditPreviewLayer-module__container--kKrGw\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-node-slide-Slide-module__container--zaH4t{width:100%;height:100%;position:relative;overflow:visible}.src-scss-component-node-slide-Slide-module__slide_wrapper--JE84h{position:absolute}.src-scss-component-node-slide-Slide-module__slide_background_wrapper--68bAh{position:absolute;overflow:visible}.src-scss-component-node-slide-Slide-module__slide_background--kKyVc{position:absolute;display:flex}.src-scss-component-node-slide-Slide-module__event--9kxxS{width:100%;height:100%;position:absolute}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/node/slide/Slide.module.scss\"],\"names\":[],\"mappings\":\"AAAA,8DACE,UAAA,CACA,WAAA,CACA,iBAAA,CACA,gBAAA,CAGF,kEACE,iBAAA,CAGF,6EACE,iBAAA,CACA,gBAAA,CAGF,qEACE,iBAAA,CACA,YAAA,CAGF,0DACE,UAAA,CACA,WAAA,CACA,iBAAA\",\"sourcesContent\":[\".container {\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n  overflow: visible;\\n}\\n\\n.slide_wrapper {\\n  position: absolute;\\n}\\n\\n.slide_background_wrapper {\\n  position: absolute;\\n  overflow: visible;\\n}\\n\\n.slide_background {\\n  position: absolute;\\n  display: flex;\\n}\\n\\n.event {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-node-slide-Slide-module__container--zaH4t\",\n\t\"slide_wrapper\": \"src-scss-component-node-slide-Slide-module__slide_wrapper--JE84h\",\n\t\"slide_background_wrapper\": \"src-scss-component-node-slide-Slide-module__slide_background_wrapper--68bAh\",\n\t\"slide_background\": \"src-scss-component-node-slide-Slide-module__slide_background--kKyVc\",\n\t\"event\": \"src-scss-component-node-slide-Slide-module__event--9kxxS\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__container--1ofln{position:absolute}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_svg--PfXB9{position:absolute;pointer-events:none}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_event_g--0HXQb{visibility:hidden;pointer-events:all}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_event_rect--i2uAV{rx:20;ry:20}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_g---iCZp{display:inherit;pointer-events:none}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_rect--PCoeg{rx:20;ry:20;fill:#0bb30b}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_line--6fl9q{stroke:#000;stroke-width:1px;opacity:.4}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_svg--AzPio{position:absolute;pointer-events:none;overflow:visible}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_outline_g--wWCL9{display:inherit}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_outline--gaCkL{fill:none;stroke:#777;stroke-width:1px}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_outline_event--13FuU{fill:none;pointer-events:visibleStroke;stroke:none;stroke-width:3px}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_g--OWDRS{pointer-events:all}.src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_rect--VNUKn{fill:#fff;stroke:#777;stroke-width:1px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/scss/component/node/slide/selectionlayer/graphic/GraphicSelection.module.scss\"],\"names\":[],\"mappings\":\"AAAA,gGACE,iBAAA,CAGF,wGACE,iBAAA,CACA,mBAAA,CAGF,4GACE,iBAAA,CACA,kBAAA,CAGF,+GACE,KAAA,CACA,KAAA,CAGF,sGACE,eAAA,CACA,mBAAA,CAGF,yGACE,KAAA,CACA,KAAA,CACA,YAAA,CAGF,yGACE,WAAA,CACA,gBAAA,CACA,UAAA,CAGF,wGACE,iBAAA,CACA,mBAAA,CACA,gBAAA,CAGF,8GACE,eAAA,CAGF,4GACE,SAAA,CACA,WAAA,CACA,gBAAA,CAGF,kHACE,SAAA,CACA,4BAAA,CACA,WAAA,CACA,gBAAA,CAGF,sGACE,kBAAA,CAGF,yGACE,SAAA,CACA,WAAA,CACA,gBAAA\",\"sourcesContent\":[\".container {\\n  position: absolute\\n}\\n\\n.rotate_handle_svg {\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.rotate_handle_event_g {\\n  visibility: hidden;\\n  pointer-events: all;\\n}\\n\\n.rotate_handle_event_rect {\\n  rx: 20;\\n  ry: 20;  \\n}\\n\\n.rotate_handle_g {\\n  display: inherit;\\n  pointer-events: none;\\n}\\n\\n.rotate_handle_rect {\\n  rx: 20;\\n  ry: 20;\\n  fill: #0bb30b;\\n}\\n\\n.rotate_handle_line {\\n  stroke: #000;\\n  stroke-width: 1px;\\n  opacity: 0.4;\\n}\\n\\n.resize_handle_svg {\\n  position: absolute;\\n  pointer-events: none;\\n  overflow: visible;\\n}\\n\\n.resize_handle_outline_g {\\n  display: inherit;\\n}\\n\\n.resize_handle_outline {\\n  fill: none;\\n  stroke: #777;\\n  stroke-width: 1px;\\n}\\n\\n.resize_handle_outline_event {\\n  fill: none;\\n  pointer-events: visibleStroke;\\n  stroke: none;\\n  stroke-width: 3px;\\n}\\n\\n.resize_handle_g {\\n  pointer-events: all;\\n}\\n\\n.resize_handle_rect {\\n  fill: #fff;\\n  stroke: #777;\\n  stroke-width: 1px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__container--1ofln\",\n\t\"rotate_handle_svg\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_svg--PfXB9\",\n\t\"rotate_handle_event_g\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_event_g--0HXQb\",\n\t\"rotate_handle_event_rect\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_event_rect--i2uAV\",\n\t\"rotate_handle_g\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_g---iCZp\",\n\t\"rotate_handle_rect\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_rect--PCoeg\",\n\t\"rotate_handle_line\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__rotate_handle_line--6fl9q\",\n\t\"resize_handle_svg\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_svg--AzPio\",\n\t\"resize_handle_outline_g\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_outline_g--wWCL9\",\n\t\"resize_handle_outline\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_outline--gaCkL\",\n\t\"resize_handle_outline_event\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_outline_event--13FuU\",\n\t\"resize_handle_g\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_g--OWDRS\",\n\t\"resize_handle_rect\": \"src-scss-component-node-slide-selectionlayer-graphic-GraphicSelection-module__resize_handle_rect--VNUKn\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./App.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","const uniqueKey = Symbol('class identifier');\nlet uniqueKeyValue = 0;\n\nexport interface IIdentifiable {\n  getUniqueKey: () => number;\n}\n\nexport type UniqueKey = ReturnType<IIdentifiable['getUniqueKey']>;\n\nexport function identify(anyClass: unknown): UniqueKey {\n  return (anyClass as IIdentifiable).getUniqueKey();\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Ctor<T = any> = new (...args: any[]) => T;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ACtor<T = any> = abstract new (...args: any[]) => T;\n\nfunction Identifiable<ABase extends ACtor>(\n  base: ABase\n): ACtor<InstanceType<typeof base>> & IIdentifiable;\nfunction Identifiable<TBase extends Ctor>(\n  base: TBase\n): Ctor<InstanceType<typeof base>> & IIdentifiable;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction Identifiable(base: any): any {\n  abstract class IdentifiableBase extends base {\n    private static [uniqueKey]: number;\n\n    public static getUniqueKey(): number {\n      if (Object.prototype.hasOwnProperty.call(this, uniqueKey)) {\n        return this[uniqueKey]!;\n      }\n      this[uniqueKey] = uniqueKeyValue;\n      uniqueKeyValue += 1;\n\n      return this[uniqueKey];\n    }\n  }\n\n  return IdentifiableBase;\n}\n\nexport default Identifiable;\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport { TreeNodeTypeEnum } from 'types/model/node/TreeNodeTypeEnum';\nimport Identifiable from 'util/id/Identifiable';\n\n/**\n * Tree 와 관련된 로직이 구현된 abstract class입니다.\n */\nabstract class TreeNode {\n  /**\n   * TreeNode 의 고유 ID 입니다.\n   */\n  private id: number;\n\n  /**\n   * 부모 node 를 가리킵니다.\n   * extend하는 클래스에서 타입을 지정해 주어야 합니다\n   */\n  private parent?: TreeNode;\n\n  /**\n   * 자식 node 중 첫번째를 가리킵니다.\n   */\n  private firstChild?: TreeNode;\n\n  /*\n   * 자식 node 중 마지막을 가리킵니다.\n   */\n  private lastChild?: TreeNode;\n\n  /**\n   * 형제 node 중 다음을 가리킵니다.\n   */\n  private nextSibling?: TreeNode;\n\n  /**\n   * 형제 node 중 이전을 가리킵니다.\n   */\n  private prevSibling?: TreeNode;\n\n  private rerenderChildrenRef: Nullable<React.MutableRefObject<number>>;\n\n  /**\n   * rerender를 요청하는 함수입니다.\n   */\n  private rerenderTrigger: Nullable<() => void>;\n\n  /**\n   * 생성자\n   *\n   * @param id treeNode에 부여할 id\n   */\n  public constructor(id: number) {\n    this.id = id;\n    this.parent = undefined;\n    this.firstChild = undefined;\n    this.lastChild = undefined;\n    this.nextSibling = undefined;\n    this.prevSibling = undefined;\n    this.rerenderChildrenRef = undefined;\n    this.rerenderTrigger = undefined;\n  }\n\n  /**\n   * 해당 node 의 Id 를 반환합니다.\n   *\n   * @returns 해당 node 의 Id\n   */\n  @boundMethod\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * 해당 node 의 Id 를 설정합니다\n   *\n   * @returns 해당 node 의 Id\n   */\n  @boundMethod\n  public setId(id: number): void {\n    this.id = id;\n  }\n\n  /**\n   * 부모 node 를 반환합니다.\n   *\n   * @returns 부모 node\n   */\n  @boundMethod\n  public getParent(): Nullable<TreeNode> {\n    return this.parent;\n  }\n\n  /**\n   * 부모 node 를 설정합니다.\n   *\n   * @param parent 해당 node 의 부모\n   */\n  @boundMethod\n  public setParent(parent?: TreeNode): void {\n    this.parent = parent;\n  }\n\n  /**\n   * 자식 node 중 첫번째를 반환합니다.\n   *\n   * @returns 첫번째 자식 node\n   */\n  @boundMethod\n  public getFirstChild(): Nullable<TreeNode> {\n    return this.firstChild;\n  }\n\n  /**\n   * 첫번째 자식 node 를 설정합니다.\n   *\n   * @param firstChild 해당 node 의 첫번째 자식\n   */\n  @boundMethod\n  public setFirstChild(firstChild?: TreeNode): void {\n    this.firstChild = firstChild;\n  }\n\n  /**\n   * 자식 node 중 마지막을 반환합니다.\n   *\n   * @returns 마지막 자식 node\n   */\n  @boundMethod\n  public getLastChild(): Nullable<TreeNode> {\n    return this.lastChild;\n  }\n\n  /**\n   * 마지막 자식 node 를 설정합니다.\n   *\n   * @param lastChild 해당 node 의 마지막 자식\n   */\n  @boundMethod\n  public setLastChild(lastChild?: TreeNode): void {\n    this.lastChild = lastChild;\n  }\n\n  /**\n   * 다음 형제 node 를 반환합니다.\n   *\n   * @returns 다음 형제 node\n   */\n  @boundMethod\n  public getNextSibling(): Nullable<TreeNode> {\n    return this.nextSibling;\n  }\n\n  /**\n   * 다음 형제 node 를 설정합니다.\n   *\n   * @param nextSibling 해당 node 의 다음 형제\n   */\n  @boundMethod\n  public setNextSibling(nextSibling?: TreeNode): void {\n    this.nextSibling = nextSibling;\n  }\n\n  /**\n   * 이전 형제 node 를 반환 합니다.\n   *\n   * @returns 이전 형제 node\n   */\n  @boundMethod\n  public getPrevSibling(): Nullable<TreeNode> {\n    return this.prevSibling;\n  }\n\n  /**\n   * 이전 형제 node 를 설정합니다.\n   *\n   * @param prevSibling 해당 node 의 이전 형제\n   */\n  @boundMethod\n  public setPrevSibling(prevSibling?: TreeNode): void {\n    this.prevSibling = prevSibling;\n  }\n\n  @boundMethod\n  public setRerenderChildrenRef(\n    rerenderChildrenRef: Nullable<React.MutableRefObject<number>>\n  ): void {\n    this.rerenderChildrenRef = rerenderChildrenRef;\n  }\n\n  @boundMethod\n  public checkRerenderChildren(): void {\n    if (this.rerenderChildrenRef !== undefined) {\n      this.rerenderChildrenRef.current += 1;\n    }\n  }\n\n  /**\n   * rerenderTrigger 함수를 설정합니다.\n   * component에서 설정합니다\n   *\n   * @param rerenderTrigger rerender를 발생시키는 함수\n   */\n  @boundMethod\n  public setRerenderTrigger(rerenderTrigger: Nullable<() => void>): void {\n    this.rerenderTrigger = rerenderTrigger;\n  }\n\n  /**\n   * rendering 을 강제로 발생시키는 함수를 ctx에 등록합니다.\n   * store는 특정 event가 끝난 다음 ctx에 모여있는 rerenderTrigger를 flush 합니다\n   *\n   * @param ctx trigger를 등록 할 AppContext\n   */\n  @boundMethod\n  public requestRerender(ctx: AppContext): void {\n    if (this.rerenderTrigger !== undefined) {\n      ctx.getEditableContext().appendRerenderTrigger(this.rerenderTrigger);\n    }\n  }\n\n  /**\n   * Child node 들을 순회하면서 callback 함수를 호출합니다.\n   * Array 의 forEach() 와 유사한 동작을 합니다.\n   *\n   * @param callback 각 child node 에 동작을 수행할 함수\n   */\n  @boundMethod\n  public forEachChild(callback: (child: TreeNode) => void): void {\n    for (let it = this.firstChild; it !== undefined; it = it.nextSibling) {\n      callback(it as TreeNode);\n    }\n  }\n\n  /**\n   * Child node 들을 순회하면서, callback 함수를 호출하여,\n   * 새로운 array 를 생성하여 반환합니다.\n   * Array 의 map() 와 유사한 동작을 합니다.\n   *\n   * @param callback 각 child node 에 동작을 수행할 함수\n   * @returns 생성한 배열\n   */\n  @boundMethod\n  public mapChild<T>(callback: (child: TreeNode) => T): T[] {\n    const ret = [] as T[];\n    this.forEachChild(child => {\n      ret.push(callback(child));\n    });\n    return ret;\n  }\n\n  /**\n   * 해당 node 를 부모에 추가합니다.\n   * nextNode 인자를 사용하여 해당 node 앞에 추가할 수 있습니다.\n   * nextNode가 없는 경우 부모 node 의 마지막 child가 됩니다.\n   *\n   * @param parentNode 해당 node 의 부모가 될 node\n   * @param nextNode 해당 node 의 다음 형제가 될 node\n   */\n  @boundMethod\n  public append(parentNode: TreeNode, nextNode?: TreeNode): void {\n    if (nextNode !== undefined) {\n      if (nextNode.getParent() !== parentNode) {\n        console.error('tree 구성이 잘못되었습니다.');\n        return;\n      }\n      parentNode.appendChildBefore(this, nextNode);\n    } else {\n      parentNode.appendChild(this);\n    }\n  }\n\n  /**\n   * 해당 node 를 부모에서 제거합니다.\n   *\n   * @param parentNode 해당 node 로부터 떼어질 부모 node\n   */\n  @boundMethod\n  public remove(parentNode: TreeNode): void {\n    parentNode.removeChild(this);\n  }\n\n  /**\n   * 해당 node 를 마지막 child 로 붙입니다.\n   *\n   * @param newChild 해당 node 의 자식으로 붙을 node\n   */\n  @boundMethod\n  private appendChild(newChild: TreeNode): void {\n    newChild.setParent(this);\n    if (this.firstChild === undefined) {\n      this.firstChild = newChild;\n      this.lastChild = newChild;\n      newChild.setPrevSibling(undefined);\n      newChild.setNextSibling(undefined);\n    } else {\n      this.lastChild?.setNextSibling(newChild);\n      newChild.setPrevSibling(this.lastChild);\n      newChild.setNextSibling(undefined);\n      this.lastChild = newChild;\n    }\n  }\n\n  /**\n   * 해당 node 를 특정 자식 node 이전의 자식으로 추가합니다.\n   *\n   * @param newChild 새롭게 추가 할 자식 node\n   * @param refChild 새로운 자식 node 다음에 있게 될 node\n   */\n  @boundMethod\n  protected appendChildBefore(newChild: TreeNode, refChild: TreeNode): void {\n    newChild.setParent(refChild.getParent());\n    if (refChild === this.firstChild) {\n      this.firstChild = newChild;\n      newChild.setPrevSibling(undefined);\n    } else {\n      newChild.setPrevSibling(refChild.getPrevSibling());\n      refChild.getPrevSibling()?.setNextSibling(newChild);\n    }\n    newChild.setNextSibling(refChild);\n    refChild.setPrevSibling(newChild);\n  }\n\n  /**\n   * 해당 node 를 child 에서 제거합니다.\n   *\n   * @param child 해당 node 로부터 제거될 자식 node\n   */\n  @boundMethod\n  private removeChild(child: TreeNode): void {\n    if (this.firstChild === child) {\n      // 첫번째 자식인 경우\n      if (this.lastChild === child) {\n        // 자식이 1개인 경우\n        this.firstChild = undefined;\n        this.lastChild = undefined;\n      } else {\n        // 자식이 여러개인 경우\n        this.firstChild = child.getNextSibling();\n        this.firstChild?.setPrevSibling(undefined);\n      }\n    } else if (this.lastChild === child) {\n      // 마지막 자식인 경우\n      this.lastChild = child.getPrevSibling();\n      this.lastChild?.setNextSibling(undefined);\n    } else {\n      // 가운데에 있는 자식인 경우\n      child.getPrevSibling()?.setNextSibling(child.getNextSibling());\n      child.getNextSibling()?.setPrevSibling(child.getPrevSibling());\n    }\n  }\n\n  /**\n   * node의 type을 반환합니다.\n   *\n   * @returns node의 type\n   */\n  public abstract getTreeNodeType(): TreeNodeTypeEnum;\n}\n\nexport default abstract class extends Identifiable(TreeNode) {}\n","/*\n * TreeNode의 type\n * type check를 하기 위하여 사용합니다.\n */\nexport enum TreeNodeTypeEnum {\n  INVALID = 0,\n  GRAPHIC_MODEL,\n  SLIDE,\n}\n","import TreeNode from 'model/node/TreeNode';\nimport { ISize } from 'types/common/geometry/GeometryTypes';\nimport { TreeNodeTypeEnum } from 'types/model/node/TreeNodeTypeEnum';\nimport { boundMethod } from 'autobind-decorator';\nimport FillInfo from '../graphic/info/FillInfo';\n\nexport default class SlideModel extends TreeNode {\n  /**\n   * 너비\n   */\n  private width: number;\n\n  /**\n   * 높이\n   */\n  private height: number;\n\n  private fillInfo: Nullable<FillInfo>;\n\n  private calculateContentsSizeRef: Nullable<React.MutableRefObject<number>>;\n\n  /**\n   * 생성자\n   *\n   * @param id 개체에 부여 할 id\n   */\n  constructor(id: number) {\n    super(id);\n    this.width = 1300;\n    this.height = 700;\n    this.fillInfo = undefined;\n    this.calculateContentsSizeRef = undefined;\n  }\n\n  /**\n   * 크기를 반환합니다.\n   *\n   * @returns SlideModel의 너비와 높이 정보\n   */\n  @boundMethod\n  public getSize(): ISize {\n    return { width: this.width, height: this.height };\n  }\n\n  @boundMethod\n  public getFillInfo(): Nullable<FillInfo> {\n    return this.fillInfo;\n  }\n\n  @boundMethod\n  public setCalculateContentsSizeRef(\n    calculateContentsSizeRef: Nullable<React.MutableRefObject<number>>\n  ): void {\n    this.calculateContentsSizeRef = calculateContentsSizeRef;\n  }\n\n  @boundMethod\n  public checkCalculateContentsSizeRef(): void {\n    if (this.calculateContentsSizeRef !== undefined) {\n      this.calculateContentsSizeRef.current += 1;\n    }\n  }\n\n  /**\n   * SlideModel의 TreeNode로서 type을 반환합니다.\n   *\n   * @returns slide model임을 알려주는 TreeNodeTypeEnum\n   */\n  public getTreeNodeType(): TreeNodeTypeEnum {\n    return TreeNodeTypeEnum.SLIDE;\n  }\n}\n","export enum GraphicEditEventSubStateEnum {\n  NONE = 0,\n  ABORT,\n  READY,\n  PRESSED,\n  DRAG,\n  RELEASED,\n}\n","import { boundMethod } from 'autobind-decorator';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport CoordinateInfo from 'model/node/graphic/info/CoordinateInfo';\nimport PathInfo from 'model/node/graphic/info/PathInfo';\n\nclass GraphicModelEditRequest {\n  private graphicModel: GraphicModel;\n\n  private initialCoordinateInfo: CoordinateInfo;\n\n  private initialPathInfo: Nullable<PathInfo>;\n\n  private currentEditingCoordinateInfo: CoordinateInfo;\n\n  private currentEditingPathInfo: Nullable<PathInfo>;\n\n  constructor(graphicModel: GraphicModel) {\n    this.graphicModel = graphicModel;\n\n    const coordinateInfo = graphicModel.getCoordinateInfo();\n    const pathInfo = graphicModel.getPathInfo();\n\n    this.initialCoordinateInfo = coordinateInfo.clone();\n    this.currentEditingCoordinateInfo = coordinateInfo.clone();\n    this.initialPathInfo = pathInfo?.clone();\n    this.currentEditingPathInfo = pathInfo?.clone();\n  }\n\n  @boundMethod\n  public getGraphicModel(): GraphicModel {\n    return this.graphicModel;\n  }\n\n  @boundMethod\n  public getInitialCoordinateInfo(): CoordinateInfo {\n    return this.initialCoordinateInfo;\n  }\n\n  @boundMethod\n  public getCurrentEditingCoordinateInfo(): CoordinateInfo {\n    return this.currentEditingCoordinateInfo;\n  }\n\n  @boundMethod\n  public getInitialPathInfo(): Nullable<PathInfo> {\n    return this.initialPathInfo;\n  }\n\n  @boundMethod\n  public getCurrentEditingPathInfo(): Nullable<PathInfo> {\n    return this.currentEditingPathInfo;\n  }\n}\n\nexport default GraphicModelEditRequest;\n","import { boundMethod } from 'autobind-decorator';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { GraphicEditingHandleEnum } from 'types/store/container/edit/GraphicEditingHandleEnum';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport { IPoint } from 'types/common/geometry/GeometryTypes';\nimport AppContext from 'store/context/AppContext';\nimport { ICursorInfo } from 'types/common/cursor/CursorTypes';\nimport GraphicModelEditRequest from './GraphicModelEditRequest';\n\nclass GraphicEditInfoContainer {\n  // selection\n  private isMultiSelectionEvent: boolean;\n\n  private isSelectionRecentlyUpdated: boolean;\n\n  private rangeSelectionStratPosition: IPoint;\n\n  private rangeSelectionEndPosition: IPoint;\n\n  // editing\n  private cursorInfo: Nullable<ICursorInfo>;\n\n  private eventTargetGraphicModel: Nullable<GraphicModel>;\n\n  private graphicEditEventSubState: GraphicEditEventSubStateEnum;\n\n  private graphicEditingHandle: Nullable<GraphicEditingHandleEnum>;\n\n  private editingStartedRenderCoordinate: IPoint;\n\n  private editingGraphicModelList: Array<GraphicModel>;\n\n  private editingDependentGraphicModelEditRequestMap: Map<GraphicModel, GraphicModelEditRequest>;\n\n  private editPreviewLayerGraphicModelList: Array<GraphicModel>;\n\n  /**\n   * rerender를 요청하는 함수입니다.\n   */\n  private editPreviewLayerRerenderTrigger: Nullable<() => void>;\n\n  private selectionLayerRerenderTrigger: Nullable<() => void>;\n\n  public constructor() {\n    // selection\n    this.isMultiSelectionEvent = false;\n    this.isSelectionRecentlyUpdated = false;\n    this.rangeSelectionStratPosition = { x: 0, y: 0 };\n    this.rangeSelectionEndPosition = { x: 0, y: 0 };\n\n    // editing\n    this.cursorInfo = undefined;\n    this.eventTargetGraphicModel = undefined;\n    this.graphicEditEventSubState = GraphicEditEventSubStateEnum.NONE;\n    this.graphicEditingHandle = undefined;\n    this.editingStartedRenderCoordinate = { x: 0, y: 0 };\n    this.editingGraphicModelList = new Array<GraphicModel>();\n    this.editingDependentGraphicModelEditRequestMap = new Map<\n      GraphicModel,\n      GraphicModelEditRequest\n    >();\n    this.editPreviewLayerGraphicModelList = new Array<GraphicModel>();\n    this.editPreviewLayerRerenderTrigger = undefined;\n    this.selectionLayerRerenderTrigger = undefined;\n  }\n\n  public clear(): void {\n    // selection\n    this.isMultiSelectionEvent = false;\n    this.isSelectionRecentlyUpdated = false;\n    this.rangeSelectionStratPosition = { x: 0, y: 0 };\n    this.rangeSelectionEndPosition = { x: 0, y: 0 };\n\n    // editing\n    this.eventTargetGraphicModel = undefined;\n    this.graphicEditEventSubState = GraphicEditEventSubStateEnum.NONE;\n    this.graphicEditingHandle = undefined;\n    this.editingStartedRenderCoordinate = { x: 0, y: 0 };\n    this.editingGraphicModelList = new Array<GraphicModel>();\n    this.editingDependentGraphicModelEditRequestMap = new Map<\n      GraphicModel,\n      GraphicModelEditRequest\n    >();\n    this.editPreviewLayerGraphicModelList = new Array<GraphicModel>();\n  }\n\n  // selection\n  @boundMethod\n  public getIsMultiSelectionEvent(): boolean {\n    return this.isMultiSelectionEvent;\n  }\n\n  public setIsMultiSelectionEvent(isMultiSelection: boolean): void {\n    this.isMultiSelectionEvent = isMultiSelection;\n  }\n\n  @boundMethod\n  public getIsSelectionRecentlyUpdated(): boolean {\n    return this.isSelectionRecentlyUpdated;\n  }\n\n  @boundMethod\n  public setIsSelectionRecentlyUpdated(isSelectionRecentlyUpdated: boolean): void {\n    this.isSelectionRecentlyUpdated = isSelectionRecentlyUpdated;\n  }\n\n  @boundMethod\n  public getRangeSelectionStartPosition(): IPoint {\n    return this.rangeSelectionStratPosition;\n  }\n\n  @boundMethod\n  public setRangeSelectionStartPosition(rangeSelectionStratPosition: IPoint): void {\n    this.rangeSelectionStratPosition = rangeSelectionStratPosition;\n  }\n\n  @boundMethod\n  public getRangeSelectionEndPosition(): IPoint {\n    return this.rangeSelectionEndPosition;\n  }\n\n  @boundMethod\n  public setRangeSelectionEndPosition(rangeSelectionEndPosition: IPoint): void {\n    this.rangeSelectionEndPosition = rangeSelectionEndPosition;\n  }\n\n  // editing\n  @boundMethod\n  public getCursorInfo(): Nullable<ICursorInfo> {\n    return this.cursorInfo;\n  }\n\n  @boundMethod\n  public setCursorInfo(cursorInfo: Nullable<ICursorInfo>): void {\n    this.cursorInfo = cursorInfo;\n  }\n\n  @boundMethod\n  public getEventTargetGraphicModel(): Nullable<GraphicModel> {\n    return this.eventTargetGraphicModel;\n  }\n\n  @boundMethod\n  public setEventTargetGraphicModel(graphicModel: Nullable<GraphicModel>): void {\n    this.eventTargetGraphicModel = graphicModel;\n  }\n\n  @boundMethod\n  public getGraphicEditEventSubState(): GraphicEditEventSubStateEnum {\n    return this.graphicEditEventSubState;\n  }\n\n  @boundMethod\n  public setGraphicEditEventSubState(graphicEditEventSubState: GraphicEditEventSubStateEnum): void {\n    this.graphicEditEventSubState = graphicEditEventSubState;\n  }\n\n  @boundMethod\n  public getGraphicEditingHandle(): Nullable<GraphicEditingHandleEnum> {\n    return this.graphicEditingHandle;\n  }\n\n  @boundMethod\n  public setGraphicEditingHandle(handle: GraphicEditingHandleEnum): void {\n    this.graphicEditingHandle = handle;\n  }\n\n  @boundMethod\n  public getEditingStartedRenderCoordinate(): IPoint {\n    return this.editingStartedRenderCoordinate;\n  }\n\n  @boundMethod\n  public setEditingStartedRenderCoordinate(coordinate: IPoint): void {\n    this.editingStartedRenderCoordinate = coordinate;\n  }\n\n  @boundMethod\n  public appendEditingGraphicModel(graphicModel: GraphicModel): void {\n    this.editingGraphicModelList.push(graphicModel);\n  }\n\n  @boundMethod\n  public clearEditingGraphicModelList(): void {\n    this.editingGraphicModelList = [];\n  }\n\n  @boundMethod\n  public getEditingGraphicModelList(): Array<GraphicModel> {\n    return this.editingGraphicModelList;\n  }\n\n  @boundMethod\n  public appendEditingDependentGraphicModelEditRequest(graphicModel: GraphicModel): void {\n    if (this.editingDependentGraphicModelEditRequestMap.has(graphicModel)) {\n      return;\n    }\n\n    this.editingDependentGraphicModelEditRequestMap.set(\n      graphicModel,\n      new GraphicModelEditRequest(graphicModel)\n    );\n  }\n\n  @boundMethod\n  public clearEditingDependentGraphicModelEditRequest(): void {\n    this.editingDependentGraphicModelEditRequestMap = new Map();\n  }\n\n  @boundMethod\n  public getEditingDependentGraphicModelEditRequest(\n    graphicModel: GraphicModel\n  ): Nullable<GraphicModelEditRequest> {\n    return this.editingDependentGraphicModelEditRequestMap.get(graphicModel);\n  }\n\n  @boundMethod\n  public getEditingDependentGraphicModelEditRequestMap(): Map<\n    GraphicModel,\n    GraphicModelEditRequest\n  > {\n    return this.editingDependentGraphicModelEditRequestMap;\n  }\n\n  @boundMethod\n  public appendEditPreviewLayerGraphicModel(graphicModel: GraphicModel): void {\n    this.editPreviewLayerGraphicModelList.push(graphicModel);\n  }\n\n  @boundMethod\n  public getEditPreviewLayerGraphicModelList(): Array<GraphicModel> {\n    return this.editPreviewLayerGraphicModelList;\n  }\n\n  @boundMethod\n  public clearEditPreviewLayerGraphicModelList(): void {\n    this.editPreviewLayerGraphicModelList = [];\n  }\n\n  @boundMethod\n  public setIsBeingEditedToAllEditingDependentGraphicModels(isBeingEdited: boolean): void {\n    this.getEditingDependentGraphicModelEditRequestMap().forEach(graphicModelEditRequest => {\n      graphicModelEditRequest.getGraphicModel().setIsBeingEdited(isBeingEdited);\n    });\n    this.editPreviewLayerGraphicModelList.forEach(graphicModel => {\n      graphicModel.setIsBeingEdited(isBeingEdited);\n    });\n  }\n\n  @boundMethod\n  public abortCurrentEditingState(): void {\n    this.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.ABORT);\n    this.setIsBeingEditedToAllEditingDependentGraphicModels(false);\n  }\n\n  @boundMethod\n  public setEditPreviewLayerRerenderTrigger(\n    editPreviewLayerRerenderTrigger: Nullable<() => void>\n  ): void {\n    this.editPreviewLayerRerenderTrigger = editPreviewLayerRerenderTrigger;\n  }\n\n  @boundMethod\n  public requestRerenderEditPreviewLayer(ctx: AppContext): void {\n    if (this.editPreviewLayerRerenderTrigger !== undefined) {\n      ctx.getEditableContext().appendRerenderTrigger(this.editPreviewLayerRerenderTrigger);\n    }\n  }\n\n  @boundMethod\n  public setSelectionLayerRerenderTrigger(\n    selectionLayerRerenderTrigger: Nullable<() => void>\n  ): void {\n    this.selectionLayerRerenderTrigger = selectionLayerRerenderTrigger;\n  }\n\n  @boundMethod\n  public requestRerenderSelectionLayer(ctx: AppContext): void {\n    if (this.selectionLayerRerenderTrigger !== undefined) {\n      ctx.getEditableContext().appendRerenderTrigger(this.selectionLayerRerenderTrigger);\n    }\n  }\n\n  @boundMethod\n  public isEditingActivated(): boolean {\n    return this.graphicEditEventSubState === GraphicEditEventSubStateEnum.DRAG;\n  }\n}\n\nexport default GraphicEditInfoContainer;\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport { ICursorInfo } from 'types/common/cursor/CursorTypes';\n\nclass ProxyLayerInfoContainer {\n  private isAppAreaProxyLayerEnabled: boolean;\n\n  private isEditViewProxyLayerEnabled: boolean;\n\n  private isAppAreaEventProxyEnabled: boolean;\n\n  private isEditViewEventProxyEnabled: boolean;\n\n  private isAppAreaEventBlocked: boolean;\n\n  private appAreaCursorInfo: Nullable<ICursorInfo>;\n\n  private editViewCursorInfo: Nullable<ICursorInfo>;\n\n  private rerenderAppAreaProxyLayerFunction: Nullable<() => void>;\n\n  private rerenderEditViewProxyLayerFunction: Nullable<() => void>;\n\n  private eventTarget: Nullable<TreeNode>;\n\n  public constructor() {\n    this.isAppAreaProxyLayerEnabled = false;\n    this.isEditViewProxyLayerEnabled = false;\n    this.isAppAreaEventProxyEnabled = false;\n    this.isEditViewEventProxyEnabled = false;\n    this.isAppAreaEventBlocked = false;\n    this.appAreaCursorInfo = undefined;\n    this.editViewCursorInfo = undefined;\n    this.rerenderAppAreaProxyLayerFunction = undefined;\n    this.rerenderEditViewProxyLayerFunction = undefined;\n    this.eventTarget = undefined;\n  }\n\n  @boundMethod\n  public getIsAppAreaProxyLayerEnabled(): boolean {\n    return this.isAppAreaProxyLayerEnabled;\n  }\n\n  @boundMethod\n  public getIsEditViewProxyLayerEnabled(): boolean {\n    return this.isEditViewProxyLayerEnabled;\n  }\n\n  @boundMethod\n  public getIsAppAreaEventProxyEnabled(): boolean {\n    return this.isAppAreaEventProxyEnabled;\n  }\n\n  @boundMethod\n  public getIsEditViewEventProxyEnabled(): boolean {\n    return this.isEditViewEventProxyEnabled;\n  }\n\n  @boundMethod\n  public getIsAppAreaEventBlocked(): boolean {\n    return this.isAppAreaEventBlocked;\n  }\n\n  @boundMethod\n  public getAppAreaCursorInfo(): Nullable<ICursorInfo> {\n    return this.appAreaCursorInfo;\n  }\n\n  @boundMethod\n  public getEditViewCursorInfo(): Nullable<ICursorInfo> {\n    return this.editViewCursorInfo;\n  }\n\n  @boundMethod\n  public setRerenderAppAreaProxyLayerFunction(rerenderAppAreaProxyLayerFunction: () => void): void {\n    this.rerenderAppAreaProxyLayerFunction = rerenderAppAreaProxyLayerFunction;\n  }\n\n  @boundMethod\n  private rerenderAppAreaProxyLayer(): void {\n    if (this.rerenderAppAreaProxyLayerFunction !== undefined) {\n      this.rerenderAppAreaProxyLayerFunction();\n    }\n  }\n\n  @boundMethod\n  public setRerenderEditViewProxyLayerFunction(\n    rerenderEditViewProxyLayerFunction: () => void\n  ): void {\n    this.rerenderEditViewProxyLayerFunction = rerenderEditViewProxyLayerFunction;\n  }\n\n  @boundMethod\n  private rerenderEditViewProxyLayer(): void {\n    if (this.rerenderEditViewProxyLayerFunction !== undefined) {\n      this.rerenderEditViewProxyLayerFunction();\n    }\n  }\n\n  @boundMethod\n  public getEventTarget(): Nullable<TreeNode> {\n    return this.eventTarget;\n  }\n\n  @boundMethod\n  public enableAppAreaProxyLayer(\n    eventTarget: Nullable<TreeNode>,\n    appAreaCursorInfo: Nullable<ICursorInfo>,\n    isAppAreaEventProxyEnabled: boolean,\n    isAppAreaEventBlocked: boolean\n  ): void {\n    this.isAppAreaProxyLayerEnabled = true;\n    this.isAppAreaEventProxyEnabled = isAppAreaEventProxyEnabled;\n    this.isAppAreaEventBlocked = isAppAreaEventBlocked;\n    this.appAreaCursorInfo = appAreaCursorInfo;\n    this.eventTarget = eventTarget;\n    this.rerenderAppAreaProxyLayer();\n  }\n\n  @boundMethod\n  public disableAppAreaProxyLayer(): void {\n    this.isAppAreaProxyLayerEnabled = false;\n    this.isAppAreaEventProxyEnabled = false;\n    this.isAppAreaEventBlocked = false;\n    this.appAreaCursorInfo = undefined;\n    this.eventTarget = undefined;\n    this.rerenderAppAreaProxyLayer();\n  }\n\n  @boundMethod\n  public enableEditViewProxyLayer(\n    eventTarget: Nullable<TreeNode>,\n    editViewCursorInfo: Nullable<ICursorInfo>,\n    isEditViewEventProxyEnabled: boolean\n  ): void {\n    this.isEditViewProxyLayerEnabled = true;\n    this.isEditViewEventProxyEnabled = isEditViewEventProxyEnabled;\n    this.editViewCursorInfo = editViewCursorInfo;\n    this.eventTarget = eventTarget;\n    this.rerenderEditViewProxyLayer();\n  }\n\n  @boundMethod\n  public disableEditViewProxyLayer(): void {\n    this.isEditViewProxyLayerEnabled = false;\n    this.isEditViewEventProxyEnabled = false;\n    this.editViewCursorInfo = undefined;\n    this.eventTarget = undefined;\n    this.rerenderEditViewProxyLayer();\n  }\n}\n\nexport default ProxyLayerInfoContainer;\n","import { boundMethod } from 'autobind-decorator';\nimport AppStore from 'store/AppStore';\nimport { KeyCombination, ShortcutAction, ShortcutMap } from 'types/shortcut/ShortcutTypes';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\n\nexport default class ShortcutContainer {\n  private shortcutMap: ShortcutMap;\n\n  private keyList: Array<string>;\n\n  public constructor() {\n    this.shortcutMap = new Map();\n    this.keyList = [];\n    this.initShortCut();\n  }\n\n  @boundMethod\n  private initShortCut(): void {\n    this.shortcutMap = new Map([\n      [\n        'CONTROL+Z',\n        (appStore: AppStore, event: React.KeyboardEvent<HTMLDivElement>) => {\n          event.stopPropagation();\n          event.preventDefault();\n          appStore.handleCommandEvent({ commandId: CommandEnum.UNDO });\n        },\n      ],\n      [\n        'CONTROL+Y',\n        (appStore: AppStore, event: React.KeyboardEvent<HTMLDivElement>) => {\n          event.stopPropagation();\n          event.preventDefault();\n          appStore.handleCommandEvent({ commandId: CommandEnum.REDO });\n        },\n      ],\n      [\n        'CONTROL+G',\n        (appStore: AppStore, event: React.KeyboardEvent<HTMLDivElement>) => {\n          event.stopPropagation();\n          event.preventDefault();\n          appStore.handleCommandEvent({ commandId: CommandEnum.GROUP_OBJECTS });\n        },\n      ],\n      [\n        'CONTROL+SHIFT+G',\n        (appStore: AppStore, event: React.KeyboardEvent<HTMLDivElement>) => {\n          event.stopPropagation();\n          event.preventDefault();\n          appStore.handleCommandEvent({ commandId: CommandEnum.UNGROUP });\n        },\n      ],\n    ]);\n  }\n\n  @boundMethod\n  public getShortCutAction(keyCombination: KeyCombination): Nullable<ShortcutAction> {\n    return this.shortcutMap.get(keyCombination);\n  }\n\n  @boundMethod\n  public getKeyList(): Array<string> {\n    return this.keyList;\n  }\n\n  @boundMethod\n  public pushKey(key: string): void {\n    if (key === 'ControlLeft' || key === 'ShiftLeft' || key === 'ShiftRight' || key === 'AltLeft') {\n      return;\n    }\n    const upperCaseKey = key.toLocaleUpperCase();\n    if (this.keyList.includes(upperCaseKey)) {\n      return;\n    }\n    this.keyList.push(upperCaseKey);\n  }\n\n  @boundMethod\n  public clearKeyList(): void {\n    this.keyList = [];\n  }\n\n  @boundMethod\n  public clearKey(key: string): void {\n    this.keyList = this.keyList.filter(i => i !== key.toLocaleUpperCase());\n  }\n\n  @boundMethod\n  public getCombinationString(event: React.KeyboardEvent<HTMLDivElement>): string {\n    const key = this.getConvertedKey(event.code);\n    const isModifierKeyPressed = event.ctrlKey || event.shiftKey || event.altKey || event.metaKey;\n\n    if (isModifierKeyPressed === false) {\n      return '';\n    }\n\n    this.pushKey(key);\n\n    return `${this.getModifierKey(event)}${this.getKeyList().join('+')}`;\n  }\n\n  public getConvertedKey(code: string): string {\n    return code.replace('Key', '');\n  }\n\n  private getModifierKey(event: React.KeyboardEvent<HTMLDivElement>): string {\n    const modifierKeyList = [\n      { isModifier: event.ctrlKey || event.metaKey, modifierKey: 'CONTROL' },\n      { isModifier: event.altKey, modifierKey: 'ALT' },\n      { isModifier: event.shiftKey, modifierKey: 'SHIFT' },\n    ];\n    let modifierKey = '';\n\n    modifierKeyList.forEach(e => {\n      if (e.isModifier) {\n        modifierKey += `${e.modifierKey}+`;\n      }\n    });\n\n    return modifierKey;\n  }\n}\n","import { useTranslation } from 'react-i18next';\nimport { IImgResProps, ISvgData } from 'types/component/frame/control/resource/ImgResourceTypes';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\n\n/**\n * svg image에 해당하는 resource 를 반환하는 hook 입니다.\n *\n * @param resourceId 찾고 싶은 svg image의 id\n * @returns id에 해당하는 resource 값\n */\nexport default function useImgRes(resourceId?: ResourceEnum): ISvgData | string {\n  const { t } = useTranslation();\n  const result = t(resourceId ?? '', { returnObjects: true });\n  return isValidSvgData(result) ? result : '';\n}\n\n/**\n * i18n으로 받은 data가 svg로 사용할 수 있는 것인지 확인합니다.\n *\n * @param data 확인 할 data\n * @returns 사용할 수 있는 경우 true\n */\nfunction isValidSvgData(data: unknown): data is ISvgData | string {\n  return (\n    typeof data === 'string' ||\n    (typeof data === 'object' && data !== null && 'viewBox' in data && 'children' in data)\n  );\n}\n\n/**\n * resource에 포함되어 있는 svg 정보를 dataurl로 변환하여 반환합니다.\n * mouse의 cursor로 설정할 수 있습니다.\n *\n * @param imgResProps image 정보를 담고 있는 props\n * @returns sring으로 변환 한 svg 정보 또는 undefined\n */\nexport function useImageResourceToDataURLString(imgResProps: IImgResProps): string | undefined {\n  const { img } = imgResProps;\n  const svgData = useImgRes(img);\n  if (typeof svgData === 'string') {\n    if (svgData.length === 0) {\n      return undefined;\n    }\n    return `url(data:image/svg+xml;base64,${window.btoa(svgData)})`;\n  }\n\n  return convertSvgDataToString(imgResProps, svgData);\n}\n\n/**\n * svg data를 string으로 변환합니다.\n *\n * @param imgResProps image 정보를 담고 있는 props\n * @param svgData svg 정보\n * @returns string으로 변환 한 svg 정보\n */\nfunction convertSvgDataToString(imgResProps: IImgResProps, svgData: ISvgData): string {\n  if (svgData.children !== undefined) {\n    const { width, height, fills } = imgResProps;\n    const open = `url('data:image/svg+xml;utf8,<svg width=\"${width}\" height=\"${height}\" viewBox=\"${svgData.viewBox}\" xmlns=\"http://www.w3.org/2000/svg\">`;\n    const accPath = svgData.children.reduce((acc, path, idx) => {\n      if (fills !== undefined && fills[idx] !== undefined) {\n        return `${acc}<path fill=\"${fills[idx]}\" d=\"${path.d}\"/>`;\n      }\n      return `${acc}<path d=\"${path.d}\"/>`;\n    }, '');\n    const close = `</svg>') ${width} ${height}, pointer`;\n    return open + accPath + close;\n  }\n  return '';\n}\n","import useImgRes from 'hook/resource/useImgRes';\nimport React from 'react';\nimport { IImgResProps } from 'types/component/frame/control/resource/ImgResourceTypes';\n\n/**\n * 주어진 정보를 바탕으로 svg를 render 하는 component 입니다.\n *\n * @param param0 IImgResProps svg 정보를 담고 있는 props\n * img: ResourceEnum\\\n * width: 가로 길이\\\n * height: 세로 길이\\\n * style: svg에 적용하고 싶은 style\n */\nconst SVGComponent = ({ img, width, height, style }: IImgResProps): React.JSX.Element => {\n  const res = useImgRes(img);\n  // 해당하는 리소스가 없는 경우 id가 그대로 반환 됨\n  if (typeof res !== 'string' || (typeof res === 'string' && (res === '' || img === res))) {\n    return <></>;\n  }\n  const svg = new DOMParser().parseFromString(res, 'text/xml').firstChild as SVGSVGElement;\n  const originWidth = svg.width && svg.width.baseVal.value ? svg.width.baseVal.value : width;\n  const originHeight = svg.height && svg.height.baseVal.value ? svg.height.baseVal.value : height;\n  const fill = svg.getAttribute('fill') ?? undefined;\n\n  const firstTagEnd = res.indexOf('>'); // end of svg tag\n  const result = res.slice(firstTagEnd + 1);\n\n  return (\n    <svg\n      width={width || originWidth}\n      height={height || originHeight}\n      viewBox={`0 0 ${originWidth} ${originHeight}`}\n      style={style}\n      fill={fill}\n      // 코드베이스 내부에 포함되어있는 것으로 XSS 문제는 고려하지 않음\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: result }}\n    />\n  );\n};\n\nexport default SVGComponent;\n","import SVGComponent from 'component/frame/control/resource/SVGComponent';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  IImgResProps,\n  IPathProps,\n  ISvgData,\n} from 'types/component/frame/control/resource/ImgResourceTypes';\n\n/**\n * 주어진 ImgResComponent props를 바탕으로 svg를 생성하여 반합니다.\n *\n * @param param0 IImgResProps image 정보를 담고 있는 props\n */\nconst ImgResComponent = ({ img, style, width, height }: IImgResProps): React.JSX.Element => {\n  const { t } = useTranslation();\n\n  const imageData: unknown = t(img ?? '', { returnObjects: true });\n\n  if (imageData === undefined) {\n    return <></>;\n  }\n\n  // svg 일 경우\n  if (isValidSvgData(imageData)) {\n    return (\n      <svg style={style} viewBox={imageData.viewBox} width={width} height={height}>\n        {imageData.children.map((child: IPathProps, index: number) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <path className={child.className} d={child.d} key={`${child.d.toString()}_${index}`} />\n          );\n        })}\n      </svg>\n    );\n  }\n  return <SVGComponent img={img} width={width} height={height} style={style} />;\n};\n\n/**\n * i18n을 통하여 받은 data가 valid한 svg 정보인지 확인합니다.\n *\n * @param data 검사 할 svg 정보\n * @returns data가 올바른지에 대한 여부\n */\nfunction isValidSvgData(data: unknown): data is ISvgData {\n  return (\n    typeof data === 'object' &&\n    data !== null &&\n    'viewBox' in data &&\n    'children' in data &&\n    Array.isArray(data.children)\n  );\n}\n\nImgResComponent.defaultProps = {\n  style: {},\n  width: '100%',\n  height: '100%',\n  fills: [],\n};\n\nexport default React.memo(ImgResComponent);\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./Icon.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import classNames from 'classnames';\nimport ImgResComponent from 'component/frame/control/resource/ImgResComponent';\nimport React from 'react';\nimport { IIconProps } from 'types/component/frame/control/button/IconTypes';\n\nimport styles from 'scss/component/frame/control/button/Icon.module.scss';\n\n/**\n * 이미지만 가지는 button을 생성하는 component 입니다.\n *\n * @param param0 IIconProps Icon 생성 정ㅂ\n */\nconst IconComponent = ({ attr, children, eventhandler }: IIconProps): React.JSX.Element => {\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={classNames(styles.icon, attr?.className)}\n      onClick={eventhandler?.onClick}\n      onMouseEnter={eventhandler?.onMouseEnter}\n      onMouseLeave={eventhandler?.onMouseLeave}\n      onKeyDown={eventhandler?.onKeyDown}\n    >\n      <ImgResComponent img={attr?.img} width={attr?.width} height={attr?.height} />\n      {children}\n    </div>\n  );\n};\n\nexport default IconComponent;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./RibbonLabel.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport { IControlProps } from 'types/component/frame/control/ControlTypes';\nimport IconComponent from 'component/frame/control/button/IconComponent';\nimport { ControlSubTypeEnum } from 'types/component/frame/control/ControlSubTypeEnum';\n\nimport styles from 'scss/component/frame/control/label/RibbonLabel.module.scss';\n\n/**\n * Ribbon에서 사용하는 control을 생성하는 component 입니다.\n * type 별로 여러 종류의 component를 반환합니다.\n *\n * @param param0 IControlProps control의 정보\n */\nconst RibbonLabelComponent = ({\n  attr: { reactKey, subType, img, className },\n  eventhandler,\n}: IControlProps): React.JSX.Element => {\n  const renderContent = () => {\n    switch (subType) {\n      case ControlSubTypeEnum.GI1:\n        return (\n          <>\n            <IconComponent\n              attr={{\n                reactKey,\n                img,\n                width: '16px',\n                height: '16px',\n              }}\n            />\n          </>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <button\n      className={classNames({\n        [styles.container]: true,\n        [styles[subType ?? '']]: subType,\n        [`${className}`]: className,\n      })}\n      onMouseEnter={eventhandler?.onMouseEnter}\n      onMouseLeave={eventhandler?.onMouseLeave}\n      onClick={eventhandler?.onClick}\n      type=\"button\"\n    >\n      {renderContent()}\n    </button>\n  );\n};\n\nexport default RibbonLabelComponent;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./RibbonGalleryItem.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { IControlProps } from 'types/component/frame/control/ControlTypes';\nimport RibbonLabelComponent from 'component/frame/control/label/RibbonLabelComponent';\nimport { ControlSubTypeEnum } from 'types/component/frame/control/ControlSubTypeEnum';\n\nimport styles from 'scss/component/frame/control/gallery/RibbonGalleryItem.module.scss';\n\n/**\n * RibbonGallery 내부의 item을 생성하는 component 입니다.\n *\n * @param param0 IControlProps item 세부 정보\n */\nconst RibbonGalleryItemComponent = ({ attr, eventhandler }: IControlProps): React.JSX.Element => {\n  return (\n    <RibbonLabelComponent\n      attr={{ ...attr, subType: ControlSubTypeEnum.GI1, className: styles.galleryItem }}\n      eventhandler={eventhandler}\n    />\n  );\n};\n\nexport default RibbonGalleryItemComponent;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DropdownMenu.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DropdownMenuItemGroup.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import RibbonGalleryItemComponent from 'component/frame/control/gallery/RibbonGalleryItemComponent';\nimport useRibbonGallery from 'hook/component/frame/control/gallery/useRibbonGallery';\nimport React from 'react';\nimport { ShapeGalleryData } from 'resource/ribbon/RibbonData';\nimport AppStore from 'store/AppStore';\nimport { ControlTypeEnum } from 'types/component/frame/control/ControlTypeEnum';\nimport { IControlAttr, IControlInfo } from 'types/component/frame/control/ControlTypes';\nimport {\n  IDropdownMenuInfo,\n  IDropdownMenuItemGroupInfo,\n} from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\nimport { IRibbonGalleryProps } from 'types/component/frame/control/gallery/RibbonGalleryTypes';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\n\nimport dropdownMenuStyles from 'scss/component/frame/control/dropdown/menu/DropdownMenu.module.scss';\nimport dropdownMenuItemGroupStyles from 'scss/component/frame/control/dropdown/menu/DropdownMenuItemGroup.module.scss';\n\n/**\n * ShapeInsertGallery에 해당하는 ControlHandler 입니다.\n * 내부 control 및 dropdown을 구성합니다.\n *\n * @param commandId 실행 할 commandId\n * @param appStore 현재 app의 정보를 담고 있는 AppStore\n * @param attr control의 세부 정보\n * @returns 새롭게 구성 한 ControlProps\n */\nexport default function ShapeInsertGalleryHandler(\n  commandId: CommandEnum,\n  appStore: AppStore,\n  attr: IControlAttr\n): IRibbonGalleryProps {\n  const galleryItemMap = new Map<ResourceEnum, IControlInfo[]>();\n\n  ShapeGalleryData.forEach(shapeGalleryGroup => {\n    const galleryItemList: Array<IControlInfo> = [];\n    galleryItemMap.set(shapeGalleryGroup.label, galleryItemList);\n    shapeGalleryGroup.items.forEach(shapeGalleryItem => {\n      galleryItemList.push({\n        type: ControlTypeEnum.RIBBON_GALLERY_ITEM,\n        attr: {\n          reactKey: shapeGalleryItem.reactKey,\n          commandId: CommandEnum.SHAPE_INSERT_GALLERY_ITEM,\n          img: shapeGalleryItem.img,\n          subType: shapeGalleryItem.shapeType,\n        },\n      });\n    });\n  });\n\n  const controlInfos = Array.from(galleryItemMap.values()).reduce((acc, curr) => {\n    return acc.concat(curr);\n  }, []);\n\n  const columnNum = 6;\n  const rowNum = 3;\n\n  const {\n    handleArrowUpButtonClick,\n    handleArrowDownButtonClick,\n    disableUpButton,\n    disableDownButton,\n    displayedControlInfos,\n    currentIndex,\n  } = useRibbonGallery({\n    controlInfos,\n    maxCount: columnNum * rowNum,\n  });\n\n  const onClick = (shapeType: ShapeTypeEnum): void => {\n    const commandProps = {\n      commandId: CommandEnum.GRAPHIC_INSERT_SET_UP,\n      shapeType,\n    };\n\n    appStore.handleCommandEvent(commandProps);\n  };\n\n  const dropdownMenuInfo: IDropdownMenuInfo = createShapeDummyGalleryDropdown(\n    galleryItemMap,\n    onClick\n  );\n\n  return {\n    attr: {\n      reactKey: attr.reactKey,\n      disableUpButton,\n      disableDownButton,\n      dropdownMenuInfo,\n    },\n    subControlInfos: displayedControlInfos,\n    eventhandler: {\n      onArrowUpButtonClick: handleArrowUpButtonClick,\n      onArrowDownButtonClick: handleArrowDownButtonClick,\n    },\n  };\n}\n\n/**\n * ShapeInsertGallery의 dropdown을 구성하여 반환합니다.\n *\n * @param galleryItemMap gallery를 구성하는 item의 map\n * @param onClick menu의 내부 item을 클릭했을 때 수행 할 동작\n * @returns 새롭게 구성 한 DropdownMenuInfo\n */\nfunction createShapeDummyGalleryDropdown(\n  galleryItemMap: Map<ResourceEnum, IControlInfo[]>,\n  onClick: (shapeType: ShapeTypeEnum) => void\n): IDropdownMenuInfo {\n  const menuInfo: IDropdownMenuInfo = {\n    className: dropdownMenuStyles.shape_insert_gallery,\n    dropdownMenuSubItemInfos: [],\n  };\n  galleryItemMap.forEach((controlInfoList: IControlInfo[], label: ResourceEnum) => {\n    for (let i = 0; i < 10; i += 1) {\n      const groupInfo: IDropdownMenuItemGroupInfo = {\n        className: dropdownMenuItemGroupStyles.shape_insert_gallery,\n        type: 'group',\n        dropdownMenuSubItemInfos: [],\n      };\n      for (let j = 0; j < 30; j += 1) {\n        controlInfoList.forEach(item => {\n          groupInfo.dropdownMenuSubItemInfos.push({\n            type: 'item',\n            subType: 'a1',\n            selected: false,\n            children: (\n              <RibbonGalleryItemComponent\n                attr={{\n                  reactKey: item.attr.reactKey,\n                  img: item.attr.img,\n                }}\n                eventhandler={{\n                  onClick() {\n                    onClick(item.attr.subType as ShapeTypeEnum);\n                  },\n                }}\n              />\n            ),\n            label: item.attr.label,\n          });\n        });\n      }\n\n      menuInfo.dropdownMenuSubItemInfos.push(\n        {\n          type: 'title',\n          label,\n        },\n        groupInfo\n      );\n    }\n  });\n  return menuInfo;\n}\n","import { useState } from 'react';\nimport { IControlInfo } from 'types/component/frame/control/ControlTypes';\n\n/**\n * useRibbonGallery의 인자를 정의한 interface 입니다.\n *\n * controlInfos: ribbon gallery 내부에 표시 할 수 있는 control의 전체 정보\\\n * maxCount: 한번에 표시할 수 있는 control의 최대 갯수\n */\ninterface UseRibbonGalleryProps {\n  controlInfos: IControlInfo[];\n  maxCount: number;\n}\n\n/**\n * useRibbonGallery의 hook으로서의 type 정의입니다.\n *\n * input ->\\\n * controlInfos: ribbon gallery 내부에 표시 할 수 있는 control의 전체 정보\\\n * maxCount: 한번에 표시할 수 있는 control의 최대 갯수\n *\n * output ->\\\n * handleArrowUpButtonClick: up button을 눌렀을 때의 동작\\\n * handleArrowDownButtonClick: down button을 눌렀을 때의 동작\\\n * disableUpButton: up button의 활성화 여부\\\n * disableDownButton: down button의 활성화 여부\\\n * displayedControlInfos: 현재 표시되어야 할 control의 정보\\\n * currentIndex: 현재 표시되는 control의 index 정보\n */\ntype Hook = (props: UseRibbonGalleryProps) => {\n  handleArrowUpButtonClick(): void;\n  handleArrowDownButtonClick(): void;\n  disableUpButton: boolean;\n  disableDownButton: boolean;\n  displayedControlInfos: IControlInfo[];\n  currentIndex: number;\n};\n\n/**\n * ribbon gallery 내부에 표시되어야 하는 control과 관련된 연산을 하는 hook 입니다.\n *\n * @param UseRibbonGalleryProps\n * controlInfos: ribbon gallery 내부에 표시 할 수 있는 control의 전체 정보\\\n * maxCount: 한번에 표시할 수 있는 control의 최대 갯수\n * @returns\n * handleArrowUpButtonClick: up button을 눌렀을 때의 동작\\\n * handleArrowDownButtonClick: down button을 눌렀을 때의 동작\\\n * disableUpButton: up button의 활성화 여부\\\n * disableDownButton: down button의 활성화 여부\\\n * displayedControlInfos: 현재 표시되어야 할 control의 정보\\\n * currentIndex: 현재 표시되는 control의 index 정보\n */\nconst useRibbonGallery: Hook = ({ controlInfos, maxCount }: UseRibbonGalleryProps) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const disableUpButton = currentIndex === 0;\n  const disableDownButton = Math.ceil(controlInfos.length / maxCount) - 1 <= currentIndex;\n\n  const displayedControlInfos = controlInfos.flatMap((controlInfo: IControlInfo, index: number) => {\n    return index >= currentIndex * maxCount && index < (currentIndex + 1) * maxCount\n      ? controlInfo\n      : [];\n  });\n\n  const handleArrowUpButtonClick = () => {\n    if (disableUpButton) {\n      return;\n    }\n    setCurrentIndex(prev => prev - 1);\n  };\n\n  const handleArrowDownButtonClick = () => {\n    if (disableDownButton) {\n      return;\n    }\n    setCurrentIndex(prev => prev + 1);\n  };\n\n  return {\n    handleArrowUpButtonClick,\n    handleArrowDownButtonClick,\n    disableUpButton,\n    disableDownButton,\n    displayedControlInfos,\n    currentIndex,\n  };\n};\n\nexport default useRibbonGallery;\n","import AppStore from 'store/AppStore';\nimport { IControlAttr, IControlProps } from 'types/component/frame/control/ControlTypes';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\n\n/**\n * ShapeInsertGallery의 내부 item에 해당하는 ControlHandler 입니다.\n *\n * @param commandId 실행 할 commandId\n * @param appStore 현재 app의 정보를 담고 있는 AppStore\n * @param attr control의 세부 정보\n * @returns 새롭게 구성 한 ControlProps\n */\nexport default function ShapeInsertGalleryItemHandler(\n  commandId: CommandEnum,\n  appStore: AppStore,\n  attr: IControlAttr\n): IControlProps {\n  return {\n    attr: { reactKey: attr.reactKey },\n    eventhandler: {\n      onClick: () => {\n        const commandProps = {\n          commandId: CommandEnum.GRAPHIC_INSERT_SET_UP,\n          shapeType: attr.subType as ShapeTypeEnum,\n        };\n\n        appStore.handleCommandEvent(commandProps);\n      },\n    },\n  };\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppStore from 'store/AppStore';\nimport ShapeInsertGalleryHandler from 'store/container/ui/controlhandler/handler/ShapeInsertGalleryHandler';\nimport ShapeInsertGalleryItemHandler from 'store/container/ui/controlhandler/handler/ShapeInsertGalleryItemHandler';\nimport { ControlHandlerMapType } from 'types/component/frame/contolhandler/WithControlHandlerTypes';\nimport {\n  IControlAttr,\n  IControlEvent,\n  IControlInfo,\n  IControlProps,\n  ICustomControlProps,\n} from 'types/component/frame/control/ControlTypes';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\n\n/**\n * ControlInfo를 분석하여 추가 정보를 제공하는 ControlHandler를 관리하고 적용하는 역할을 합니다.\n */\nexport default class ControlHandlerContainer {\n  /**\n   * ControlHandler를 관리하는 map 입니다.\n   */\n  private readonly controlHandlerMap: ControlHandlerMapType;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.controlHandlerMap = this.initControlHandlerMap();\n  }\n\n  /**\n   * ControlHandlerMap을 초기화 합니다.\n   *\n   * @returns 새로 생성한 ControlHandlerMap\n   */\n  @boundMethod\n  private initControlHandlerMap(): ControlHandlerMapType {\n    return new Map([\n      [CommandEnum.SHAPE_INSERT_GALLERY, ShapeInsertGalleryHandler],\n      [CommandEnum.SHAPE_INSERT_GALLERY_ITEM, ShapeInsertGalleryItemHandler],\n    ]);\n  }\n\n  /**\n   * CommandId에 맞는 ControlHandler를 찾아 controlInfo를 해석하여 적절한 ControlProps를 반환합니다.\n   *\n   * @param controlInfo controlInfo\n   * @param appStore 현재 app의 정보를 담고있는 AppStore\n   * @returns 새롭게 생성한 ControlProps\n   */\n  @boundMethod\n  public getHandledControlProps(\n    controlInfo: IControlInfo,\n    appStore: AppStore\n  ): IControlProps | ICustomControlProps<IControlAttr, IControlEvent> {\n    const handler = this.controlHandlerMap.get(controlInfo.attr.commandId as CommandEnum);\n    if (handler !== undefined) {\n      return handler(\n        controlInfo.attr.commandId as CommandEnum,\n        appStore,\n        controlInfo.attr,\n        controlInfo.subControlInfos\n      );\n    }\n    return this.defaultControlHandler(controlInfo, appStore);\n  }\n\n  /**\n   * custom control handler가 없는 경우 기본으로 처리 할 control handler 입니다.\n   *\n   * @param controlInfo controlInfo\n   * @param appStore 현재 app의 정보를 담고있는 AppStore\n   * @returns 새롭게 생성한 ControlProps\n   */\n  @boundMethod\n  private defaultControlHandler(controlInfo: IControlInfo, appStore: AppStore): IControlProps {\n    const commandId = controlInfo.attr.commandId as CommandEnum;\n    return {\n      attr: { reactKey: controlInfo.attr.reactKey },\n      eventhandler: {\n        onClick: () => {\n          appStore.handleCommandEvent({ commandId });\n        },\n      },\n    };\n  }\n}\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./ToolPane.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { PropsWithChildren } from 'react';\nimport { IButtonBaseProps } from 'types/component/frame/control/button/ButtonBaseTypes';\n\n/**\n * button component를 생성합니다.\n *\n * @param IButtonBaseProps Button 관련 정보\n */\nconst ButtonBaseComponent = React.forwardRef<\n  HTMLButtonElement,\n  PropsWithChildren<IButtonBaseProps>\n>(\n  (\n    { children, selected, ...props }: PropsWithChildren<IButtonBaseProps>,\n    ref\n  ): React.JSX.Element => {\n    return (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      <button type=\"button\" aria-pressed={selected} ref={ref} {...props}>\n        {children}\n      </button>\n    );\n  }\n);\n\nexport default ButtonBaseComponent;\n","import ImgResComponent from 'component/frame/control/resource/ImgResComponent';\nimport React from 'react';\nimport { IButtonBaseIconProps } from 'types/component/frame/control/button/ButtonBaseTypes';\n\n/**\n * ButtonBaseComponent와 함께 사용 할 ImgResComponent를 생성합니다<div className=\"\"></div>\n *\n * @param props IButtonBaseIconProps icon 생성을 위한 정보\n */\nconst ButtonBaseIconComponent = (props: IButtonBaseIconProps): React.JSX.Element => {\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <ImgResComponent {...props} />;\n};\n\nexport default ButtonBaseIconComponent;\n","import ButtonBaseComponent from 'component/frame/control/button/base/ButtonBaseComponent';\nimport ButtonIconComponent from 'component/frame/control/button/base/ButtonBaseIconComponent';\nimport React from 'react';\nimport { IIconButtonProps } from 'types/component/frame/control/button/IconButtonTypes';\n\n/**\n * button 태그를 가진 요소를 생성하는 component 입니다.\n * 내부에 ImgResComponent 를 가집니다.\n *\n * @param param0 IIconButtonProps IconButton 정보\n */\nconst IconButtonComponent = ({\n  img,\n  width,\n  height,\n  ...props\n}: IIconButtonProps): React.JSX.Element => {\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <ButtonBaseComponent {...props}>\n      <ButtonIconComponent img={img} width={width} height={height} />\n    </ButtonBaseComponent>\n  );\n};\n\nexport default IconButtonComponent;\n","import { useTranslation } from 'react-i18next';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\n\n/**\n * text에 해당하는 resource 를 반환하는 hook 입니다.\n *\n * @param resourceId 찾고 싶은 label의 id\n * @returns id에 해당하는 resource 값\n */\nfunction useTextRes(resourceId: Nullable<ResourceEnum>): string {\n  const { t } = useTranslation();\n\n  return resourceId ? t(resourceId) : '';\n}\n\nexport default useTextRes;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./ToolPaneTitle.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import IconButtonComponent from 'component/frame/control/button/IconButtonComponent';\nimport useTextRes from 'hook/resource/useTextRes';\nimport React from 'react';\nimport { ToolPaneTitleProps } from 'types/component/frame/workarea/toolpane/ToolPaneTypes';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\n\nimport styles from 'scss/component/frame/workarea/toolpane/ToolPaneTitle.module.scss';\n\nconst ToolPaneTitleComponent = ({\n  label,\n  onCloseIconClick,\n}: ToolPaneTitleProps): React.JSX.Element => {\n  const title = useTextRes(label);\n\n  return (\n    <div className={styles.title}>\n      <span className={styles.label}>{title}</span>\n      <IconButtonComponent\n        className={styles.closeIcon}\n        img={ResourceEnum.IMG_TOOLPANE_CLOSE}\n        width=\"20px\"\n        height=\"20px\"\n        onClick={onCloseIconClick}\n      />\n    </div>\n  );\n};\n\nexport default ToolPaneTitleComponent;\n","import React, { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { ToolPaneProps } from 'types/component/frame/workarea/toolpane/ToolPaneTypes';\nimport useAppStore from 'hook/store/useAppStore';\nimport styles from 'scss/component/frame/workarea/toolpane/ToolPane.module.scss';\nimport ToolPaneTitleComponent from './ToolPaneTitleComponent';\n\nconst ToolPaneComponent = ({ label, children }: ToolPaneProps): React.JSX.Element => {\n  const appStore = useAppStore();\n  const toolPaneContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getUIContainer()\n    .getToolPaneContainer();\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  const closeToolPane = () => {\n    if (ref.current !== null) {\n      (ref.current as HTMLDivElement).className = '';\n      // BROWSER의 REFLOW를 강제로 하기 위함\n      // eslint-disable-next-line babel/no-unused-expressions\n      ref.current.offsetWidth;\n      (ref.current as HTMLDivElement).className = classNames(styles.toolPane, styles.close);\n    }\n  };\n\n  useEffect(() => {\n    toolPaneContainer.setCloseToolPaneFunction(() => {\n      closeToolPane();\n    });\n  }, []);\n\n  const isOpenWithAnimation = toolPaneContainer.getIsOpenWithAnimation();\n\n  return (\n    <div ref={ref} className={classNames(styles.toolPane, isOpenWithAnimation && styles.open)}>\n      <ToolPaneTitleComponent\n        label={label}\n        onCloseIconClick={() => {\n          closeToolPane();\n        }}\n      />\n      {children}\n    </div>\n  );\n};\n\nexport default ToolPaneComponent;\n","import React from 'react';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport ToolPaneComponent from '../ToolPaneComponent';\n\nconst DummieToolPaneComponent = (): React.JSX.Element => {\n  return <ToolPaneComponent label={ResourceEnum.TXT_DUMMIE_TOOLPANE_TITLE} />;\n};\n\nexport default DummieToolPaneComponent;\n","import React from 'react';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport ToolPaneComponent from '../ToolPaneComponent';\n\nconst DummyToolPaneComponent = (): React.JSX.Element => {\n  return <ToolPaneComponent label={ResourceEnum.TXT_DUMMY_TOOLPANE_TITLE} />;\n};\n\nexport default DummyToolPaneComponent;\n","import { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { ToolPaneTypeEnum } from './ToolPaneTypeEnum';\n\nexport const BasicToolPane = true;\n\nexport const ContextualToolPane = false;\n\nexport type ToolPaneType = typeof BasicToolPane | typeof ContextualToolPane;\n\nexport type ToolPaneInfo = {\n  img: ResourceEnum;\n  type: ToolPaneType;\n  content?: () => React.JSX.Element;\n  disabled?: boolean;\n};\n\nexport type ToolPaneInfoMap = Map<ToolPaneTypeEnum, ToolPaneInfo>;\n","export enum ToolPaneTypeEnum {\n  DUMMY = 0,\n  DUMMIE,\n}\n","import { boundMethod } from 'autobind-decorator';\nimport DummieToolPaneComponent from 'component/frame/workarea/toolpane/extended/DummieToolPaneComponent';\nimport DummyToolPaneComponent from 'component/frame/workarea/toolpane/extended/DummyToolPaneComponent';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport {\n  BasicToolPane,\n  ToolPaneInfo,\n  ToolPaneInfoMap,\n} from 'types/store/container/ui/toolpane/ToolPaneContainerTypes';\nimport { ToolPaneTypeEnum } from 'types/store/container/ui/toolpane/ToolPaneTypeEnum';\n\nexport default class ToolPaneContainer {\n  private toolPaneInfoMap: ToolPaneInfoMap;\n\n  private toolPaneList: Array<ToolPaneTypeEnum>;\n\n  private isToolPaneOpened: boolean;\n\n  private isOpenWithAnimation: boolean;\n\n  private selectedToolPaneId: Nullable<ToolPaneTypeEnum>;\n\n  private rerenderToolPaneWrapperFunction: Nullable<() => void>;\n\n  private closeToolPaneFunction: Nullable<() => void>;\n\n  public constructor() {\n    this.toolPaneInfoMap = this.initToolPaneInfoMap();\n    this.toolPaneList = this.initToolPaneList();\n    this.isToolPaneOpened = false;\n    this.isOpenWithAnimation = false;\n    this.selectedToolPaneId = undefined;\n    this.rerenderToolPaneWrapperFunction = undefined;\n    this.closeToolPaneFunction = undefined;\n  }\n\n  @boundMethod\n  private initToolPaneInfoMap(): ToolPaneInfoMap {\n    return new Map([\n      [\n        ToolPaneTypeEnum.DUMMY,\n        {\n          img: ResourceEnum.IMG_TOOLPANE_DOCK_DUMMY,\n          type: BasicToolPane,\n          content: DummyToolPaneComponent,\n        },\n      ],\n      [\n        ToolPaneTypeEnum.DUMMIE,\n        {\n          img: ResourceEnum.IMG_TOOLPANE_DOCK_DUMMIE,\n          type: BasicToolPane,\n          content: DummieToolPaneComponent,\n        },\n      ],\n    ]);\n  }\n\n  @boundMethod\n  private initToolPaneList(): Array<ToolPaneTypeEnum> {\n    return [ToolPaneTypeEnum.DUMMY, ToolPaneTypeEnum.DUMMIE];\n  }\n\n  @boundMethod\n  public getToolPaneInfo(toolPaneId: Nullable<ToolPaneTypeEnum>): Nullable<ToolPaneInfo> {\n    if (toolPaneId !== undefined) {\n      return this.toolPaneInfoMap.get(toolPaneId);\n    }\n    return undefined;\n  }\n\n  @boundMethod\n  public getToolPaneInfoList(): [ToolPaneTypeEnum, Nullable<ToolPaneInfo>][] {\n    return this.toolPaneList.map(toolPaneId => {\n      return [toolPaneId, this.getToolPaneInfo(toolPaneId)];\n    });\n  }\n\n  @boundMethod\n  public getIsToolPaneOpened(): boolean {\n    return this.isToolPaneOpened;\n  }\n\n  @boundMethod\n  private setIsToolPaneOpened(isToolPaneOpened: boolean): void {\n    this.isToolPaneOpened = isToolPaneOpened;\n  }\n\n  @boundMethod\n  public getIsOpenWithAnimation(): boolean {\n    return this.isOpenWithAnimation;\n  }\n\n  @boundMethod\n  private setIsOpenWithAnimation(isOpenWithAnimation: boolean): void {\n    this.isOpenWithAnimation = isOpenWithAnimation;\n  }\n\n  @boundMethod\n  public getSelectedToolPaneId(): Nullable<ToolPaneTypeEnum> {\n    return this.selectedToolPaneId;\n  }\n\n  @boundMethod\n  private setSelectedToolPaneId(selectedToolPaneId: Nullable<ToolPaneTypeEnum>): void {\n    this.selectedToolPaneId = selectedToolPaneId;\n  }\n\n  @boundMethod\n  public setRerenderToolPaneWrapperFunction(rerenderToolPaneWrapperFunction: () => void): void {\n    this.rerenderToolPaneWrapperFunction = rerenderToolPaneWrapperFunction;\n  }\n\n  @boundMethod\n  public setCloseToolPaneFunction(closeToolPaneFunction: () => void): void {\n    this.closeToolPaneFunction = closeToolPaneFunction;\n  }\n\n  @boundMethod\n  public openToolPane(toolPaneId: ToolPaneTypeEnum): void {\n    if (this.getIsToolPaneOpened() === false) {\n      this.setIsToolPaneOpened(true);\n      this.setIsOpenWithAnimation(true);\n    } else {\n      this.setIsOpenWithAnimation(false);\n    }\n    this.setSelectedToolPaneId(toolPaneId);\n    if (this.rerenderToolPaneWrapperFunction !== undefined) {\n      this.rerenderToolPaneWrapperFunction();\n    }\n  }\n\n  @boundMethod\n  public closeToolPane(): void {\n    if (this.closeToolPaneFunction !== undefined) {\n      this.closeToolPaneFunction();\n      this.closeToolPaneFunction = undefined;\n    }\n    setTimeout(() => {\n      this.setIsToolPaneOpened(false);\n      if (this.rerenderToolPaneWrapperFunction !== undefined) {\n        this.rerenderToolPaneWrapperFunction();\n      }\n    }, 400);\n  }\n\n  @boundMethod\n  public closeToolPaneByCloseIcon(): void {\n    this.closeToolPane();\n  }\n\n  @boundMethod\n  public onToolPaneDockButtonClicked(toolPaneId: ToolPaneTypeEnum): void {\n    if (this.getIsToolPaneOpened() === true && this.getSelectedToolPaneId() === toolPaneId) {\n      this.closeToolPane();\n      return;\n    }\n    this.openToolPane(toolPaneId);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport ControlHandlerContainer from 'store/container/ui/controlhandler/ControlHandlerContainer';\nimport ToolPaneContainer from './toolpane/ToolPaneContainer';\n\n/**\n * ui 관련 정보를 담는 container 입니다.\n * dropdown의 depth, recently accessed control, tooltip 등의 정보를 관리하게 될 예정입니다.\n */\nexport default class UIContainer {\n  /**\n   * ControlInfo를 해석하여 추가 정보를 구성하는 ControlHandler를 관리합니다.\n   */\n  private controlHandlerContainer: ControlHandlerContainer;\n\n  private toolPaneContainer: ToolPaneContainer;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.controlHandlerContainer = new ControlHandlerContainer();\n    this.toolPaneContainer = new ToolPaneContainer();\n  }\n\n  /**\n   * ControlhandlerContainer를 반환합니다.\n   *\n   * @returns ControlhandlerContainer\n   */\n  @boundMethod\n  public getControlHandlerContainer(): ControlHandlerContainer {\n    return this.controlHandlerContainer;\n  }\n\n  @boundMethod\n  public getToolPaneContainer(): ToolPaneContainer {\n    return this.toolPaneContainer;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport SlideModel from 'model/node/slide/SlideModel';\n\nexport default class ViewModeContainer {\n  private zoomRatio: number;\n\n  private isFitZoom: boolean;\n\n  private editViewSizeTrackerRef: Nullable<React.RefObject<HTMLDivElement>>;\n\n  private rerenderEditViewFunction: Nullable<() => void>;\n\n  private currentRenderingSlideModel: Nullable<SlideModel>;\n\n  constructor() {\n    this.zoomRatio = 1;\n    this.isFitZoom = true;\n    this.editViewSizeTrackerRef = undefined;\n    this.rerenderEditViewFunction = undefined;\n    this.currentRenderingSlideModel = undefined;\n  }\n\n  @boundMethod\n  public getZoomRatio(): number {\n    return this.zoomRatio;\n  }\n\n  @boundMethod\n  public setZoomRatio(zoomRatio: number): void {\n    this.zoomRatio = zoomRatio;\n  }\n\n  @boundMethod\n  public getIsFitZoom(): boolean {\n    return this.isFitZoom;\n  }\n\n  @boundMethod\n  public setIsFitZoom(isFitZoom: boolean): void {\n    this.isFitZoom = isFitZoom;\n  }\n\n  @boundMethod\n  public setEditViewSizeTrackerRef(\n    editViewSizeTrackerRef: Nullable<React.RefObject<HTMLDivElement>>\n  ): void {\n    this.editViewSizeTrackerRef = editViewSizeTrackerRef;\n  }\n\n  @boundMethod\n  public getEditViewSizeTrackerRef(): Nullable<React.RefObject<HTMLDivElement>> {\n    return this.editViewSizeTrackerRef;\n  }\n\n  @boundMethod\n  public setRerenderEditViewFunction(rerenderEditViewFunction: () => void): void {\n    this.rerenderEditViewFunction = rerenderEditViewFunction;\n  }\n\n  @boundMethod\n  public rerenderEditView(): void {\n    if (this.rerenderEditViewFunction !== undefined) {\n      this.rerenderEditViewFunction();\n    }\n  }\n\n  @boundMethod\n  public setCurrentRenderingSlideModel(slideModel: Nullable<SlideModel>): void {\n    this.currentRenderingSlideModel = slideModel;\n  }\n\n  @boundMethod\n  public getCurrentRenderingSlideModel(): Nullable<SlideModel> {\n    return this.currentRenderingSlideModel;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport CommandCompositor from 'store/manager/command/CommandCompositor';\n\n/**\n * Command 들을 stack 형태로 보관하는 class 입니다.\n * undoable 한 commandCompositor 들을 실행 후 undo stack 에 보관합니다.\n * Stack 의 이름이나, 실제로는 deque 형태로 동작합니다.\n * Command 가 계속 push 되어 stack size 를 넘어가면 FIFO 형태로 commandCompositor를 제거합니다.\n */\nexport default class UndoStack {\n  /**\n   * Undo stack 입니다. 실행을 마친 commandCompositor 를 보관합니다.\n   */\n  private undoStack: CommandCompositor[];\n\n  /**\n   * Undo 된 command 를 보관하는 redo stack 입니다. Command execute 시 clear 됩니다.\n   */\n  private redoStack: CommandCompositor[];\n\n  /**\n   * Undo stack 의 max size 를 의미합니다.\n   */\n  private readonly size: number;\n\n  /**\n   * 생성자\n   *\n   * @param size undoStack의 크기\n   */\n  public constructor(size = 20) {\n    this.undoStack = [];\n    this.redoStack = [];\n    this.size = size;\n  }\n\n  /**\n   * Undo 가 가능한 상태인지 확인합니다.\n   *\n   * @returns Undo stack 에 command 가 있는 경우 true\n   */\n  @boundMethod\n  public canUndo(): boolean {\n    return this.undoStack.length > 0;\n  }\n\n  /**\n   * Redo 가 가능한 상태인지 확인합니다.\n   *\n   * @returns Redo stack 에 command 가 있는 경우 true\n   */\n  @boundMethod\n  public canRedo(): boolean {\n    return this.redoStack.length > 0;\n  }\n\n  /**\n   * 샐항을 마친 commandCompositor 를 undo stack 에 추가합니다.\n   * Redo stack 을 clear 하며, undo stack size 가 넘어가는 경우 FIFO 형태로 제거합니다..\n   *\n   * @param commandCompositor 실행을 마친 commandCompositor\n   */\n  @boundMethod\n  public push(commandCompositor: CommandCompositor): void {\n    this.redoStack = [];\n    this.undoStack.push(commandCompositor);\n    if (this.undoStack.length > this.size) {\n      this.undoStack.shift();\n    }\n  }\n\n  /**\n   * Undo 해야 할 CommandCompositor 를 redo stack 으로 옮기고 반환합니다.\n   *\n   * @returns Undo 해야 할 CommandCompositor, undo stack 이 비어있다면 undefined\n   */\n  @boundMethod\n  public prev(): Nullable<CommandCompositor> {\n    const command = this.undoStack.pop();\n    if (command === undefined) {\n      return undefined;\n    }\n    this.redoStack.push(command);\n    return command;\n  }\n\n  /**\n   * Redo 해야 할 CommandCompositor 를 undo stack 으로 옯기고 반환 합니다.\n   *\n   * @returns Redo 해야 할 CommandCompositor, redo stack 이 비어있다면 undefined\n   */\n  @boundMethod\n  public next(): Nullable<CommandCompositor> {\n    const command = this.redoStack.pop();\n    if (command === undefined) {\n      return undefined;\n    }\n    this.undoStack.push(command);\n    return command;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { ISelection } from 'types/store/selection/SelectionTypes';\n\n/**\n * 개별 graphicModel의 selection을 담당하는 class 입니다.\n */\nexport default class GraphicModelSelection implements ISelection {\n  /**\n   * 선택되어있는 model\n   */\n  private selectedModel: GraphicModel;\n\n  /**\n   * 생성자\n   *\n   * @param graphicModel 이 GraphicModelSelection에서 관리 할 graphicModel\n   */\n  public constructor(graphicModel: GraphicModel) {\n    this.selectedModel = graphicModel;\n  }\n\n  /**\n   * selection이 관리하는 selectedModel을 반환합니다.\n   *\n   * @returns selectedModel\n   */\n  @boundMethod\n  public getModel(): GraphicModel {\n    return this.selectedModel;\n  }\n\n  /**\n   * 자신을 복사하여 반환합니다.\n   *\n   * @returns 복사한 graphicModelSelection\n   */\n  @boundMethod\n  public clone(): GraphicModelSelection {\n    return new GraphicModelSelection(this.selectedModel);\n  }\n}\n","import TreeNode from 'model/node/TreeNode';\n\n/**\n * selection container 의 내부에서 각 type별 node의 selection을 담당하는 class 입니다.\n */\nexport default abstract class InternalSelectionContainer {\n  /**\n   * selection에 포함할 수 있는지 검사하는 함수입니다.\n   * 대상 node 뿐 아니라 대상 node의 자식을 포함하여야 하는 경우\n   * (appendTreeNode에서 해당 case를 처리해야 하는 경우)도\n   * 포함하여 고려합니다.\n   *\n   * @param treeNode selection으로 포함할 수 있는지 검사할 대상\n   */\n  public abstract isRelatedModel(treeNode: TreeNode): boolean;\n\n  /**\n   * selection array에 treeNode를 추가합니다.\n   * isRelatedModel로 확인된 treeNode만 들어옵니다.\n   *\n   * @param selection 추가 할 treeNode\n   */\n  public abstract appendTreeNode(treeNode: TreeNode): void;\n\n  /**\n   * Container가 Selection을 가지고 있는지 여부\n   */\n  public abstract hasSelection(): boolean;\n\n  /**\n   * 현재 Select된 models\n   */\n  public abstract getSelectedModels(): TreeNode[];\n}\n","/**\n * Graphic model 의 type을 정하는 enum 입니다.\n */\nexport enum GraphicTypeEnum {\n  SHAPE = 0,\n  GROUP,\n}\n","import GraphicModel from 'model/node/graphic/GraphicModel';\nimport SlideModel from 'model/node/slide/SlideModel';\nimport TreeNode from 'model/node/TreeNode';\nimport { TreeNodeTypeEnum } from 'types/model/node/TreeNodeTypeEnum';\n\n/**\n * 주어진 node 가 특정 타입(T)인지를 확인하는 타입 가드 함수입니다.\n *\n * @param node 콘텐츠 타입을 확인하려는 TreeNode\n * @param nodeTypeEnum 확인하려는 node의 type\n * @returns node가 확인하려는 type인지의 여부\n */\nconst isTreeNodeOfType = <T extends TreeNode>(\n  node: Nullable<T>,\n  nodeTypeEnum: TreeNodeTypeEnum\n): node is T => node?.getTreeNodeType() === nodeTypeEnum;\n\n/**\n * 주어진 node가 GraphicModel인지 확인합니다.\n *\n * @param node 확인하려는 node\n * @returns node가 GraphicModel인지의 여부\n */\nexport const isSlideModel = (node: Nullable<TreeNode>): node is SlideModel =>\n  isTreeNodeOfType(node, TreeNodeTypeEnum.SLIDE);\n\n/**\n * 주어진 node가 GraphicModel인지 확인합니다.\n *\n * @param node 확인하려는 node\n * @returns node가 GraphicModel인지의 여부\n */\nexport const isGraphicModel = (node: Nullable<TreeNode>): node is GraphicModel =>\n  isTreeNodeOfType(node, TreeNodeTypeEnum.GRAPHIC_MODEL);\n","import GraphicModel from 'model/node/graphic/GraphicModel';\nimport { GraphicTypeEnum } from 'types/model/node/graphic/GraphicTypeEnum';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\n\n/**\n * 특정 GraphicModel이 group type인지 확인합니다.\n *\n * @param graphicModel group인지 검사 할 GraphicModel\n * @returns GraphicModel이 group type이면 true\n */\nexport function isGroup(graphicModel: GraphicModel): boolean {\n  return graphicModel.getGraphicType() === GraphicTypeEnum.GROUP;\n}\n\n/**\n * GraphicModel의 parent group을 반환합니다.\n * parent group이 없는 경우 undefined를 반환합니다.\n *\n * @param graphicModel parent group을 찾을 graphic model\n * @returns graphicModel의 parentGroup\n */\nexport function getParentGroup(graphicModel: GraphicModel): Nullable<GraphicModel> {\n  const parentNode = graphicModel.getParent();\n\n  if (isGraphicModel(parentNode) && isGroup(parentNode) === true) {\n    return parentNode;\n  }\n\n  return undefined;\n}\n\n/**\n * graphicModel이 group의 자식인지 확인합니다.\n *\n * @param graphicModel group의 자식인지 확인 할 graphicModel\n * @returns grahpicModel이 group의 자식이면 true\n */\nexport function isGroupChild(graphicModel: GraphicModel): boolean {\n  return getParentGroup(graphicModel) !== undefined;\n}\n\n/**\n * graphicModel이 gropu을 구성하는 tree의 일부인지 확인합니다.\n *\n * @param graphicModel group의 member인지 확인 할 graphicModel\n * @returns graphicModel이 group의 member인 경우 true\n */\nexport function isGroupMember(graphicModel: GraphicModel): boolean {\n  return isGroup(graphicModel) === true || isGroupChild(graphicModel) === true;\n}\n\n/**\n * 최 상위 group을 반환하는 함수입니다.\n * 인자로 받은 graphicModel을 포함하여 반환\n * graphicModel이 group member가 아닌 경우 undefined를 반환합니다.\n *\n * @param graphicModel 최상위 group을 찾을 graphicModel\n * @returns graphicModel의 최상위 group\n */\nexport function getRootGroup(graphicModel: GraphicModel): Nullable<GraphicModel> {\n  let rootGroup: Nullable<GraphicModel>;\n  let parentGroup: Nullable<GraphicModel>;\n  let childGraphicModel = graphicModel;\n\n  if (isGroup(graphicModel) === true) {\n    rootGroup = graphicModel;\n  }\n\n  do {\n    parentGroup = getParentGroup(childGraphicModel);\n\n    if (parentGroup !== undefined) {\n      rootGroup = parentGroup;\n      childGraphicModel = parentGroup;\n    }\n  } while (parentGroup !== undefined);\n\n  return rootGroup;\n}\n\n/**\n * group인 경우, 하위 tree의 모든 graphicModel을 array로 반환합니다.\n * 해당 graphicModel 이 group이 아니거나 group member가 아닌 경우 빈 array를 반환 합니다.\n *\n * @param graphicModel 자식 node를 수집 할 group\n * @returns 수집한 자식 node의 array\n */\nexport function getChildGraphicModelList(graphicModel: GraphicModel): Array<GraphicModel> {\n  const childGraphicModelList = new Array<GraphicModel>();\n  collectChildGraphicModelRecursively(graphicModel, childGraphicModelList);\n\n  return childGraphicModelList;\n}\n\n/**\n * getChildGraphicModelList의 내부 함수입니다.\n * 재귀 호출을 위하여 별도로 분리하였습니다.\n *\n * @param parent 자식 node를 검색 할 group\n * @param childGraphicModelList 자식 node들을 담을 array\n */\nfunction collectChildGraphicModelRecursively(\n  parent: GraphicModel,\n  childGraphicModelList: Array<GraphicModel>\n) {\n  if (isGroup(parent) === true) {\n    parent.forEachChild(chlid => {\n      if (isGraphicModel(chlid)) {\n        childGraphicModelList.push(chlid);\n\n        if (isGroup(chlid) === true) {\n          collectChildGraphicModelRecursively(chlid, childGraphicModelList);\n        }\n      }\n    });\n  }\n}\n\n/**\n * 최 상위 group 부터 해당 group을 구성하는 모든 graphicModel을 array로 반환합니다.\n * 해당 graphicModel 이 group member가 아닌 경우 빈 array를 반환 합니다.\n *\n * @param graphicModel tree 구성요소를 수집 할 graphicModel\n * @returns root group부터 tree 구성 요소를 수집 한 array\n */\nexport function getAllGroupMemeberFromRootGroup(graphicModel: GraphicModel): Array<GraphicModel> {\n  const groupMemberList = new Array<GraphicModel>();\n\n  const rootGroup = getRootGroup(graphicModel);\n\n  if (rootGroup !== undefined) {\n    groupMemberList.push(rootGroup);\n    collectChildGraphicModelRecursively(rootGroup, groupMemberList);\n  }\n\n  return groupMemberList;\n}\n\n/**\n * 바로 상단의 부모 group 부터 root group 까지 모든 부모 group을 모아서 반환하는 함수입니다.\n * 기본으로 가까운 부모부터 root group 까지 멀어지는 순으로 array 구성합니다.\n * 인자로 받은 graphicModel은 제외하고 반환합니다.\n *\n * @param graphicModel 부모 group 을 찾을 grahpicModel\n * @returns 부모 group을 모은 array\n */\nexport function getAllParentGroupList(\n  graphicModel: GraphicModel,\n  startFromRootGroup: boolean\n): Array<GraphicModel> {\n  let ancestorsList = new Array<GraphicModel>();\n  let parentGroup: Nullable<GraphicModel> = graphicModel;\n\n  do {\n    parentGroup = getParentGroup(parentGroup);\n\n    if (parentGroup !== undefined) {\n      ancestorsList.push(parentGroup);\n    }\n  } while (parentGroup !== undefined);\n\n  if (startFromRootGroup === true) {\n    ancestorsList = ancestorsList.reverse();\n  }\n\n  return ancestorsList;\n}\n","import { boundMethod } from 'autobind-decorator';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport TreeNode from 'model/node/TreeNode';\nimport GraphicModelSelection from 'store/manager/selection/graphic/GraphicModelSelection';\nimport InternalSelectionContainer from 'store/manager/selection/InternalSelectionContainer';\nimport { getRootGroup, isGroupMember } from 'util/node/graphic/GraphicModelTreeNodeUtil';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\n\n/**\n * GraphicModel의 selection을 관리하는 class 입니다.\n */\nexport default class GraphicModelSelectionContainer extends InternalSelectionContainer {\n  /**\n   * GraphicModel의 selection list\n   */\n  private graphicModelSelections: GraphicModelSelection[];\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    super();\n    this.graphicModelSelections = new Array<GraphicModelSelection>();\n  }\n\n  /**\n   * 이 selection container에 추가 할 수 있는 type인지 확인합니다.ㅣ\n   *\n   * @param treeNode 추가하고 싶은 node\n   * @returns SelectionContainer에 추가 할 수 있는지의 여부\n   */\n  @boundMethod\n  public isRelatedModel(treeNode: TreeNode): boolean {\n    return isGraphicModel(treeNode);\n  }\n\n  /**\n   * node를 selection에 추가합니다.\n   *\n   * @param model selection에 추가하고 싶은 treeNode\n   */\n  @boundMethod\n  public appendTreeNode(model: TreeNode): void {\n    const graphicModel = model;\n    if (isGraphicModel(graphicModel)) {\n      this.graphicModelSelections.push(new GraphicModelSelection(graphicModel));\n    }\n  }\n\n  /**\n   * 이 selection container가 selection을 가지고 있는지 확인합니다.\n   *\n   * @returns selection이 하나라도 있으면 true\n   */\n  @boundMethod\n  public hasSelection(): boolean {\n    return this.getSize() > 0;\n  }\n\n  /**\n   * selection에 담겨있는 모든 treeNode를 반환합니다.\n   *\n   * @returns selection에 담겨있는 모든 treeNode\n   */\n  @boundMethod\n  public getSelectedModels(): TreeNode[] {\n    return this.getSelectedGraphicModels();\n  }\n\n  @boundMethod\n  public getSelectedGraphicModels(): GraphicModel[] {\n    return this.graphicModelSelections.map(graphicModelSelection => {\n      return graphicModelSelection.getModel();\n    });\n  }\n\n  /**\n   * selection 전체를 반환합니다.\n   *\n   * @returns 가지고있는 graphicModelSelectionList\n   */\n  @boundMethod\n  public getGraphicModelSelections(): GraphicModelSelection[] {\n    return this.graphicModelSelections;\n  }\n\n  /**\n   * selection 중 첫 번째 selection을 반환합니다.\n   *\n   * @returns 가지고 있는 selection 중 첫 번째 selection\n   */\n  @boundMethod\n  public getFirstGraphicModelSelection(): GraphicModelSelection | undefined {\n    return this.graphicModelSelections.length !== 0 ? this.graphicModelSelections[0] : undefined;\n  }\n\n  /**\n   * 특정 graphicModel을 포함한 selection을 가지고 있는지 확인합니다.\n   *\n   * @param graphicModel 확인 할 graphicModel\n   * @returns grahpicModel이 selection에 포함되어 있으면 true\n   */\n  @boundMethod\n  public hasGraphicModelSelection(graphicModel: GraphicModel): boolean {\n    return this.getGraphicModelSelection(graphicModel) !== undefined;\n  }\n\n  /**\n   * 특정 graphicModel을 담고 있는 selection을 반환합니다.\n   *\n   * @param graphicModel 확인 할 graphicModel\n   * @returns graphicModel을 담고 있는 selection\n   */\n  @boundMethod\n  public getGraphicModelSelection(graphicModel: GraphicModel): Nullable<GraphicModelSelection> {\n    return this.graphicModelSelections.find(graphicModelSelection => {\n      return graphicModelSelection.getModel() === graphicModel;\n    });\n  }\n\n  /**\n   * 현재 selection의 크기를 반환합니다.\n   *\n   * @returns 현재 selection의 크기\n   */\n  @boundMethod\n  public getSize(): number {\n    return this.graphicModelSelections.length;\n  }\n\n  /**\n   * 특정 rootGroup의 하위 treeNode가 selection에 포함되어 있는지 확인합니다.\n   *\n   * @param rootGroup 확인 할 rootGroup\n   * @returns 해당 rootGroup의 tree를 구성하는 node중 하나라도 selection에 있으면 true\n   */\n  @boundMethod\n  public hasTargetRootGroupMember(rootGroup: GraphicModel): boolean {\n    return (\n      this.graphicModelSelections.find(graphicModelSelection => {\n        return getRootGroup(graphicModelSelection.getModel()) === rootGroup;\n      }) !== undefined\n    );\n  }\n\n  /**\n   * selection을 구성하는 node 중 하나라도 group과 관련이 있는지 확인합니다.\n   * group인 node가 있거나, group tree를 구성하는 node인지 확인합니다.\n   *\n   * @returns selection에 group인 node가 있거나, group tree를 구성하는 node가 있으면 true\n   */\n  @boundMethod\n  public hasGroupMemberInSelectionContainer(): boolean {\n    return (\n      this.graphicModelSelections.find(graphicModelSelection => {\n        return isGroupMember(graphicModelSelection.getModel()) === true;\n      }) !== undefined\n    );\n  }\n\n  /**\n   * GraphicModelSelectionContainer를 복사하여 반환합니다\n   *\n   * @returns 복사한 graphicModelSelectionContainer\n   */\n  @boundMethod\n  public clone(): GraphicModelSelectionContainer {\n    const graphicModelSelectionContainer = new GraphicModelSelectionContainer();\n    this.graphicModelSelections.forEach(graphicModelSelection => {\n      graphicModelSelectionContainer.graphicModelSelections.push(graphicModelSelection.clone());\n    });\n    return graphicModelSelectionContainer;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport GraphicModelSelectionContainer from 'store/manager/selection/graphic/GraphicModelSelectionContainer';\nimport InternalSelectionContainer from 'store/manager/selection/InternalSelectionContainer';\n\n/**\n * 선택 된 개체의 목록을 저장하는 class 입니다\n * 개체의 종류별로 여러 개의 internalSelectionContainer를 가집니다.\n */\nexport default class SelectionContainer {\n  /**\n   * grahpic model의 선택을 담당합니다.\n   */\n  private graphicModelSelectionContainer: GraphicModelSelectionContainer;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.graphicModelSelectionContainer = new GraphicModelSelectionContainer();\n  }\n\n  /**\n   * graphicSelectionContainer를 반환합니다.\n   *\n   * @returns graphicSelectionContainer\n   */\n  @boundMethod\n  public getGraphicModelSelectionContainer(): GraphicModelSelectionContainer {\n    return this.graphicModelSelectionContainer;\n  }\n\n  /**\n   * 내부의 각 internalSelectionContainer 마다 callback 함수를 실행합니다.\n   *\n   * @param callback internalSelectionContainer 가 실행 할 함수\n   */\n  @boundMethod\n  public forEachContainer(\n    callback: (internalSelectionContainer: InternalSelectionContainer) => void\n  ): void {\n    callback(this.graphicModelSelectionContainer);\n  }\n\n  /**\n   * treeNode를 internalSelectionContainer에 추가 합니다\n   * 필요한 경우 서로 다른 internalSelectionContainer에 서로 다른 selection으로 등록 될 수 있습니다\n   *\n   * @param treeNode selection에 추가 할 node\n   */\n  @boundMethod\n  public appendTreeNode(treeNode: TreeNode): void {\n    this.forEachContainer(container => {\n      if (container.isRelatedModel(treeNode) === true) {\n        container.appendTreeNode(treeNode);\n      }\n    });\n  }\n\n  /**\n   * SelectionContainer를 복사하여 반환합니다.\n   *\n   * @returns 복사한 selection container\n   */\n  @boundMethod\n  public clone(): SelectionContainer {\n    const selectionContainer = new SelectionContainer();\n    selectionContainer.graphicModelSelectionContainer = this.graphicModelSelectionContainer.clone();\n    return selectionContainer;\n  }\n}\n","/**\n * 현재 app의 실행 상태에 따른 Command의 실행 mode를 구분하는 데 사용합니다.\n * readonly mode 등을 추가 할 수 있습니다.\n */\nexport enum CommandModeEnum {\n  INVALID = 0,\n  EDIT,\n}\n","/**\n * 현재의 event state 를 나타내는 enum 입니다.\n * event state 에 따라 반응하는 event handler 의 종류와 순서가 다르며,\n * 어떤 event handler를 적용해야 하는지는 EventMapper 에서 관리합니다.\n */\nexport enum EventStateEnum {\n  INVALID = 0,\n  IDLE,\n  GRAPHIC_INSERT,\n  GRAPHIC_MOVE,\n  GRAPHIC_RESIZE,\n  GRAPHIC_ROTATE,\n}\n","import { boundMethod } from 'autobind-decorator';\n\n/**\n * node의 id를 발급하는 container입니다.\n */\nclass IdGenerator {\n  /**\n   * IdContainer 내부에서 id 발급을 위해 관리하는 변수\n   */\n  private id;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.id = 0;\n  }\n\n  /**\n   * id를 발급합니다.\n   *\n   * @returns 새롭게 사용할 수 있는 id\n   */\n  @boundMethod\n  public generateId(): number {\n    // eslint-disable-next-line no-plusplus\n    return this.id++;\n  }\n}\n\nexport default new IdGenerator();\n","import { boundMethod } from 'autobind-decorator';\nimport SlideModel from 'model/node/slide/SlideModel';\nimport TreeNode from 'model/node/TreeNode';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport ProxyLayerInfoContainer from 'store/container/proxylayer/ProxyLayerInfoContainer';\nimport ShortcutContainer from 'store/container/shortcut/ShortcutContainer';\nimport UIContainer from 'store/container/ui/UIContainer';\nimport ViewModeContainer from 'store/container/viewmode/ViewModeContainer';\nimport CommandController from 'store/manager/command/CommandController';\nimport UndoStack from 'store/manager/command/UndoStack';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport { CommandModeEnum } from 'types/store/command/CommandModeEnum';\nimport { ICommandProps } from 'types/store/command/CommandTypes';\nimport { IEditableContextInitProp } from 'types/store/context/AppContextTypes';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport IdGenerator from 'util/id/IdGenerator';\n\n/**\n * App을 동작하면서 변경이 될 수 있는 정보들을 관리하는 context입니다.\n */\nexport default class EditableContext {\n  /**\n   * app을 구성하는 treeNode 중 root입니다.\n   * 생성자에서 임의로 생성합니다.\n   */\n  private treeNodeRoot: TreeNode;\n\n  /**\n   * 현재 event의 상태를 나타냅니다.\n   * event manager 에서 처리하는 event handler 구성이 달라집니다.\n   */\n  private eventState: EventStateEnum;\n\n  /**\n   * 현재 mouse의 event 상태를 나타냅니다.\n   * true 이면 현재 마우스 left button이 click 된 상태입니다.\n   * false이면 click이 해제 된 상태입니다.\n   */\n  private mouseLButtonPressed: boolean;\n\n  /**\n   * Command 를 보관하는 undo stack 입니다.\n   */\n  private undoStack: UndoStack;\n\n  /**\n   * Command를 어떻게 처리할 지 에 대한 Mode(EditMode, ReadMode 등)를 나타냅니다.\n   */\n  private commandMode: CommandModeEnum;\n\n  /**\n   * 현재 event를 처리하기 위하여 필요한 요소들을 나타냅니다.\n   * 휘발적이며 event 마다 초기화 됩니다.\n   */\n  private commandProps: Nullable<ICommandProps>;\n\n  /**\n   * 현재 event 에서 실행되어야 할 command 를 보관합니다.\n   * 휘발적이며 event 마다 초기화 됩니다.\n   */\n  private commandController: Nullable<CommandController>;\n\n  /**\n   * Model Type별 Selection을 보관합니다.\n   * selection 변경 시 NodeSelectionContainer 내부 selection 정보만 변경됩니다.\n   */\n  private selectionContainer: SelectionContainer;\n\n  /**\n   * UI 관련 정보를 보관합니다.\n   */\n  private readonly uiContainer: UIContainer;\n\n  private readonly proxyLayerInfoContainer: ProxyLayerInfoContainer;\n\n  private readonly viewModeContainer: ViewModeContainer;\n\n  /*\n   * 단축키 관련 정보를 보관합니다.\n   */\n  private readonly shortcutContainer: ShortcutContainer;\n\n  /**\n   * 현재 Selection을 바탕으로 업데이트 할 정보를 보관합니다.\n   */\n  // private readonly propContainer: PropContainer;\n\n  /**\n   * shape editing과 관련된 정보를 보관합니다.\n   */\n  private readonly graphicEditInfoContainer: GraphicEditInfoContainer;\n\n  /**\n   * 강제로 rerender를 발생시키기 위해 모아놓은 trigger 함수의 list입니다.\n   */\n  private rerenderTriggerList: Array<() => void>;\n\n  /**\n   * 생성자\n   *\n   * @param editableContextInitProp EditableContext를 초기화 하기 위한 정보\n   */\n  constructor(editableContextInitProp: IEditableContextInitProp) {\n    this.treeNodeRoot = new SlideModel(IdGenerator.generateId());\n    this.eventState = EventStateEnum.IDLE;\n    this.mouseLButtonPressed = false;\n    this.undoStack = new UndoStack();\n    this.commandMode = CommandModeEnum.EDIT;\n    this.commandProps = undefined;\n    this.commandController = undefined;\n    this.selectionContainer = this.createSelectionContainer();\n    this.uiContainer = new UIContainer();\n    this.proxyLayerInfoContainer = new ProxyLayerInfoContainer();\n    this.viewModeContainer = new ViewModeContainer();\n    this.shortcutContainer = new ShortcutContainer();\n    // this.propContainer = new PropContainer();\n    this.graphicEditInfoContainer = new GraphicEditInfoContainer();\n    this.rerenderTriggerList = [];\n  }\n\n  /**\n   * treeNode의 root를 반환합니다.\n   *\n   * @returns treeNodeRoot\n   */\n  @boundMethod\n  public getTreeNodeRoot(): TreeNode {\n    return this.treeNodeRoot;\n  }\n\n  /**\n   * 현재 eventState를 반환합니다.\n   *\n   * @returns eventState\n   */\n  @boundMethod\n  public getEventState(): EventStateEnum {\n    return this.eventState;\n  }\n\n  /**\n   * 새로운 eventState로 설정합니다.\n   *\n   * @param eventState 새롭게 설정 할 eventState\n   */\n  @boundMethod\n  public setEventState(eventState: EventStateEnum): void {\n    this.eventState = eventState;\n  }\n\n  /**\n   * undoStack을 반환합니다.\n   *\n   * @returns undoStack\n   */\n  @boundMethod\n  public getUndoStack(): UndoStack {\n    return this.undoStack;\n  }\n\n  /**\n   * mouse left button이 눌려있는 상태인지 반환합니다.\n   *\n   * @returns mouseLButtonPressed\n   */\n  @boundMethod\n  public isMouseLButtonPressed(): boolean {\n    return this.mouseLButtonPressed;\n  }\n\n  /**\n   * mouse left button이 눌려있는 상태인지 설정합니다.\n   *\n   * @param mouseLButtonPressed mouse left button이 눌려있는 상태\n   */\n  @boundMethod\n  public setMouseLButtonPressed(mouseLButtonPressed: boolean): void {\n    this.mouseLButtonPressed = mouseLButtonPressed;\n  }\n\n  /**\n   * commandMode를 반환합니다.\n   * CommandHandlerList를 commandMode 별로 다르게 구성 할 수 있습니다.\n   *\n   * @returns commandMode\n   */\n  @boundMethod\n  public getCommandMode(): CommandModeEnum {\n    return this.commandMode;\n  }\n\n  /**\n   * commandMode를 설정합니다.\n   * CommandHandlerList를 commandMode 별로 다르게 구성 할 수 있습니다.\n   *\n   * @param commandMode 새롭게 설정 할 commandModel\n   */\n  @boundMethod\n  public setCommandMode(commandMode: CommandModeEnum): void {\n    this.commandMode = commandMode;\n  }\n\n  /**\n   * commandProps를 반환합니다.\n   *\n   * @returns commandProps\n   */\n  @boundMethod\n  public getCommandProps(): Nullable<ICommandProps> {\n    return this.commandProps;\n  }\n\n  /**\n   * commandProps를 새롭게 설정합니다.\n   *\n   * @param commandProps 새로 설정할 commandProps\n   */\n  @boundMethod\n  public setCommandProps(commandProps: Nullable<ICommandProps>): void {\n    this.commandProps = commandProps;\n  }\n\n  /**\n   * commandController를 반환합니다.\n   *\n   * @returns commandController\n   */\n  @boundMethod\n  public getCommandController(): CommandController | undefined {\n    return this.commandController;\n  }\n\n  /**\n   * commandController를 설정합니다.\n   *\n   * @param commandController 새롭게 설정 할 commandController\n   */\n  @boundMethod\n  public setCommandController(commandController: CommandController | undefined): void {\n    this.commandController = commandController;\n  }\n\n  /**\n   * selectionContainer를 반환합니다.\n   *\n   * @returns selectionContainer\n   */\n  @boundMethod\n  public getSelectionContainer(): SelectionContainer {\n    return this.selectionContainer;\n  }\n\n  /**\n   * selectionContainer를 설정합니다.\n   *\n   * @param selectionContainer 새롭게 설정 할 selectionContainer\n   */\n  @boundMethod\n  public setSelectionContainer(selectionContainer: SelectionContainer): void {\n    this.selectionContainer = selectionContainer;\n  }\n\n  /**\n   * selectionContainer를 생성합니다.\n   *\n   * @returns 새롭게 생성 한 selectionContainer\n   */\n  @boundMethod\n  public createSelectionContainer(): SelectionContainer {\n    return new SelectionContainer();\n  }\n\n  /**\n   * UIContainer를 반환합니다.\n   *\n   * @returns UIContainer\n   */\n  @boundMethod\n  public getUIContainer(): UIContainer {\n    return this.uiContainer;\n  }\n\n  @boundMethod\n  public getProxyLayerInfoContainer(): ProxyLayerInfoContainer {\n    return this.proxyLayerInfoContainer;\n  }\n\n  @boundMethod\n  public getViewModeContainer(): ViewModeContainer {\n    return this.viewModeContainer;\n  }\n\n  @boundMethod\n  public getShortcutContainer(): ShortcutContainer {\n    return this.shortcutContainer;\n  }\n\n  // @boundMethod\n  // public getPropContainer(): PropContainer {\n  //     return this.propContainer;\n  // }\n\n  @boundMethod\n  public getGraphicEditInfoContainer(): GraphicEditInfoContainer {\n    return this.graphicEditInfoContainer;\n  }\n\n  /**\n   * component의 rerender를 발생시킬 수 있는 함수를 append 합니다\n   *\n   * @param rerenderTrigger rerender를 발생시키는 함수\n   */\n  @boundMethod\n  public appendRerenderTrigger(rerenderTrigger: () => void): void {\n    this.rerenderTriggerList.push(rerenderTrigger);\n  }\n\n  /**\n   * 모여있는 rerender trigger 함수를 모두 실행하고, 배열을 비웁니다.\n   */\n  @boundMethod\n  public flushRerenderTriggerList(): void {\n    this.rerenderTriggerList.forEach(rerenderTrigger => {\n      rerenderTrigger();\n    });\n    this.rerenderTriggerList = [];\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport { ICommandProps } from 'types/store/command/CommandTypes';\nimport { IReadOnlyContextInitProp } from 'types/store/context/AppContextTypes';\n\n/**\n * App의 실행 도중 변경되지 않는 정보를 담고 있는 context 입니다.\n */\nexport default class ReadOnlyContext {\n  /**\n   * AppStore의 handleCommandEvent를 호출하는 함수입니다.\n   * AppStore에 접근이 불가능한 경우 AppContext가 있으면 이 함수를 통하여 호출할 수 있습니다.\n   */\n  private readonly handleCommandEvent: (props: ICommandProps) => void;\n\n  /**\n   * 생성자\n   *\n   * @param readOnlyContextInitProp 초기화 prop\n   */\n  constructor(readOnlyContextInitProp: IReadOnlyContextInitProp) {\n    this.handleCommandEvent = readOnlyContextInitProp.handleCommandEventFunction;\n  }\n\n  /**\n   * AppStore의 handleCommandEvent를 호출합니다.\n   *\n   * @param props handleCommandEvent를 호출하기 위한 prop\n   */\n  @boundMethod\n  public callHandleCommandEvent(props: ICommandProps): void {\n    this.handleCommandEvent(props);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport EditableContext from 'store/context/EditableContext';\nimport ReadOnlyContext from 'store/context/ReadOnlyContext';\nimport { IAppContextInitProp } from 'types/store/context/AppContextTypes';\n\n/**\n * RootStore 에서 관리하는 context 구조입니다.\n */\nexport default class AppContext {\n  /**\n   * read only context 정보\n   */\n  private readOnlyContext: ReadOnlyContext;\n\n  /**\n   * editable context 정보\n   */\n  private editableContext: EditableContext;\n\n  /**\n   * 생성자\n   */\n  constructor(appContextInitProp: IAppContextInitProp) {\n    this.readOnlyContext = new ReadOnlyContext(appContextInitProp.readOnlyContextInitProp);\n    this.editableContext = new EditableContext(appContextInitProp.editableContextInitProp);\n  }\n\n  /**\n   * readOnlyContext를 반환합니다.\n   *\n   * @returns readOnlyContext\n   */\n  @boundMethod\n  public getReadOnlyContext(): ReadOnlyContext {\n    return this.readOnlyContext;\n  }\n\n  /**\n   * editableContext를 반환합니다.\n   *\n   * @returns editableContext\n   */\n  @boundMethod\n  public getEditableContext(): EditableContext {\n    return this.editableContext;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport SimpleCommand from 'store/manager/command/simplecommand/SimpleCommand';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\n\n/**\n * 하나의 작업 단위를 나타내는 class 입니다.\n * 여러 simple command 를 list 로 가지고 있으며 do/undo/redo 의 단위가 됩니다.\n * 실제 동작 시 CommandController가 interface 역할을 하게 됩니다.\n * Undo stack 이 이 class 의 life cycle 을 담당합니다.\n */\nexport default class CommandCompositor {\n  /**\n   * 실제 동작 정보를 담고있는 simpleCommand 들의 list 입니다.\n   */\n  private simpleCommandList: SimpleCommand[];\n\n  /**\n   * 현재 실행할 수 있는 simpleCommand의 index입니다.\n   * 실제 simpleCommand를 실행 할 때에는 simpleCommandList의 length와 비교를 하고 해야 합니다.\n   * simpleCommandList가 비어있을 때: 0\n   * simpleCommandList에 simpleCommand가 1개 있고 아무 수행을 하지 않았을 때: 0\n   * simpleCommandList에 simpleCommand가 3개 있고 1개만 수행하였을 때: 1\n   */\n  private executalbeSimpleCommandIndex: number;\n\n  /**\n   * simple command 들의 list 로, 후처리로 진행되어야 하는 simple command 들입니다.\n   * Do, undo, redo 시 commandList 의 작업이 마쳐진 뒤 postCommandList 의 작업을 수행합니다.\n   */\n  private postSimpleCommandList: SimpleCommand[];\n\n  /**\n   * Undo 가 가능한 command 인지를 나타냅니다.\n   * undoable === false 인 경우, undo stack 에 들어가지 않고 사라집니다.\n   * 기본 값은 true 입니다.\n   */\n  private undoable: boolean;\n\n  /**\n   * Undo 시의 EventState 정보입니다.\n   */\n  private oldEventState: EventStateEnum;\n\n  /**\n   * do, Redo 시의 EventState 정보입니다.\n   */\n  private newEventState: EventStateEnum;\n\n  /**\n   * Undo 시의 Selection 정보입니다.\n   */\n  private oldSelectionContainer: SelectionContainer;\n\n  /**\n   * do, Redo 시의 Selection 정보입니다.\n   */\n  private newSelectionContainer: SelectionContainer;\n\n  /**\n   * 생성자\n   *\n   * @param ctx 현재 app의 상태를 담고 있는 context입니다.\n   */\n  public constructor(ctx: AppContext) {\n    const editableContext = ctx.getEditableContext();\n\n    this.simpleCommandList = [];\n    this.executalbeSimpleCommandIndex = 0;\n    this.postSimpleCommandList = [];\n    this.undoable = true;\n    this.oldEventState = EventStateEnum.IDLE;\n    this.newEventState = EventStateEnum.IDLE;\n    this.oldSelectionContainer = editableContext.getSelectionContainer().clone();\n    this.newSelectionContainer = editableContext.getSelectionContainer().clone();\n  }\n\n  /**\n   * Undoable 속성을 결정합니다. 기본 값은 true 입니다.\n   *\n   * @param undoable Undo 가능 여부\n   */\n  @boundMethod\n  public setUndoable(undoable: boolean): void {\n    this.undoable = undoable;\n  }\n\n  /**\n   * Undo 가능한 command 인지 확인합니다.\n   * Command 수행 후 true 인 경우 undo stack 에 들어가고, false 인 경우 소멸됩니다.\n   *\n   * @returns Undoable 여부\n   */\n  @boundMethod\n  public isUndoable(): boolean {\n    return this.undoable;\n  }\n\n  /**\n   * command 수행 이전의 event state를 반환합니다.\n   *\n   * @returns command 수행 이전의 eventState\n   */\n  @boundMethod\n  public getOldEventState(): EventStateEnum {\n    return this.oldEventState;\n  }\n\n  /**\n   * command 수행 이전의 event state를 설정합니다.\n   *\n   * @param eventState command 수행 이전의 eventState\n   */\n  @boundMethod\n  public setOldEventState(eventState: EventStateEnum): void {\n    this.oldEventState = eventState;\n  }\n\n  /**\n   * command 수행 이후의 eventState를 반환합니다.\n   *\n   * @returns command 수행 이후의 eventState\n   */\n  @boundMethod\n  public getNewEventState(): EventStateEnum {\n    return this.newEventState;\n  }\n\n  /**\n   * command 수행 이후의 eventState를 설정합니다.\n   *\n   * @param eventState command 수행 이후의 eventState\n   */\n  @boundMethod\n  public setNewEventState(eventState: EventStateEnum): void {\n    this.newEventState = eventState;\n  }\n\n  /**\n   * Commands 수행 이전의 selection container를 반환 합니다.\n   *\n   * @returns Commands 수행 이전의 selection container\n   */\n  @boundMethod\n  public getOldSelectionContainer(): SelectionContainer {\n    return this.oldSelectionContainer;\n  }\n\n  /**\n   * Commands 수행 이전의 selection container를 설정 합니다.\n   *\n   * @param selectionContainer Commands 수행 이전의 selection container\n   */\n  public setOldSelectionContainer(selectionContainer: SelectionContainer): void {\n    this.oldSelectionContainer = selectionContainer;\n  }\n\n  /**\n   * Commands 수행 이후의 selection container를 반환 합니다.\n   *\n   * @returns Commands 수행 이후의 selection container\n   */\n  @boundMethod\n  public getNewSelectionContainer(): SelectionContainer {\n    return this.newSelectionContainer;\n  }\n\n  /**\n   * Commands 수행 이후의 selection container를 설정 합니다.\n   *\n   * @param selectionContainer Commands 수행 이후의 selection container\n   */\n  public setNewSelectionContainer(selectionContainer: SelectionContainer): void {\n    this.newSelectionContainer = selectionContainer;\n  }\n\n  /**\n   * Simple command 가 있는지 확인합니다.\n   *\n   * @returns SimpleCommand가 있는지의 여부(하나도 없으면 true)\n   */\n  @boundMethod\n  public isEmpty(): boolean {\n    return this.simpleCommandList.length === 0 && this.postSimpleCommandList.length === 0;\n  }\n\n  /**\n   * Simple command 를 추가합니다.\n   * 추가한 순서대로 do/redo 동작이 수행되고, 역순으로 undo 동작이 수행됩니다.\n   *\n   * @param simpleCommand Command 에 추가할 simple command\n   */\n  @boundMethod\n  public appendSimpleCommand(simpleCommand: SimpleCommand): void {\n    this.simpleCommandList.push(simpleCommand);\n  }\n\n  /**\n   * 후처리 될 simple command 를 추가합니다.\n   * 추가한 순서대로 simple command 가 동작됩니다.\n   *\n   * @param simpleCommand Command 에 추가할 후처리 simple command\n   */\n  @boundMethod\n  public appendPostSimpleCommand(simpleCommand: SimpleCommand): void {\n    this.postSimpleCommandList.push(simpleCommand);\n  }\n\n  /**\n   * 현재 수행할 수 있는 simple command를 실행(apply)합니다.\n   */\n  @boundMethod\n  public applySimpleCommand(): void {\n    for (\n      let index = this.executalbeSimpleCommandIndex;\n      index < this.simpleCommandList.length;\n      index += 1\n    ) {\n      this.simpleCommandList[index].apply();\n    }\n\n    this.executalbeSimpleCommandIndex = this.simpleCommandList.length;\n  }\n\n  /**\n   * Post Command 를 수행합니다.\n   */\n  @boundMethod\n  public applyPostSimpleCommand(): void {\n    this.postSimpleCommandList.forEach(simpleCommand => simpleCommand.apply());\n  }\n\n  /**\n   * Command 의 undo 를 수행합니다.\n   */\n  @boundMethod\n  public unapply(): void {\n    this.simpleCommandList.reverse().forEach(command => {\n      command.unapply();\n    });\n    this.postSimpleCommandList.forEach(simpleCommand => simpleCommand.unapply());\n  }\n\n  /**\n   * Command 의 redo 를 수행합니다.\n   */\n  @boundMethod\n  public reapply(): void {\n    this.simpleCommandList.reverse().forEach(command => {\n      command.reapply();\n    });\n    this.postSimpleCommandList.forEach(simpleCommand => simpleCommand.reapply());\n  }\n\n  /**\n   * 이전 handler command까지 실행되었으나 작업을 취소하는 상황에서 호출합니다.\n   * 현재까지 샐행 했던 index 부터 역순으로 0번 index 까지 수행합니다.\n   */\n  @boundMethod\n  public fallback(): void {\n    for (let index = this.executalbeSimpleCommandIndex - 1; index >= 0; index -= 1) {\n      this.simpleCommandList.at(index)?.unapply();\n    }\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport CommandCompositor from 'store/manager/command/CommandCompositor';\nimport SimpleCommand from 'store/manager/command/simplecommand/SimpleCommand';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\n\n/**\n * CommandCompositor 의 interface를 조작하는 class 입니다.\n */\nexport default class CommandController {\n  /**\n   * 실제 simpleCommand를 관리하는 class 입니다.\n   */\n  private commandCompositor: CommandCompositor;\n\n  /**\n   * 생성자\n   *\n   * @param commandCompositor 실제 simple command list를 관리하는 Command Compositor 클래스입니다.\n   */\n  constructor(commandCompositor: CommandCompositor) {\n    this.commandCompositor = commandCompositor;\n  }\n\n  /**\n   * commandCompositor의 Undoable 속성을 결정합니다. 기본 값은 true 입니다.\n   *\n   * @param undoable Undo 가능 여부\n   */\n  @boundMethod\n  public setUndoable(undoable: boolean): void {\n    this.commandCompositor.setUndoable(undoable);\n  }\n\n  /**\n   * commandCompositor가 Undo 가능한지 반환합니다.\n   * Command 수행 후 true 인 경우 undo stack 에 들어가고, false 인 경우 소멸됩니다.\n   *\n   * @returns Undoable 여부\n   */\n  @boundMethod\n  public isUndoable(): boolean {\n    return this.commandCompositor.isUndoable();\n  }\n\n  /**\n   * command 수행 이전의 event state를 반환합니다.\n   *\n   * @returns command 수행 이전의 eventState\n   */\n  @boundMethod\n  public getOldEventState(): EventStateEnum {\n    return this.commandCompositor.getOldEventState();\n  }\n\n  /**\n   * command 수행 이전의 event state를 설정합니다.\n   *\n   * @param eventState command 수행 이전의 eventState\n   */\n  @boundMethod\n  public setOldEventState(eventState: EventStateEnum): void {\n    this.commandCompositor.setOldEventState(eventState);\n  }\n\n  /**\n   * command 수행 이후의 eventState를 반환합니다.\n   *\n   * @returns command 수행 이후의 eventState\n   */\n  @boundMethod\n  public getNewEventState(): EventStateEnum {\n    return this.commandCompositor.getNewEventState();\n  }\n\n  /**\n   * command 수행 이후의 eventState를 설정합니다.\n   *\n   * @param eventState command 수행 이후의 eventState\n   */\n  @boundMethod\n  public setNewEventState(eventState: EventStateEnum): void {\n    this.commandCompositor.setNewEventState(eventState);\n  }\n\n  /**\n   * Commands 수행 이전의 selection container를 반환 합니다.\n   *\n   * @returns Commands 수행 이전의 selection container\n   */\n  @boundMethod\n  public getOldSelectionContainer(): SelectionContainer {\n    return this.commandCompositor.getOldSelectionContainer();\n  }\n\n  /**\n   * Commands 수행 이전의 selection container를 설정 합니다.\n   *\n   * @param selectionContainer Commands 수행 이전의 selection container\n   */\n  @boundMethod\n  public setOldSelectionContainer(selectioncontainer: SelectionContainer): void {\n    this.commandCompositor.setOldSelectionContainer(selectioncontainer);\n  }\n\n  /**\n   * Commands 수행 이후의 selection container를 반환 합니다.\n   *\n   * @returns Commands 수행 이후의 selection container\n   */\n  @boundMethod\n  public getNewSelectionContainer(): SelectionContainer {\n    return this.commandCompositor.getNewSelectionContainer();\n  }\n\n  /**\n   * Commands 수행 이후의 selection container를 설정 합니다.\n   *\n   * @param selectionContainer Commands 수행 이후의 selection container\n   */\n  @boundMethod\n  public setNewSelectionContainer(selectioncontainer: SelectionContainer): void {\n    this.commandCompositor.setNewSelectionContainer(selectioncontainer);\n  }\n\n  /**\n   * Simple command 가 있는지 확인합니다.\n   *\n   * @returns SimpleCommand가 있는지의 여부(하나도 없으면 true)\n   */\n  @boundMethod\n  public isEmpty(): boolean {\n    return this.commandCompositor.isEmpty();\n  }\n\n  /**\n   * Simple command 를 추가합니다.\n   * 추가한 순서대로 do/redo 동작이 수행되고, 역순으로 undo 동작이 수행됩니다.\n   *\n   * @param simpleCommand Command 에 추가할 simple command\n   */\n  @boundMethod\n  public appendSimpleCommand(simpleCommand: SimpleCommand): void {\n    this.commandCompositor.appendSimpleCommand(simpleCommand);\n  }\n\n  /**\n   * 후처리 될 simple command 를 추가합니다.\n   * 추가한 순서대로 simple command 가 동작됩니다.\n   *\n   * @param simpleCommand Command 에 추가할 후처리 simple command\n   */\n  @boundMethod\n  public appendPostSimpleCommand(simpleCommand: SimpleCommand): void {\n    this.commandCompositor.appendPostSimpleCommand(simpleCommand);\n  }\n\n  /**\n   * CommandCompositor 의 구성이 완료되기 전 Command내부의 SimpleCommand를 실행합니다.\n   */\n  @boundMethod\n  public preExecuteCommand(): void {\n    this.commandCompositor.applySimpleCommand();\n  }\n\n  /**\n   * CommandCompositor 를 실행 합니다.\n   */\n  @boundMethod\n  public executeCommand(): void {\n    this.commandCompositor.applySimpleCommand();\n  }\n\n  /**\n   * post command 를 실행 합니다.\n   */\n  @boundMethod\n  public executePostCommand(): void {\n    this.commandCompositor.applyPostSimpleCommand();\n  }\n\n  /**\n   * command 수행의 마무리 작업입니다.\n   * AppContext의 undo stack에 반영하고,\n   * commandProps 의 eventState, SelectionContainer 정보를 commandCompositor에 설정합니다.\n   *\n   * @param ctx app의 현재 상태가 담겨있는 AppContext\n   */\n  @boundMethod\n  public finishApplyProcess(ctx: AppContext): void {\n    if (this.commandCompositor.isUndoable() === true && this.isEmpty() === false) {\n      const editableContext = ctx.getEditableContext();\n      editableContext.getUndoStack().push(this.commandCompositor);\n      const commandProps = editableContext.getCommandProps();\n      if (commandProps !== undefined) {\n        if (commandProps.newEventState !== undefined) {\n          this.commandCompositor.setNewEventState(commandProps.newEventState);\n        }\n        if (commandProps.newSelectionContainer !== undefined) {\n          this.commandCompositor.setNewSelectionContainer(commandProps.newSelectionContainer);\n        }\n      } else {\n        throw Error;\n      }\n    }\n  }\n\n  /**\n   * Context 에 있는 undo stack을 이용하여 undo 를 진행합니다.\n   *\n   * @param ctx app의 현재 상태가 담겨있는 AppContext\n   * @returns undo가 수행되었는지의 여부\n   */\n  @boundMethod\n  public unExecuteCommand(ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n    const undoStack = editableContext.getUndoStack();\n\n    if (undoStack.canUndo() === false) {\n      return false;\n    }\n    const commandCompositor = undoStack.prev();\n    if (commandCompositor === undefined) {\n      return false;\n    }\n\n    this.commandCompositor = commandCompositor;\n    this.commandCompositor.unapply();\n\n    const commandProps = editableContext.getCommandProps();\n    if (commandProps !== undefined) {\n      editableContext.setCommandProps({\n        ...commandProps,\n        newEventState: this.commandCompositor.getOldEventState(),\n        newSelectionContainer: this.commandCompositor.getOldSelectionContainer(),\n      });\n    } else {\n      throw Error;\n    }\n\n    return true;\n  }\n\n  /**\n   * Context 에 있는 undo stack을 이용하여 redo 를 진행합니다.\n   *\n   * @param ctx app의 현재 상태가 담겨있는 AppContext\n   * @returns redo가 수행되었는지의 여부\n   */\n  @boundMethod\n  public reExecuteCommand(ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n    const undoStack = editableContext.getUndoStack();\n\n    if (undoStack.canRedo() === false) {\n      return false;\n    }\n    const commandCompositor = undoStack.next();\n    if (!commandCompositor) {\n      return false;\n    }\n\n    this.commandCompositor = commandCompositor;\n    this.commandCompositor.reapply();\n\n    const commandProps = editableContext.getCommandProps();\n    if (commandProps !== undefined) {\n      editableContext.setCommandProps({\n        ...commandProps,\n        newEventState: this.commandCompositor.getNewEventState(),\n        newSelectionContainer: this.commandCompositor.getNewSelectionContainer(),\n      });\n    } else {\n      throw Error;\n    }\n    return true;\n  }\n\n  /**\n   * command 수행이 도중에 불가능하다고 판단 될 경우 기존 실행 된 simple command를 되돌립니다.\n   */\n  @boundMethod\n  public fallback(): void {\n    this.commandCompositor.fallback();\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport CommandHandler from 'store/manager/command/commandhandler/CommandHandler';\nimport { identify, UniqueKey } from 'util/id/Identifiable';\n\n/**\n * CommandHandler의 instance를 관리하는 map type 입니다.\n */\nexport type CommandHandlerMapType = Map<UniqueKey, CommandHandler>;\n\n/**\n * CommandHandler 를 생성하는 factory 입니다.\n */\nexport default class CommandHandlerFactory {\n  /**\n   * CommandHandler의 instance를 관리하는 map 입니다.\n   */\n  private readonly commandHandlerMap: CommandHandlerMapType;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.commandHandlerMap = new Map();\n  }\n\n  /**\n   * 원하는 종류의 CommandHandler를 반환합니다.\n   *\n   * @param commandHandlerEnum 요청하는 CommandHandler의 type\n   * @returns 요청한 CommandHandler의 instance\n   */\n  @boundMethod\n  public getTargetCommandHandler(\n    CommandHandlerConstructor: new () => CommandHandler\n  ): CommandHandler {\n    const uniqueKey = identify(CommandHandlerConstructor);\n    let commandHandler = this.commandHandlerMap.get(uniqueKey);\n    if (commandHandler === undefined) {\n      commandHandler = new CommandHandlerConstructor();\n      this.commandHandlerMap.set(uniqueKey, commandHandler);\n    }\n\n    return commandHandler;\n  }\n}\n","import AppContext from 'store/context/AppContext';\nimport { ICommandHandlerResponse, ICommandProps } from 'types/store/command/CommandTypes';\nimport Identifiable from 'util/id/Identifiable';\n\n/**\n * Command 정보를 를 받아 실제 동작을 처리하는 class 입니다.\n */\nabstract class CommandHandler {\n  /**\n   * CommandHandler내부에서 실제 동작을 수행하는 부분입니다.\n   *\n   * @param props command 를 수행하는 데 필요한 정보를 담고 있는 CommandProps\n   * @param ctx 현재 app의 상태를 담고있는 AppContext\n   * @returns command 수행 결과에 따른 CommandHandlerResponse\n   */\n  public abstract processCommand(\n    ctx: AppContext,\n    commandProps: ICommandProps\n  ): ICommandHandlerResponse;\n}\n\nexport default abstract class extends Identifiable(CommandHandler) {}\n","import { boundMethod } from 'autobind-decorator';\n\n// GraphicModel의 Coordinate 관련 정보를 가지는 class 입니다.\nexport default class CoordinateInfo {\n  /**\n   * x 좌표\n   */\n  private x: number;\n\n  /**\n   * y 좌표\n   */\n  private y: number;\n\n  /**\n   * 너비\n   */\n  private width: number;\n\n  /**\n   * 높이\n   */\n  private height: number;\n\n  /**\n   * 회전값\n   */\n  private rotation: number;\n\n  /**\n   * 도형의 회전이 0일 때를 기준으로, 가로 방향으로 filp 되어있는 지의 여부\n   */\n  private flipH: boolean;\n\n  /**\n   * 도형의 회전이 0일 때를 기준으로, 세로 방향으로 filp 되어있는 지의 여부\n   */\n  private flipV: boolean;\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 x 좌표\n   */\n  private groupX: Nullable<number>;\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 y 좌표\n   */\n  private groupY: Nullable<number>;\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 너비\n   */\n  private groupWidth: Nullable<number>;\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 높이\n   */\n  private groupHeight: Nullable<number>;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.rotation = 0;\n    this.flipH = false;\n    this.flipV = false;\n    this.groupX = 0;\n    this.groupY = 0;\n    this.groupWidth = 0;\n    this.groupHeight = 0;\n  }\n\n  /**\n   * x 좌표를 설정합니다.\n   *\n   * @param x 도형의 x 좌표\n   */\n  @boundMethod\n  public setX(x: number): void {\n    this.x = x;\n  }\n\n  /**\n   * x 좌표를 반환합니다.\n   *\n   * @returns 도형의 x 좌표\n   */\n  @boundMethod\n  public getX(): number {\n    return this.x;\n  }\n\n  /**\n   * y 좌표를 설정합니다.\n   *\n   * @param y 도형의 y 좌표\n   */\n  @boundMethod\n  public setY(y: number): void {\n    this.y = y;\n  }\n\n  /**\n   * y 좌표를 반환합니다.\n   *\n   * @returns 도형의 y 좌표\n   */\n  @boundMethod\n  public getY(): number {\n    return this.y;\n  }\n\n  /**\n   * 너비를 설정합니다.\n   *\n   * @param width 도형의 너비\n   */\n  @boundMethod\n  public setWidth(width: number): void {\n    this.width = width;\n  }\n\n  /**\n   * 너비를 반환합니다.\n   *\n   * @returns 도형의 너비\n   */\n  @boundMethod\n  public getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * 높이를 설정합니다.\n   *\n   * @param height 도형의 높이\n   */\n  @boundMethod\n  public setHeight(height: number): void {\n    this.height = height;\n  }\n\n  /**\n   * 높이를 반환합니다.\n   *\n   * @returns 도형의 높이\n   */\n  @boundMethod\n  public getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * 도형의 회전값을 설정합니다.\n   *\n   * @param rotation 도형의 회전값\n   */\n  @boundMethod\n  public setRotation(rotation: number): void {\n    this.rotation = rotation;\n  }\n\n  /**\n   * 도형의 회전값을 반환합니다.\n   *\n   * @returns 도형의 회전값\n   */\n  @boundMethod\n  public getRotation(): number {\n    return this.rotation;\n  }\n\n  /**\n   * 도형의 가로방향 반전 상태를 설정합니다.\n   *\n   * @param flipH 도형의 가로방향 반전 상태\n   */\n  @boundMethod\n  public setFlipH(flipH: boolean): void {\n    this.flipH = flipH;\n  }\n\n  /**\n   * 도형의 가로방향 반전 상태를 반환합니다.\n   *\n   * @returns 도형의 가로방향 반전 상태\n   */\n  @boundMethod\n  public getFlipH(): boolean {\n    return this.flipH;\n  }\n\n  /**\n   * 도형의 세로방향 반전 상태를 설정합니다.\n   *\n   * @param flipV 도형의 세로방향 반전 상태\n   */\n  @boundMethod\n  public setFlipV(flipV: boolean): void {\n    this.flipV = flipV;\n  }\n\n  /**\n   * 도형의 세로방향 반전 상태를 반환합니다.\n   *\n   * @returns 도형의 세로방향 반전 상태\n   */\n  @boundMethod\n  public getFlipV(): boolean {\n    return this.flipV;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 x 좌표를 설정합니다.\n   *\n   * @param groupX 도형 묶음을 처음 group으로 하였을 때 group의 x 좌표\n   */\n  @boundMethod\n  public setGroupX(groupX: Nullable<number>): void {\n    this.groupX = groupX;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 x 좌표를 반환합니다.\n   *\n   * @returns 도형 묶음을 처음 group으로 하였을 때 group의 x 좌표\n   */\n  @boundMethod\n  public getGroupX(): Nullable<number> {\n    return this.groupX;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 y 좌표를 설정합니다.\n   *\n   * @param groupY 도형 묶음을 처음 group으로 하였을 때 group의 y 좌표\n   */\n  @boundMethod\n  public setGroupY(groupY: Nullable<number>): void {\n    this.groupY = groupY;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 y 좌표를 반환합니다.\n   *\n   * @returns 도형 묶음을 처음 group으로 하였을 때 group의 y 좌표\n   */\n  @boundMethod\n  public getGroupY(): Nullable<number> {\n    return this.groupY;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 너비를 설정합니다.\n   *\n   * @param groupWidth 도형 묶음을 처음 group으로 하였을 때 group의 너비\n   */\n  @boundMethod\n  public setGroupWidth(groupWidth: Nullable<number>): void {\n    this.groupWidth = groupWidth;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 너비를 반환합니다.\n   *\n   * @returns 도형 묶음을 처음 group으로 하였을 때 group의 너비\n   */\n  @boundMethod\n  public getGroupWidth(): Nullable<number> {\n    return this.groupWidth;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 높이를 설정합니다.\n   *\n   * @param groupHeight 도형 묶음을 처음 group으로 하였을 때 group의 높이\n   */\n  @boundMethod\n  public setGroupHeight(groupHeight: Nullable<number>): void {\n    this.groupHeight = groupHeight;\n  }\n\n  /**\n   * group에서만 사용합니다.\n   * 도형 묶음을 처음 group으로 하였을 때 group의 높이를 반환합니다.\n   *\n   * @returns 도형 묶음을 처음 group으로 하였을 때 group의 높이\n   */\n  @boundMethod\n  public getGroupHeight(): Nullable<number> {\n    return this.groupHeight;\n  }\n\n  /**\n   * coordinateinfo를 복사하여 반환합니다.\n   *\n   * @returns 새롭게 복사 된 coordinate info\n   */\n  @boundMethod\n  public clone(): CoordinateInfo {\n    const newCoordinateInfo = new CoordinateInfo();\n\n    newCoordinateInfo.setX(this.x);\n    newCoordinateInfo.setY(this.y);\n    newCoordinateInfo.setWidth(this.width);\n    newCoordinateInfo.setHeight(this.height);\n    newCoordinateInfo.setRotation(this.rotation);\n    newCoordinateInfo.setFlipH(this.flipH);\n    newCoordinateInfo.setFlipV(this.flipV);\n    newCoordinateInfo.setGroupX(this.groupX);\n    newCoordinateInfo.setGroupY(this.groupY);\n    newCoordinateInfo.setGroupWidth(this.groupWidth);\n    newCoordinateInfo.setGroupHeight(this.groupHeight);\n\n    return newCoordinateInfo;\n  }\n}\n","import * as math from 'mathjs';\nimport { ILine, IPoint, IRectWithCoord } from 'types/common/geometry/GeometryTypes';\n\nexport function isNearlyEqual(a: number, b: number): boolean {\n  const eps = 0.00001;\n  return Math.abs(a - b) < eps;\n}\n\nexport function isTwoPointsNearlyEqual(point1: IPoint, point2: IPoint): boolean {\n  return isNearlyEqual(point1.x, point2.x) && isNearlyEqual(point1.y, point2.y);\n}\n\nexport function isTwoLineLengthNearlyEqual(line1: ILine, line2: ILine): boolean {\n  return isNearlyEqual(\n    getSquaredDistance(line1.from, line1.to),\n    getSquaredDistance(line2.from, line2.to)\n  );\n}\n\nexport function isTwoVectorsInSameDirection(vec1: ILine, vec2: ILine): boolean {\n  const positionVector1: IPoint = { x: vec1.from.x - vec1.to.x, y: vec1.from.y - vec1.to.y };\n  const positionVector2: IPoint = { x: vec2.from.x - vec2.to.x, y: vec2.from.y - vec2.to.y };\n\n  const angle = getAngleBetweenTwoPointsAndOrigin(positionVector1, positionVector2);\n\n  return isNearlyEqual(angle, 0) || isNearlyEqual(angle, 360);\n}\n\nexport function getDistance(from: IPoint, to: IPoint): number {\n  return getSquaredDistance(from, to) ** 0.5;\n}\n\nexport function getSquaredDistance(from: IPoint, to: IPoint): number {\n  return (from.x - to.x) ** 2 + (from.y - to.y) ** 2;\n}\n\nexport function degreeToRadian(degree: number): number {\n  return radianMod2Pi((degree / 180) * math.pi);\n}\n\nexport function radianToDegree(radian: number): number {\n  return degreeMod360((radian / math.pi) * 180);\n}\n\nexport function degreeMod360(degree: number): number {\n  return math.mod(degree, 360);\n}\n\nexport function radianMod2Pi(radian: number): number {\n  return math.mod(radian, math.pi * 2);\n}\n\nexport function getAngleBetweenThreePoints(\n  angleStart: IPoint,\n  angleEnd: IPoint,\n  pivot: IPoint\n): number {\n  return getAngleBetweenTwoPointsAndOrigin(\n    { x: angleStart.x - pivot.x, y: angleStart.y - pivot.y },\n    { x: angleEnd.x - pivot.x, y: angleEnd.y - pivot.y }\n  );\n}\n\nexport function getAngleBetweenTwoPointsAndOrigin(angleStart: IPoint, angleEnd: IPoint): number {\n  return radianToDegree(\n    math.atan2(angleEnd.y, angleEnd.x) - math.atan2(angleStart.y, angleStart.x)\n  );\n}\n\nexport function getFlippedRotation(flipH: boolean, flipV: boolean, rotation: number): number {\n  let resultRotaion = rotation;\n  if (flipH !== flipV) {\n    resultRotaion = degreeMod360(resultRotaion);\n\n    if (resultRotaion >= 0 && resultRotaion < 90) {\n      const delta = 90 - resultRotaion;\n      resultRotaion += 2 * delta;\n    } else if (resultRotaion >= 90 && resultRotaion <= 180) {\n      const delta = resultRotaion - 90;\n      resultRotaion -= 2 * delta;\n    } else if (resultRotaion > 180 && resultRotaion <= 270) {\n      const delta = 270 - resultRotaion;\n      resultRotaion += 2 * delta;\n    } else if (resultRotaion > 270 && resultRotaion <= 360) {\n      const delta = resultRotaion - 270;\n      resultRotaion -= 2 * delta;\n    }\n    resultRotaion += 180;\n  }\n\n  return degreeMod360(resultRotaion);\n}\n\nexport function rotatePointAroundOrigin(point: IPoint, rotation360: number): IPoint {\n  const radian = degreeToRadian(rotation360);\n  return {\n    x: math.cos(radian) * point.x - math.sin(radian) * point.y,\n    y: math.sin(radian) * point.x + math.cos(radian) * point.y,\n  };\n}\n\nexport function rotatePointAroundPivot(point: IPoint, pivot: IPoint, rotation360: number): IPoint {\n  const localizedPoint = { x: point.x - pivot.x, y: point.y - pivot.y };\n  const rotatedPoint = rotatePointAroundOrigin(localizedPoint, rotation360);\n\n  return { x: rotatedPoint.x + pivot.x, y: rotatedPoint.y + pivot.y };\n}\n\nexport function flipPointAroundPivot(\n  point: IPoint,\n  pivot: IPoint,\n  flipH: boolean,\n  flipV: boolean\n): IPoint {\n  return { x: flipH ? 2 * pivot.x - point.x : point.x, y: flipV ? 2 * pivot.y - point.y : pivot.y };\n}\n\nexport function isWHSwitched(rotation: number): boolean {\n  const rotation360 = degreeMod360(rotation);\n  return (rotation360 >= 45 && rotation360 < 135) || (rotation360 >= 225 && rotation360 < 315);\n}\n\nexport function getRotatedBound(rect: IRectWithCoord, rotation360: number): IRectWithCoord {\n  const { x, y, width, height } = rect;\n  const pivot: IPoint = { x: x + width / 2, y: y + height / 2 };\n  const leftTop: IPoint = { x, y };\n  const leftBottom: IPoint = { x, y: y + height };\n  const rotatedLeftTop = rotatePointAroundPivot(leftTop, pivot, rotation360);\n  const rotatedLeftBottom = rotatePointAroundPivot(leftBottom, pivot, rotation360);\n  const rotatedRightTop: IPoint = {\n    x: pivot.x * 2 - rotatedLeftBottom.x,\n    y: pivot.y * 2 - rotatedLeftBottom.y,\n  };\n  const rotatedRightBottom: IPoint = {\n    x: pivot.x * 2 - rotatedLeftTop.x,\n    y: pivot.y * 2 - rotatedLeftTop.y,\n  };\n\n  const boundX = math.min(\n    rotatedLeftTop.x,\n    rotatedRightTop.x,\n    rotatedLeftBottom.x,\n    rotatedRightBottom.x\n  );\n  const boundY = math.min(\n    rotatedLeftTop.y,\n    rotatedRightTop.y,\n    rotatedLeftBottom.y,\n    rotatedRightBottom.y\n  );\n  const boundWidth =\n    math.max(rotatedLeftTop.x, rotatedRightTop.x, rotatedLeftBottom.x, rotatedRightBottom.x) -\n    boundX;\n  const boundHeight =\n    math.max(rotatedLeftTop.y, rotatedRightTop.y, rotatedLeftBottom.y, rotatedRightBottom.y) -\n    boundY;\n\n  return { x: boundX, y: boundY, width: boundWidth, height: boundHeight };\n}\n","import { boundMethod } from 'autobind-decorator';\nimport FillBase from 'model/node/graphic/info/fill/FillBase';\nimport { FillTypeEnum } from 'types/model/node/graphic/FillTypeEnum';\n\n/**\n * 도형의 채우기 정보를 관리하는 class 입니다.\n * fillBase는 변경될 수 있습니다.\n */\nexport default class FillInfo {\n  /**\n   * Fill 종류에 따라 각각의 정보를 담아둘 수 있는 객체\n   */\n  private fill: Nullable<FillBase>;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.fill = undefined;\n  }\n\n  /**\n   * fill을 설정합니다.\n   *\n   * @param fill 새롭게 설정 할 fill\n   */\n  @boundMethod\n  public setFill(fill: Nullable<FillBase>): void {\n    this.fill = fill;\n  }\n\n  /**\n   * FillInfo가 관리하는 fill을 반환합니다.\n   *\n   * @returns FillInfo에서 관리하는 fill\n   */\n  @boundMethod\n  public getFill(): Nullable<FillBase> {\n    return this.fill;\n  }\n\n  /**\n   * 내부에서 관리하는 fill의 type을 반환합니다.\n   *\n   * @returns fill의 type\n   */\n  public getFillType(): Nullable<FillTypeEnum> {\n    return this.fill?.getType();\n  }\n\n  /**\n   * 이 class 를 복사하여 반환합니다.\n   * @returns 복사한 FillInfo\n   */\n  public clone(): FillInfo {\n    const newFillInfo = new FillInfo();\n    newFillInfo.setFill(this.fill?.clone());\n    return newFillInfo;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport { cloneDeep } from 'lodash';\nimport PathBuilder from 'model/node/graphic/info/path/PathBuilder';\nimport {\n  ICustomGeometry,\n  IGeometryParam,\n  IPath,\n  IPresetGeometry,\n} from 'types/model/node/graphic/GraphicTypes';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\n\n/**\n * path의 정보를 가지고 있는 class 입니다.\n */\nexport default class PathInfo {\n  /**\n   * shapetype이 preset 종류인 경우에 대한 정보를 담고 있습니다.\n   */\n  private prstGeom: Nullable<IPresetGeometry>;\n\n  /**\n   * shapetype이 custom인 경우에 대한 정보를 담고 있습니다.\n   */\n  private custGeom: Nullable<ICustomGeometry>;\n\n  /**\n   * 실제로 path를 계산해서 반환하는 class 입니다.\n   */\n  private pathBuilder: Nullable<PathBuilder>;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.prstGeom = undefined;\n    this.custGeom = undefined;\n    this.pathBuilder = undefined;\n  }\n\n  /**\n   * preset 도형 정보를 설정합니다.\n   *\n   * @param prstGeom preset 도형 정보\n   */\n  @boundMethod\n  public setPrstGeom(prstGeom: Nullable<IPresetGeometry>): void {\n    this.prstGeom = prstGeom;\n  }\n\n  /**\n   * preset 도형 정보를 반환합니다.\n   *\n   * @returns preset 도형 정보\n   */\n  @boundMethod\n  public getPrstGeom(): Nullable<IPresetGeometry> {\n    return this.prstGeom;\n  }\n\n  /**\n   * custom 도형 정보를 설정합니다.\n   *\n   * @param custGeom custom 도형 정보\n   */\n  @boundMethod\n  public setCustGeom(custGeom: Nullable<ICustomGeometry>): void {\n    this.custGeom = custGeom;\n  }\n\n  /**\n   * custom 도형 정보를 반환합니다.\n   *\n   * @returns custom 도형 정보\n   */\n  @boundMethod\n  public getCustGeom(): Nullable<ICustomGeometry> {\n    return this.custGeom;\n  }\n\n  /**\n   * 도형의 path를 생성하는 PathBuilder를 설정합니다.\n   * 도형 type이 변경되었을 경우 사용합니다.\n   *\n   * @param pathBuilder 도형의 path를 생성하는 PathBuilder\n   */\n  @boundMethod\n  public setPathBuilder(pathBuilder: Nullable<PathBuilder>): void {\n    this.pathBuilder = pathBuilder;\n  }\n\n  /**\n   * 도형의 path를 생성하는 PathBuilder를 반환합니다.\n   *\n   * @returns 도형의 path를 생성하는 PathBuilder\n   */\n  @boundMethod\n  public getPathBuilder(): Nullable<PathBuilder> {\n    return this.pathBuilder;\n  }\n\n  /**\n   * 도형의 type을 반환합니다.\n   *\n   * @returns 도형의 type\n   */\n  @boundMethod\n  public getShapeType(): ShapeTypeEnum {\n    return this.prstGeom?.shapeType || ShapeTypeEnum.CUSTOM;\n  }\n\n  /**\n   * 도형의 path를 생성하여 반환합니다.\n   *\n   * @param param 도형의 크기, 위치 정보를 담고있는 객체\n   * @returns 새롭게 생성한 도형의 path 정보\n   */\n  @boundMethod\n  public getPath(param: IGeometryParam): IPath[] {\n    return this.pathBuilder?.build(param) || [];\n  }\n\n  /**\n   * pathinfo를 복사하여 반환합니다.\n   *\n   * @returns 새로 복사한 path info\n   */\n  @boundMethod\n  public clone(): PathInfo {\n    const newPathInfo = new PathInfo();\n\n    if (this.prstGeom !== undefined) {\n      newPathInfo.setPrstGeom(cloneDeep(this.prstGeom));\n      newPathInfo.setPathBuilder(this.pathBuilder);\n    } else if (this.custGeom !== undefined) {\n      newPathInfo.setCustGeom(cloneDeep(this.custGeom));\n      newPathInfo.setPathBuilder(this.pathBuilder);\n    }\n\n    return newPathInfo;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport FillBase from 'model/node/graphic/info/fill/FillBase';\nimport { FillTypeEnum } from 'types/model/node/graphic/FillTypeEnum';\n\n/**\n * 도형의 윤곽선 정보를 담고있는 class입니다.\n */\nexport default class StrokeInfo {\n  /**\n   * 채우기 속성\n   */\n  private fill: Nullable<FillBase>;\n\n  /**\n   * 윤곽선 두께\n   */\n  private width: Nullable<number>;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.fill = undefined;\n    this.width = undefined;\n  }\n\n  /**\n   * 채우기 속성을 반환합니다.\n   *\n   * @returns 윤곽선의 채우기 속성\n   */\n  @boundMethod\n  public getFill(): Nullable<FillBase> {\n    return this.fill;\n  }\n\n  /**\n   * 채우기 속성을 설정합니다.\n   *\n   * @param fill 설정 할 채우기 속성\n   */\n  @boundMethod\n  public setFill(fill: Nullable<FillBase>): void {\n    this.fill = fill;\n  }\n\n  /**\n   * 윤곽선의 FillType을 반환합니다.\n   *\n   * @returns 윤곽선의 FillType\n   */\n  @boundMethod\n  public getFillType(): Nullable<FillTypeEnum> {\n    return this.fill?.getType();\n  }\n\n  /**\n   * 윤곽선 두께를 반환합니다.\n   *\n   * @returns 윤곽선 두께\n   */\n  @boundMethod\n  public getWidth(): Nullable<number> {\n    return this.width;\n  }\n\n  /**\n   * 윤곽선 두께를 설정합니다.\n   *\n   * @param width 설정 할 윤곽선 두께\n   */\n  @boundMethod\n  public setWidth(width: Nullable<number>): void {\n    this.width = width;\n  }\n\n  /**\n   * StrokeInfo를 복사하여 반환합니다.\n   *\n   * @returns 새롭게 복사한 StrokeInfo\n   */\n  @boundMethod\n  public clone(): StrokeInfo {\n    const newStrokeInfo = new StrokeInfo();\n\n    newStrokeInfo.setFill(this.fill?.clone());\n    newStrokeInfo.setWidth(this.width);\n\n    return newStrokeInfo;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport CoordinateInfo from 'model/node/graphic/info/CoordinateInfo';\nimport FillInfo from 'model/node/graphic/info/FillInfo';\nimport PathInfo from 'model/node/graphic/info/PathInfo';\nimport StrokeInfo from 'model/node/graphic/info/StrokeInfo';\nimport TreeNode from 'model/node/TreeNode';\nimport { GraphicTypeEnum } from 'types/model/node/graphic/GraphicTypeEnum';\nimport { TreeNodeTypeEnum } from 'types/model/node/TreeNodeTypeEnum';\nimport IdGenerator from 'util/id/IdGenerator';\n\n/**\n * Graphic object 를 나타내는 모델입니다.\n */\nexport default class GraphicModel extends TreeNode {\n  /**\n   * GraphicModel 개체의 종류를 구분하기 위한 변수입니다.\n   */\n  private graphicType: GraphicTypeEnum;\n\n  /**\n   * 그래픽 개체의 크기, 좌표, 회전 등의 정보를 관리하는 Class 입니다.\n   */\n  private coordinateInfo: CoordinateInfo;\n\n  /**\n   * 그래픽 개체의 Path 정보를 관리하는 class 입니다.\n   */\n  private pathInfo: Nullable<PathInfo>;\n\n  /**\n   * 그래픽 개체의 채우기 스타일 정보를 관리하는 Class 입니다.\n   */\n  private fillInfo: Nullable<FillInfo>;\n\n  /**\n   * 그래픽 개체의 윤곽선 스타일 정보를 관리하는 Class 입니다.\n   */\n  private strokeInfo: Nullable<StrokeInfo>;\n\n  /**\n   * object의 현재 편집 상태를 나타내는 값입니다.\n   */\n  private isBeingEdited: boolean;\n\n  /**\n   * object 가 현재 선택되어 있는지 나타내는 값입니다.\n   */\n  private selected: boolean;\n\n  /**\n   * 생성자\n   *\n   * @param id GraphicComponent에 부여 할 id\n   */\n  constructor(id: number) {\n    super(id);\n    this.graphicType = GraphicTypeEnum.SHAPE;\n    this.coordinateInfo = new CoordinateInfo();\n    this.pathInfo = undefined;\n    this.fillInfo = undefined;\n    this.strokeInfo = undefined;\n    this.isBeingEdited = false;\n    this.selected = false;\n  }\n\n  /**\n   * GrahpicModel의 TreeNode로서 type을 반환합니다.\n   *\n   * @returns Graphic model임을 알려주는 TreeNodeTypeEnum\n   */\n  public getTreeNodeType(): TreeNodeTypeEnum {\n    return TreeNodeTypeEnum.GRAPHIC_MODEL;\n  }\n\n  /**\n   * GrahpicModel을 shape으로 사용하기 위해 초기화 합니다.\n   */\n  @boundMethod\n  public initAsShape(): void {\n    this.graphicType = GraphicTypeEnum.SHAPE;\n    this.pathInfo = new PathInfo();\n    this.fillInfo = new FillInfo();\n    this.strokeInfo = new StrokeInfo();\n  }\n\n  /**\n   * GraphicModel을 Group으로 사용하기 위해 초기화 합니다.\n   */\n  @boundMethod\n  public initAsGroup(): void {\n    this.graphicType = GraphicTypeEnum.GROUP;\n    this.fillInfo = new FillInfo();\n  }\n\n  /**\n   * GraphicModel을 새로 복사하여 반환합니다.\n   *\n   * @returns 새로 복제 된 GrahpicModel\n   */\n  @boundMethod\n  public clone(): GraphicModel {\n    const cloned = new GraphicModel(IdGenerator.generateId());\n    // graphic enum clone\n    cloned.setGraphicType(this.graphicType);\n    cloned.setCoordinateInfo(this.coordinateInfo.clone());\n    cloned.setPathInfo(this.pathInfo?.clone());\n    cloned.setFillInfo(this.fillInfo?.clone());\n    cloned.setStrokeInfo(this.strokeInfo?.clone());\n\n    return cloned;\n  }\n\n  /**\n   * grahpic type을 설정합니다.\n   *\n   * @param graphicType 새로 설정 할 graphic type\n   */\n  @boundMethod\n  public setGraphicType(graphicType: GraphicTypeEnum): void {\n    this.graphicType = graphicType;\n  }\n\n  /**\n   * graphic type을 반환합니다.\n   *\n   * @returns grahpicType\n   */\n  @boundMethod\n  public getGraphicType(): GraphicTypeEnum {\n    return this.graphicType;\n  }\n\n  /**\n   * coordinateInfo 를 설정합니다.\n   *\n   * @param coordinateInfo 새롭게 설정 할 coordinateInfo\n   */\n  @boundMethod\n  public setCoordinateInfo(coordinateInfo: CoordinateInfo): void {\n    this.coordinateInfo = coordinateInfo;\n  }\n\n  /**\n   * coordinateInfo를 반환합니다.\n   *\n   * @returns grahpicModel의 coordinateInfo\n   */\n  @boundMethod\n  public getCoordinateInfo(): CoordinateInfo {\n    return this.coordinateInfo;\n  }\n\n  /**\n   * pathInfo를 설정합니다.\n   *\n   * @param pathInfo 새롭게 설정 할 pathInfo\n   */\n  @boundMethod\n  public setPathInfo(pathInfo: Nullable<PathInfo>): void {\n    this.pathInfo = pathInfo;\n  }\n\n  /**\n   * pathInfo를 반환합니다.\n   *\n   * @returns graphicModel의 PathInfo\n   */\n  @boundMethod\n  public getPathInfo(): Nullable<PathInfo> {\n    return this.pathInfo;\n  }\n\n  /**\n   * fillInfo를 설정합니다.\n   *\n   * @param fillInfo 새롭게 설정 할 fillInfo\n   */\n  @boundMethod\n  public setFillInfo(fillInfo: Nullable<FillInfo>): void {\n    this.fillInfo = fillInfo;\n  }\n\n  /**\n   * fillInfo를 반환합니다.\n   *\n   * @returns graphicModel의 fillInfo\n   */\n  @boundMethod\n  public getFillInfo(): Nullable<FillInfo> {\n    return this.fillInfo;\n  }\n\n  /**\n   * strokeInfo를 설정합니다.\n   *\n   * @param strokeInfo 새롭게 설정 할 strokeInfo\n   */\n  @boundMethod\n  public setStrokeInfo(strokeInfo: Nullable<StrokeInfo>): void {\n    this.strokeInfo = strokeInfo;\n  }\n\n  /**\n   * strokeInfo를 반환합니다.\n   *\n   * @returns grahpicModel의 strokeInfo\n   */\n  @boundMethod\n  public getStrokeInfo(): Nullable<StrokeInfo> {\n    return this.strokeInfo;\n  }\n\n  /**\n   * 현재 도형이 편집 중인지 설정합니다.\n   *\n   * @param beingEdited 현재 도형의 편집 상태\n   */\n  @boundMethod\n  public setIsBeingEdited(isBeingEdited: boolean): void {\n    this.isBeingEdited = isBeingEdited;\n  }\n\n  /**\n   * 현재 도형의 편집 상태를 반환합니다.\n   *\n   * @returns 현재 도형의 편집 상태\n   */\n  @boundMethod\n  public getIsBeingEdited(): boolean {\n    return this.isBeingEdited;\n  }\n\n  /**\n   * 현재 도형이 선택되어 있는 상태인지 설정합니다.\n   *\n   * @param selected 도형이 선택되어 있는 상태\n   */\n  @boundMethod\n  public setSelected(selected: boolean): void {\n    this.selected = selected;\n  }\n\n  /**\n   * 현재 도형이 선택되어 있는지 반환합니다.\n   *\n   * @returns 도형이 선택되어 있는 상태\n   */\n  @boundMethod\n  public getSelected(): boolean {\n    return this.selected;\n  }\n}\n","import { IGeometryParam, IPath } from 'types/model/node/graphic/GraphicTypes';\nimport { makeLine, makeMove } from 'util/node/graphic/path/PathUtil';\n\n/**\n * svg path를 생성하는 base class 입니다.\n */\nexport default abstract class PathBuilder {\n  /**\n   * path 정보\n   */\n  pathList: IPath[] = [];\n\n  /**\n   * SVG path 정보를 생성합니다.\n   *\n   * @param param PathBuilder 가 path 를 생성하기 위해 참고해야 하는 도형 정보\n   * @returns SVG path\n   */\n  public abstract build(param: IGeometryParam): IPath[];\n\n  /**\n   * 현재 x 좌표\n   */\n  curX = 0;\n\n  /**\n   * 현재 y 좌표\n   */\n  curY = 0;\n\n  /**\n   * move 정보를 담는 string을 반환합니다.\n   *\n   * @param x 도착 지점 x\n   * @param y 도착 지점 y\n   * @returns move 정보를 담는 string\n   */\n  public makeMove(x: number, y: number): string {\n    this.curX = x;\n    this.curY = y;\n    return makeMove(x, y);\n  }\n\n  /**\n   * line 정보를 담는 string을 반환합니다.\n   *\n   * @param x 도착 지점 x\n   * @param y 도착 지점 y\n   * @returns line 정보를 담는 string\n   */\n  public makeLine(x: number, y: number): string {\n    this.curX = x;\n    this.curY = y;\n    return makeLine(x, y);\n  }\n}\n","/**\n * 도형 Path를 생성, 편집하는 util 함수들의 모음입니다.\n */\n\n/**\n * Z segment를 생성합니다.\n *\n * @returns Z segment\n */\nexport function makeClose(): string {\n  return `Z `;\n}\n\n/**\n * M segment를 생성합니다.\n *\n * @returns M segment\n */\nexport function makeMove(x: number, y: number): string {\n  return `M ${x} ${y} `;\n}\n\n/**\n * L segment를 생성합니다.\n *\n * @returns L segment\n */\nexport function makeLine(x: number, y: number): string {\n  return `L ${x} ${y} `;\n}\n","import PathBuilder from 'model/node/graphic/info/path/PathBuilder';\nimport { IGeometryParam, IPath } from 'types/model/node/graphic/GraphicTypes';\n\n/**\n * 대각선으로 사각형 2개가 있는 모양의 path를 그리는 PathBuilder\n */\nexport default class PrstDiagonalRectBuilder extends PathBuilder {\n  /**\n   * SVG path 정보를 생성합니다.\n   *\n   * @param param PathBuilder 가 path 를 생성하기 위해 참고해야 하는 도형 정보\n   * @returns SVG path\n   */\n  public build(param: IGeometryParam): IPath[] {\n    // common\n    const l = 0;\n    const r = param.width / 2;\n    const b = param.height / 2;\n    const t = 0;\n\n    // pathLst\n    this.pathList = [];\n    let drawing = ``;\n    let fill = ``;\n    let stroke = ``;\n\n    // path\n    fill = `default`;\n    stroke = `default`;\n    drawing = ``;\n    drawing += this.makeMove(l, t);\n    drawing += this.makeLine(r, t);\n    drawing += this.makeLine(r, b);\n    drawing += this.makeLine(l, b);\n    drawing += `Z`;\n    this.pathList.push({ d: drawing, fill, stroke });\n\n    drawing = ``;\n    drawing += this.makeMove(r, b);\n    drawing += this.makeLine(r, 2 * b);\n    drawing += this.makeLine(2 * r, 2 * b);\n    drawing += this.makeLine(2 * r, b);\n    drawing += `Z`;\n    this.pathList.push({ d: drawing, fill, stroke });\n\n    return this.pathList;\n  }\n}\n","import PathBuilder from 'model/node/graphic/info/path/PathBuilder';\nimport { IGeometryParam, IPath } from 'types/model/node/graphic/GraphicTypes';\n\n/**\n * 사각형 모양의 path를 그리는 PathBuilder\n */\nexport default class PrstRectBuilder extends PathBuilder {\n  /**\n   * SVG path 정보를 생성합니다.\n   *\n   * @param param PathBuilder 가 path 를 생성하기 위해 참고해야 하는 도형 정보\n   * @returns SVG path\n   */\n  public build(param: IGeometryParam): IPath[] {\n    // common\n    const l = 0;\n    const r = param.width;\n    const b = param.height;\n    const t = 0;\n\n    // pathLst\n    this.pathList = [];\n    let drawing = ``;\n    let fill = ``;\n    let stroke = ``;\n\n    // path\n    fill = `default`;\n    stroke = `default`;\n    drawing = ``;\n    drawing += this.makeMove(l, t);\n    drawing += this.makeLine(r, t);\n    drawing += this.makeLine(r, b);\n    drawing += this.makeLine(l, b);\n    drawing += `Z`;\n    this.pathList.push({ d: drawing, fill, stroke });\n\n    return this.pathList;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport PathBuilder from 'model/node/graphic/info/path/PathBuilder';\nimport PrstDiagonalRectBuilder from 'model/node/graphic/info/path/PrstDiagonalRectBuilder';\nimport PrstRectBuilder from 'model/node/graphic/info/path/PrstRectBuilder';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\n\n/**\n * Path 를 생성하는 PathBuilder를 생성합니다.\n * PathBuilderFactory 는 싱글톤으로 존재합니다.\n */\nclass PathBuilderFactory {\n  /**\n   * 사각형\n   */\n  private prstRectBuilder?: PathBuilder;\n\n  /**\n   * 대각선으로 사각형 2개가 있는 모양\n   */\n  private prstDiagonalRectBuilder?: PathBuilder;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.prstRectBuilder = undefined;\n    this.prstDiagonalRectBuilder = undefined;\n  }\n\n  /**\n   * shapeType에 맞는 PathBuilder를 생성하여 반환합니다.\n   * 일반적인 pathBuilder의 경우 instance를 재활용하지만,\n   * CustomPathBuilder의 경우 각 도형이 서로 다른 instance를 가져야 합니다.\n   *\n   * @param shapeType path가 필요한 도형의 type\n   * @returns shapeType에 맞는 pathBuilder\n   */\n  @boundMethod\n  public createPathBuilder(shapeType: ShapeTypeEnum): PathBuilder {\n    switch (shapeType) {\n      case ShapeTypeEnum.RECT:\n        if (this.prstRectBuilder === undefined) {\n          this.prstRectBuilder = new PrstRectBuilder();\n        }\n        return this.prstRectBuilder;\n      case ShapeTypeEnum.DIAGONAL_RECT:\n        if (this.prstDiagonalRectBuilder === undefined) {\n          this.prstDiagonalRectBuilder = new PrstDiagonalRectBuilder();\n        }\n        return this.prstDiagonalRectBuilder;\n      default:\n        // 기본을 일단 'rect'\n        if (this.prstRectBuilder === undefined) {\n          this.prstRectBuilder = new PrstRectBuilder();\n        }\n        return this.prstRectBuilder;\n    }\n  }\n}\n\nexport default new PathBuilderFactory();\n","/**\n * 색상의 종류를 지정하는 type입니다.\n */\nexport enum ColorType {\n  SRGB = 0,\n  PRESET,\n}\n","import { boundMethod } from 'autobind-decorator';\nimport { PresetColorMap } from 'resource/color/PresetColorMap';\nimport { ColorType } from 'types/model/color/ColorTypes';\n\n/**\n * 색상 정보를 관리하는 class 입니다.\n */\nexport default class Color {\n  /**\n   * 색상의 type\n   */\n  private colorType: ColorType;\n\n  /**\n   * 색상의 실제 값\n   */\n  private value: string;\n\n  /**\n   * 생성자\n   *\n   * @param colorType 색상의 type\n   * @param value 색상의 실제 값\n   */\n  constructor(colorType: ColorType, value: string) {\n    this.colorType = colorType;\n    this.value = value;\n  }\n\n  /**\n   *  실제 사용 할 수 있는 color를 반환합니다.\n   *\n   *  @return #000000 형식의 HEX 색상코드\n   */\n  @boundMethod\n  public getColorString(): string {\n    let color: string;\n\n    switch (this.colorType) {\n      case ColorType.SRGB:\n        color = `#${this.value}`;\n        break;\n      case ColorType.PRESET:\n        color = PresetColorMap.get(this.value) ?? '#ffffff';\n        break;\n      default:\n        color = '#afafaf';\n        break;\n    }\n\n    // 색상표현 양식에 맞는지 확인 (ex. #ffffff)\n    if (!/^#[0-9a-fA-F]{6}$/.test(color)) {\n      color = '#cdcdcd';\n    }\n\n    return color;\n  }\n\n  /**\n   * color 개체를 복사하여 반환합니다.\n   *\n   * @returns 복사한 color 개체\n   */\n  @boundMethod\n  public clone(): Color {\n    return new Color(this.colorType, this.value);\n  }\n}\n","import { FillTypeEnum } from 'types/model/node/graphic/FillTypeEnum';\n\n/**\n * 도형의 채우기 정보를 담고있는 class 입니다.\n */\nexport default abstract class FillBase {\n  /**\n   * 도형의 채우기 type을 반환합니다.\n   */\n  public abstract getType(): FillTypeEnum;\n\n  /**\n   * react component에서 사용할 수 있도록 fill을 string으로 변환하여 반환합니다.\n   */\n  public abstract getFillString(): string;\n\n  /**\n   * 이 class 를 복사하여 반환합니다.\n   */\n  public abstract clone(): FillBase;\n}\n","/**\n * 도형의 채우기 정보를 나타내는 type입니다\n */\nexport enum FillTypeEnum {\n  NO_FILL = 0,\n  SOLID_FILL,\n}\n","import Color from 'model/color/Color';\nimport FillBase from 'model/node/graphic/info/fill/FillBase';\nimport { FillTypeEnum } from 'types/model/node/graphic/FillTypeEnum';\n\n/**\n * 단일 색으로 채우는 경우에 대한 class 입니다.\n */\nexport default class SolidFill extends FillBase {\n  /**\n   * solidfill로 채울 색 입니다.\n   */\n  private color: Color;\n\n  /**\n   * 생성자\n   *\n   * @param color solid fill에서 표현 할 색\n   */\n  constructor(color: Color) {\n    super();\n    this.color = color;\n  }\n\n  /**\n   * 도형의 채우기 type을 반환합니다.\n   *\n   * FillType.SOLID_FILL\n   */\n  public getType(): FillTypeEnum {\n    return FillTypeEnum.SOLID_FILL;\n  }\n\n  /**\n   * react component에서 사용할 수 있도록 fill을 string으로 변환하여 반환합니다.\n   *\n   * @returns color를 hex로 변환한 값\n   */\n  public getFillString(): string {\n    return this.color.getColorString();\n  }\n\n  /**\n   * 이 class를 복사하여 반환합니다.\n   *\n   * @returns 복사한 solid fill\n   */\n  public clone(): FillBase {\n    return new SolidFill(this.color.clone());\n  }\n\n  /**\n   * 색상을 지정합니다.\n   *\n   * @param color 새롭게 바꿀 색상\n   */\n  public setColor(color: Color): void {\n    this.color = color;\n  }\n\n  /**\n   * solidfill이 가지고 있는 color를 반환합니다.\n   *\n   * @returns solidFill이 가지고 있는 색상\n   */\n  public getColor(): Color {\n    return this.color;\n  }\n}\n","import GraphicModel from 'model/node/graphic/GraphicModel';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport AppContext from 'store/context/AppContext';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { getChildGraphicModelList, isGroup } from '../GraphicModelTreeNodeUtil';\n\nexport function getSelectedGraphicModelList(\n  selectionContainer: SelectionContainer\n): GraphicModel[] {\n  return selectionContainer.getGraphicModelSelectionContainer().getSelectedGraphicModels();\n}\n\nexport function getEditingTargetGraphicModelList(\n  selectionContainer: SelectionContainer,\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  isSelectedGraphicModel: boolean,\n  filterFunction: Nullable<(graphicModel: GraphicModel) => boolean>\n): GraphicModel[] {\n  const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n  const eventTargetGraphicModelList = eventTargetGraphicModel ? [eventTargetGraphicModel] : [];\n\n  const editingTargetGraphicModelList = isSelectedGraphicModel\n    ? getSelectedGraphicModelList(selectionContainer)\n    : eventTargetGraphicModelList;\n\n  return filterGraphicModelList(editingTargetGraphicModelList, filterFunction);\n}\n\nexport function collectEditingTargetGraphicModelList(\n  selectionContainer: SelectionContainer,\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  isSelectedGraphicModel: boolean,\n  filterFunction: Nullable<(graphicModel: GraphicModel) => boolean>\n): void {\n  const editingTargetGraphicModelList = getEditingTargetGraphicModelList(\n    selectionContainer,\n    graphicEditInfoContainer,\n    isSelectedGraphicModel,\n    filterFunction\n  );\n\n  editingTargetGraphicModelList.forEach(graphicModel => {\n    graphicEditInfoContainer.appendEditingGraphicModel(graphicModel);\n  });\n}\n\nexport function collectEditingDependentGraphicModelList(\n  graphicEditInfoContainer: GraphicEditInfoContainer\n): void {\n  const editingDependentGraphicModelSet = new Set<GraphicModel>();\n\n  graphicEditInfoContainer.getEditingGraphicModelList().forEach(graphicModel => {\n    editingDependentGraphicModelSet.add(graphicModel);\n  });\n\n  editingDependentGraphicModelSet.forEach(graphicModel => {\n    graphicEditInfoContainer.appendEditingDependentGraphicModelEditRequest(graphicModel);\n  });\n}\n\nexport function collectEditPreviewLayerGraphicModelList(\n  graphicEditInfoContainer: GraphicEditInfoContainer\n): void {\n  const editPreviewLayerGraphicModelList = new Array<GraphicModel>();\n\n  graphicEditInfoContainer.getEditingGraphicModelList().forEach(graphicModel => {\n    if (isGroup(graphicModel)) {\n      const childGraphicModelList = getChildGraphicModelList(graphicModel);\n      childGraphicModelList.forEach(childGraphicModel => {\n        if (isGroup(childGraphicModel) === false) {\n          editPreviewLayerGraphicModelList.push(childGraphicModel);\n        }\n      });\n    } else {\n      editPreviewLayerGraphicModelList.push(graphicModel);\n    }\n  });\n\n  // TODO\n  // sort in tree order\n\n  editPreviewLayerGraphicModelList.forEach(graphicModel => {\n    graphicEditInfoContainer.appendEditPreviewLayerGraphicModel(graphicModel);\n  });\n}\n\nexport function clearGraphicEditContext(ctx: AppContext): void {\n  const editableContext = ctx.getEditableContext();\n  const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n  const proxryLayerInfoContainer = editableContext.getProxyLayerInfoContainer();\n\n  editableContext.setEventState(EventStateEnum.IDLE);\n  graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(false);\n  graphicEditInfoContainer.clear();\n  graphicEditInfoContainer.requestRerenderEditPreviewLayer(ctx);\n\n  proxryLayerInfoContainer.disableAppAreaProxyLayer();\n  proxryLayerInfoContainer.disableEditViewProxyLayer();\n}\n\nexport function updateNewSelectionContainer(\n  ctx: AppContext,\n  graphicModelList: Nullable<GraphicModel[]>\n): void {\n  const editableContext = ctx.getEditableContext();\n  const oldSelectionContainer = editableContext.getSelectionContainer();\n\n  const selectionTargetList =\n    graphicModelList ??\n    oldSelectionContainer.getGraphicModelSelectionContainer().getSelectedGraphicModels();\n\n  const newSelectionContainer = editableContext.createSelectionContainer();\n  selectionTargetList.forEach(graphicModel => {\n    newSelectionContainer.getGraphicModelSelectionContainer().appendTreeNode(graphicModel);\n  });\n\n  const commandProps = editableContext.getCommandProps() ?? { commandId: CommandEnum.INVALID };\n  editableContext.setCommandProps({ ...commandProps, newSelectionContainer });\n}\n\nfunction filterGraphicModelList(\n  graphicModelList: GraphicModel[],\n  filterFunction: Nullable<(graphicModel: GraphicModel) => boolean>\n): GraphicModel[] {\n  if (filterFunction === undefined) {\n    return graphicModelList;\n  }\n\n  return graphicModelList.filter(filterFunction);\n}\n","export enum GraphicEditingHandleEnum {\n  LEFT_TOP = 0,\n  TOP,\n  RIGHT_TOP,\n  LEFT,\n  RIGHT,\n  LEFT_BOTTOM,\n  BOTTOM,\n  RIGHT_BOTTOM,\n  MOVE,\n  ROTATE,\n}\n","import * as math from 'mathjs';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport CoordinateInfo from 'model/node/graphic/info/CoordinateInfo';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport {\n  degreeMod360,\n  flipPointAroundPivot,\n  isWHSwitched,\n  rotatePointAroundPivot,\n} from 'util/coordinate/CoordinateUtil';\nimport { IPoint, IResizeRatio, ISize } from 'types/common/geometry/GeometryTypes';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\nimport { GraphicEditingHandleEnum } from 'types/store/container/edit/GraphicEditingHandleEnum';\nimport {\n  getAllParentGroupList,\n  getRootGroup,\n  isGroup,\n  isGroupChild,\n} from '../GraphicModelTreeNodeUtil';\n\n// coordinate info\nexport function getCoordinateInfo(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): CoordinateInfo {\n  if (\n    graphicModel.getIsBeingEdited() === false &&\n    getRootGroup(graphicModel)?.getIsBeingEdited() === false\n  ) {\n    return graphicModel.getCoordinateInfo();\n  }\n\n  return getCurrentEditingCoordinateInfo(graphicEditInfoContainer, graphicModel);\n}\n\nexport function getInitialEditingCoordinateInfo(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): CoordinateInfo {\n  const graphicModelEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n\n  if (graphicModelEditRequest !== undefined) {\n    return graphicModelEditRequest.getInitialCoordinateInfo();\n  }\n  return graphicModel.getCoordinateInfo();\n}\n\nexport function getCurrentEditingCoordinateInfo(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): CoordinateInfo {\n  const graphicModelEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n\n  if (graphicModelEditRequest !== undefined) {\n    return graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n  }\n  return graphicModel.getCoordinateInfo();\n}\n\nfunction collectParentGroupNoneEditingCoordinateInfo(\n  graphicModel: GraphicModel\n): Array<CoordinateInfo> {\n  let parentGroupList: GraphicModel[] = [];\n  parentGroupList = getAllParentGroupList(graphicModel, false);\n  return parentGroupList.map(parentGroup => {\n    return parentGroup.getCoordinateInfo();\n  });\n}\n\nfunction collectParentGroupInitialEditingCoordinateInfo(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): Array<CoordinateInfo> {\n  const parentGroupList = getAllParentGroupList(graphicModel, false);\n\n  return parentGroupList.map(parentGroup => {\n    return getInitialEditingCoordinateInfo(graphicEditInfoContainer, parentGroup);\n  });\n}\n\nfunction collectParentGroupCurrentEditingCoordinateInfo(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): Array<CoordinateInfo> {\n  const parentGroupList = getAllParentGroupList(graphicModel, false);\n\n  return parentGroupList.map(parentGroup => {\n    return getCurrentEditingCoordinateInfo(graphicEditInfoContainer, parentGroup);\n  });\n}\n\n// center coordinate\nexport function getDisplayedCenterCoordinate(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): IPoint {\n  if (isEditPreviewLayer === true) {\n    return getCurrentEditingDisplayedCenterCoordinate(graphicEditInfoContainer, graphicModel);\n  }\n  return getNoneEditingDisplayedCenterCoordinate(graphicModel);\n}\n\nexport function getNoneEditingDisplayedCenterCoordinate(graphicModel: GraphicModel): IPoint {\n  const targetGraphicModelCoordinateInfo = graphicModel.getCoordinateInfo();\n  const parentGroupCoordinateInfoList = collectParentGroupNoneEditingCoordinateInfo(graphicModel);\n\n  return getCenterCoordinateUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getInitialEditingDisplayedCenterCoordinate(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IPoint {\n  const targetGraphicModelCoordinateInfo = getInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getCenterCoordinateUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getCurrentEditingDisplayedCenterCoordinate(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IPoint {\n  const targetGraphicModelCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getCenterCoordinateUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nfunction getCenterCoordinateUsingCoordinateInfo(\n  targetGraphicModelCoordinateInfo: CoordinateInfo,\n  parentGroupCoordinateInfoList: Array<CoordinateInfo>\n): IPoint {\n  const x =\n    targetGraphicModelCoordinateInfo.getX() + targetGraphicModelCoordinateInfo.getWidth() / 2;\n  const y =\n    targetGraphicModelCoordinateInfo.getY() + targetGraphicModelCoordinateInfo.getHeight() / 2;\n  const p = math.matrix([[x], [y], [1]]);\n\n  const groupMatrix = getAccumulatedTransformMatrix(parentGroupCoordinateInfoList);\n\n  const pp = math.multiply(groupMatrix, p);\n\n  return {\n    x: Number(pp.get([0, 0])),\n    y: Number(pp.get([1, 0])),\n  };\n}\n\n// position\nexport function getDisplayedPosition(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): IPoint {\n  if (isEditPreviewLayer === true) {\n    return getCurrentEditingDisplayedPosition(graphicEditInfoContainer, graphicModel);\n  }\n  return getNoneEditingDisplayedPosition(graphicModel);\n}\n\nexport function getNoneEditingDisplayedPosition(graphicModel: GraphicModel): IPoint {\n  const centerCoordinate = getNoneEditingDisplayedCenterCoordinate(graphicModel);\n  const size = getNoneEditingDisplayedSize(graphicModel);\n\n  return {\n    x: centerCoordinate.x - size.width / 2,\n    y: centerCoordinate.y - size.height / 2,\n  };\n}\n\nexport function getInitialEditingDisplayedPosition(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IPoint {\n  const centerCoordinate = getInitialEditingDisplayedCenterCoordinate(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const size = getInitialEditingDisplayedSize(graphicEditInfoContainer, graphicModel);\n\n  return {\n    x: centerCoordinate.x - size.width / 2,\n    y: centerCoordinate.y - size.height / 2,\n  };\n}\n\nexport function getCurrentEditingDisplayedPosition(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IPoint {\n  const centerCoordinate = getCurrentEditingDisplayedCenterCoordinate(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const size = getCurrentEditingDisplayedSize(graphicEditInfoContainer, graphicModel);\n\n  return {\n    x: centerCoordinate.x - size.width / 2,\n    y: centerCoordinate.y - size.height / 2,\n  };\n}\n\n// size\nexport function getDisplayedSize(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): ISize {\n  if (isEditPreviewLayer === true) {\n    return getCurrentEditingDisplayedSize(graphicEditInfoContainer, graphicModel);\n  }\n  return getNoneEditingDisplayedSize(graphicModel);\n}\n\nexport function getNoneEditingDisplayedSize(graphicModel: GraphicModel): ISize {\n  const targetGraphicModelCoordinateInfo = graphicModel.getCoordinateInfo();\n\n  const resizeRatio = getNoneEditingDisplayedResizeRatio(graphicModel);\n  const width = targetGraphicModelCoordinateInfo.getWidth() * resizeRatio.widthRatio;\n  const height = targetGraphicModelCoordinateInfo.getHeight() * resizeRatio.heightRatio;\n\n  return { width, height };\n}\n\nexport function getInitialEditingDisplayedSize(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): ISize {\n  const targetGraphicModelCoordinateInfo = getInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const resizeRatio = getInitialEditingDisplayedResizeRatio(graphicEditInfoContainer, graphicModel);\n  const width = targetGraphicModelCoordinateInfo.getWidth() * resizeRatio.widthRatio;\n  const height = targetGraphicModelCoordinateInfo.getHeight() * resizeRatio.heightRatio;\n\n  return { width, height };\n}\n\nexport function getCurrentEditingDisplayedSize(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): ISize {\n  const targetGraphicModelCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const resizeRatio = getCurrentEditingDisplayedResizeRatio(graphicEditInfoContainer, graphicModel);\n  const width = targetGraphicModelCoordinateInfo.getWidth() * resizeRatio.widthRatio;\n  const height = targetGraphicModelCoordinateInfo.getHeight() * resizeRatio.heightRatio;\n\n  return { width, height };\n}\n\n// localize render position\nexport function applyGraphicModelTransformToRenderCoordinate(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  renderCoordinate: IPoint,\n  applyFlip: boolean\n): IPoint {\n  const centerCoordinate = getInitialEditingDisplayedCenterCoordinate(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  let transformAppliedCoordinate = rotatePointAroundPivot(\n    renderCoordinate,\n    centerCoordinate,\n    -getInitialEditingDisplayedRotation(graphicEditInfoContainer, graphicModel)\n  );\n\n  if (applyFlip === true) {\n    transformAppliedCoordinate = flipPointAroundPivot(\n      transformAppliedCoordinate,\n      centerCoordinate,\n      getInitialEditingDisplayedFlipH(graphicEditInfoContainer, graphicModel),\n      getInitialEditingDisplayedFlipV(graphicEditInfoContainer, graphicModel)\n    );\n  }\n\n  return {\n    x: transformAppliedCoordinate.x - centerCoordinate.x,\n    y: transformAppliedCoordinate.y - centerCoordinate.y,\n  };\n}\n\nexport function getNoneEditingDisplayedResizeRatio(graphicModel: GraphicModel): IResizeRatio {\n  const targetGraphicModelCoordinateInfo = graphicModel.getCoordinateInfo();\n  const parentGroupCoordinateInfoList = collectParentGroupNoneEditingCoordinateInfo(graphicModel);\n\n  return getResizeRatioUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getInitialEditingDisplayedResizeRatio(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IResizeRatio {\n  const targetGraphicModelCoordinateInfo = getInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getResizeRatioUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getCurrentEditingDisplayedResizeRatio(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IResizeRatio {\n  const targetGraphicModelCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getResizeRatioUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nfunction getResizeRatioUsingCoordinateInfo(\n  targetGraphicModelCoordinateInfo: CoordinateInfo,\n  parentGroupCoordinateInfoList: Array<CoordinateInfo>\n): IResizeRatio {\n  let widthRatio = 1;\n  let heightRatio = 1;\n\n  let rotation = targetGraphicModelCoordinateInfo.getRotation();\n\n  parentGroupCoordinateInfoList.forEach(coordinateInfo => {\n    const groupWidth = coordinateInfo.getGroupWidth();\n    const groupHeight = coordinateInfo.getGroupHeight();\n\n    let groupWidthRatio = groupWidth !== undefined ? coordinateInfo.getWidth() / groupWidth : 1;\n    let groupHeightRatio = groupHeight !== undefined ? coordinateInfo.getHeight() / groupHeight : 1;\n\n    if (isWHSwitched(rotation) === true) {\n      const tmp = groupWidthRatio;\n      groupWidthRatio = groupHeightRatio;\n      groupHeightRatio = tmp;\n    }\n\n    rotation = applyParentCoordinateInfoToCurrentRotation(rotation, coordinateInfo);\n\n    widthRatio *= groupWidthRatio;\n    heightRatio *= groupHeightRatio;\n  });\n\n  return { widthRatio, heightRatio };\n}\n\n// rotation\nexport function getDisplayedRotation(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): number {\n  if (isEditPreviewLayer === true) {\n    return getCurrentEditingDisplayedRotation(graphicEditInfoContainer, graphicModel);\n  }\n  return getNoneEditingDisplayedRotation(graphicModel);\n}\n\nexport function getNoneEditingDisplayedRotation(graphicModel: GraphicModel): number {\n  const targetGraphicModelCoordinateInfo = graphicModel.getCoordinateInfo();\n  const parentGroupCoordinateInfoList = collectParentGroupNoneEditingCoordinateInfo(graphicModel);\n\n  return getRotationUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getInitialEditingDisplayedRotation(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): number {\n  const targetGraphicModelCoordinateInfo = getInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getRotationUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getCurrentEditingDisplayedRotation(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): number {\n  const targetGraphicModelCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getRotationUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nfunction getRotationUsingCoordinateInfo(\n  targetGraphicModelCoordinateInfo: CoordinateInfo,\n  parentGroupCoordinateInfoList: Array<CoordinateInfo>\n): number {\n  let rotation = targetGraphicModelCoordinateInfo.getRotation();\n\n  parentGroupCoordinateInfoList.forEach(coordinateInfo => {\n    rotation = applyParentCoordinateInfoToCurrentRotation(rotation, coordinateInfo);\n  });\n\n  return rotation;\n}\n\nfunction applyParentCoordinateInfoToCurrentRotation(\n  currentRotation: number,\n  parentCoordinateInfo: CoordinateInfo\n): number {\n  let rotation = currentRotation;\n\n  if (parentCoordinateInfo.getFlipH() !== parentCoordinateInfo.getFlipV()) {\n    rotation = 360 - rotation;\n  }\n\n  rotation += parentCoordinateInfo.getRotation();\n\n  return rotation;\n}\n\n// flip\nexport function getDisplayedFlipH(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): boolean {\n  if (isEditPreviewLayer === true) {\n    return getCurrentEditingDisplayedFlipH(graphicEditInfoContainer, graphicModel);\n  }\n  return getNoneEditingDisplayedFlipH(graphicModel);\n}\n\nexport function getNoneEditingDisplayedFlipH(graphicModel: GraphicModel): boolean {\n  const targetGraphicModelCoordinateInfo = graphicModel.getCoordinateInfo();\n  const parentGroupCoordinateInfoList = collectParentGroupNoneEditingCoordinateInfo(graphicModel);\n\n  return getFlipHUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getInitialEditingDisplayedFlipH(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): boolean {\n  const targetGraphicModelCoordinateInfo = getInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getFlipHUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getCurrentEditingDisplayedFlipH(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): boolean {\n  const targetGraphicModelCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getFlipHUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getDisplayedFlipV(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): boolean {\n  if (isEditPreviewLayer === true) {\n    return getCurrentEditingDisplayedFlipV(graphicEditInfoContainer, graphicModel);\n  }\n  return getNoneEditingDisplayedFlipV(graphicModel);\n}\n\nexport function getNoneEditingDisplayedFlipV(graphicModel: GraphicModel): boolean {\n  const targetGraphicModelCoordinateInfo = graphicModel.getCoordinateInfo();\n  const parentGroupCoordinateInfoList = collectParentGroupNoneEditingCoordinateInfo(graphicModel);\n\n  return getFlipVUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getInitialEditingDisplayedFlipV(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): boolean {\n  const targetGraphicModelCoordinateInfo = getInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getFlipVUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nexport function getCurrentEditingDisplayedFlipV(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): boolean {\n  const targetGraphicModelCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const parentGroupCoordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getFlipVUsingCoordinateInfo(\n    targetGraphicModelCoordinateInfo,\n    parentGroupCoordinateInfoList\n  );\n}\n\nfunction getFlipHUsingCoordinateInfo(\n  targetGraphicModelCoordinateInfo: CoordinateInfo,\n  parentGroupCoordinateInfoList: Array<CoordinateInfo>\n): boolean {\n  let flipH = targetGraphicModelCoordinateInfo.getFlipH();\n\n  parentGroupCoordinateInfoList.forEach(coordinateInfo => {\n    flipH = flipH !== coordinateInfo.getFlipH();\n  });\n\n  return flipH;\n}\n\nfunction getFlipVUsingCoordinateInfo(\n  targetGraphicModelCoordinateInfo: CoordinateInfo,\n  parentGroupCoordinateInfoList: Array<CoordinateInfo>\n): boolean {\n  let flipV = targetGraphicModelCoordinateInfo.getFlipV();\n\n  parentGroupCoordinateInfoList.forEach(coordinateInfo => {\n    flipV = flipV !== coordinateInfo.getFlipV();\n  });\n\n  return flipV;\n}\n\n// matrix\nexport function getNoneEditingAccumulatedTransformMatrix(graphicModel: GraphicModel): math.Matrix {\n  const coordinateInfoList = collectParentGroupNoneEditingCoordinateInfo(graphicModel);\n\n  return getAccumulatedTransformMatrix(coordinateInfoList);\n}\n\nexport function getInitialEditingAccumulatedTransformMatrix(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): math.Matrix {\n  const coordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getAccumulatedTransformMatrix(coordinateInfoList);\n}\n\nexport function getCurrentEditingAccumulatedTransformMatrix(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): math.Matrix {\n  const coordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  return getAccumulatedTransformMatrix(coordinateInfoList);\n}\n\nexport function getAccumulatedTransformMatrix(\n  coordinateInfoList: Array<CoordinateInfo>\n): math.Matrix {\n  let accumulatedMatrix = math.identity(3, 3) as math.Matrix;\n\n  const rotationList = new Array<number>();\n  const widthRatioList = new Array<number>();\n  const heightRatioList = new Array<number>();\n  const flipHList = new Array<boolean>();\n  const flipVList = new Array<boolean>();\n\n  const coordinateInfoSize = coordinateInfoList.length;\n\n  for (\n    let coordinateInfoIndex = 0;\n    coordinateInfoIndex < coordinateInfoSize;\n    coordinateInfoIndex += 1\n  ) {\n    // root group to leaf\n    const coordinateInfo = coordinateInfoList[coordinateInfoSize - 1 - coordinateInfoIndex];\n\n    const currentRotation = coordinateInfo.getRotation();\n\n    const currentWidth = coordinateInfo.getWidth();\n    const currentHeight = coordinateInfo.getHeight();\n\n    const groupWidth = coordinateInfo.getGroupWidth();\n    const groupHeight = coordinateInfo.getGroupHeight();\n\n    const currentWidthRatio = groupWidth ? currentWidth / groupWidth : 1;\n    const currentHeightRatio = groupHeight ? currentHeight / groupHeight : 1;\n\n    const currentFlipH = coordinateInfo.getFlipH();\n    const currentFlipV = coordinateInfo.getFlipV();\n\n    const currentCenterX = coordinateInfo.getX() + currentWidth / 2;\n    const currentCenterY = coordinateInfo.getY() + currentHeight / 2;\n\n    const accumulatedCenterPoint = math.multiply(\n      accumulatedMatrix,\n      math.matrix([[currentCenterX], [currentCenterY], [1]])\n    );\n\n    let accumulatedWidth = currentWidth;\n    let accumulatedHeight = currentHeight;\n    let accumulatedFlipH = currentFlipH;\n    let accumulatedFlipV = currentFlipV;\n    let accumulatedRotation = currentRotation;\n\n    const listSize = rotationList.length;\n\n    // leaf to root group\n    for (let index = 0; index < listSize; index += 1) {\n      const parentRotation = rotationList[listSize - 1 - index];\n      const parentWidthRatio = widthRatioList[listSize - 1 - index];\n      const parentHeightRatio = heightRatioList[listSize - 1 - index];\n      const parentFlipH = flipHList[listSize - 1 - index];\n      const parentFlipV = flipVList[listSize - 1 - index];\n\n      if (isWHSwitched(accumulatedRotation) === true) {\n        accumulatedWidth *= parentHeightRatio;\n        accumulatedHeight *= parentWidthRatio;\n      } else {\n        accumulatedWidth *= parentWidthRatio;\n        accumulatedHeight *= parentHeightRatio;\n      }\n\n      accumulatedFlipH = accumulatedFlipH !== parentFlipH;\n      accumulatedFlipV = accumulatedFlipV !== parentFlipV;\n\n      if (parentFlipH !== parentFlipV) {\n        accumulatedRotation = 360 - accumulatedRotation;\n      }\n\n      accumulatedRotation += parentRotation;\n    }\n\n    const accumulatedX = Number(accumulatedCenterPoint.get([0, 0])) - accumulatedWidth / 2;\n    const accumulatedY = Number(accumulatedCenterPoint.get([1, 0])) - accumulatedHeight / 2;\n\n    accumulatedMatrix = getTransformMatrix(\n      coordinateInfo,\n      accumulatedX,\n      accumulatedY,\n      accumulatedWidth,\n      accumulatedHeight,\n      accumulatedFlipH,\n      accumulatedFlipV,\n      accumulatedRotation\n    );\n\n    rotationList.push(currentRotation);\n    widthRatioList.push(currentWidthRatio);\n    heightRatioList.push(currentHeightRatio);\n    flipHList.push(currentFlipH);\n    flipVList.push(currentFlipV);\n  }\n\n  return accumulatedMatrix;\n}\n\n// Ecma Office Open XML Part1\n// L.4.7.6 Transformation Matrices 참고\nexport function getTransformMatrix(\n  coordinateInfo: CoordinateInfo,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  flipH: boolean,\n  flipV: boolean,\n  rotation: number\n): math.Matrix {\n  return math.multiply(\n    getGroupRFMatrix(x, y, width, height, flipH, flipV, rotation),\n    getGroupSTMatrix(\n      x,\n      y,\n      width,\n      height,\n      coordinateInfo.getGroupX() ?? 0,\n      coordinateInfo.getGroupY() ?? 0,\n      coordinateInfo.getGroupWidth() ?? 1,\n      coordinateInfo.getGroupHeight() ?? 1\n    )\n  );\n}\n\n// matrix for rotation, flip\nfunction getGroupRFMatrix(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  flipH: boolean,\n  flipV: boolean,\n  rotation: number\n): math.Matrix {\n  const scaleX = flipH === true ? -1 : 1;\n  const scaleY = flipV === true ? -1 : 1;\n  const cos = math.cos(math.unit(rotation, 'deg'));\n  const sin = math.sin(math.unit(rotation, 'deg'));\n\n  const u = math.matrix([\n    [1, 0, -(x + width / 2)],\n    [0, 1, -(y + height / 2)],\n    [0, 0, 1],\n  ]);\n  const uInv = math.inv(u);\n  const trf = math.multiply(\n    math.multiply(\n      math.multiply(\n        uInv,\n        math.matrix([\n          [cos, -sin, 0],\n          [sin, cos, 0],\n          [0, 0, 1],\n        ])\n      ),\n      math.matrix([\n        [scaleX, 0, 0],\n        [0, scaleY, 0],\n        [0, 0, 1],\n      ])\n    ),\n    u\n  );\n\n  return trf;\n}\n\n// matrix for scale, translate\nfunction getGroupSTMatrix(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  groupX: number,\n  groupY: number,\n  groupWidth: number,\n  groupHeight: number\n): math.Matrix {\n  const tst = math.matrix([\n    [width / groupWidth, 0, x - (width / groupWidth) * groupX],\n    [0, height / groupHeight, y - (height / groupHeight) * groupY],\n    [0, 0, 1],\n  ]);\n\n  return tst;\n}\n\n// outer event\nexport function calculateResizeRatio(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  eventTargetGraphicModel: GraphicModel,\n  appliableMouseDelta: IPoint,\n  fixWHRatio: boolean\n): IResizeRatio {\n  const graphicEditingHandle = graphicEditInfoContainer.getGraphicEditingHandle();\n\n  const initialSize = getInitialEditingDisplayedSize(\n    graphicEditInfoContainer,\n    eventTargetGraphicModel\n  );\n\n  switch (graphicEditingHandle) {\n    case GraphicEditingHandleEnum.LEFT_TOP: {\n      return applyResizeOptions(\n        fixWHRatio,\n        { width: initialSize.width, height: initialSize.height },\n        {\n          width: initialSize.width - appliableMouseDelta.x,\n          height: initialSize.height - appliableMouseDelta.y,\n        }\n      );\n    }\n    case GraphicEditingHandleEnum.TOP: {\n      return {\n        widthRatio: 1,\n        heightRatio: (initialSize.height - appliableMouseDelta.y) / initialSize.height,\n      };\n    }\n    case GraphicEditingHandleEnum.RIGHT_TOP: {\n      return applyResizeOptions(\n        fixWHRatio,\n        { width: initialSize.width, height: initialSize.height },\n        {\n          width: initialSize.width + appliableMouseDelta.x,\n          height: initialSize.height - appliableMouseDelta.y,\n        }\n      );\n    }\n    case GraphicEditingHandleEnum.LEFT: {\n      return {\n        widthRatio: (initialSize.width - appliableMouseDelta.x) / initialSize.width,\n        heightRatio: 1,\n      };\n    }\n    case GraphicEditingHandleEnum.RIGHT: {\n      return {\n        widthRatio: initialSize.width\n          ? (initialSize.width + appliableMouseDelta.x) / initialSize.width\n          : 1,\n        heightRatio: 1,\n      };\n    }\n    case GraphicEditingHandleEnum.LEFT_BOTTOM: {\n      return applyResizeOptions(\n        fixWHRatio,\n        { width: initialSize.width, height: initialSize.height },\n        {\n          width: initialSize.width - appliableMouseDelta.x,\n          height: initialSize.height + appliableMouseDelta.y,\n        }\n      );\n    }\n    case GraphicEditingHandleEnum.BOTTOM: {\n      return {\n        widthRatio: 1,\n        heightRatio: (initialSize.height + appliableMouseDelta.y) / initialSize.height,\n      };\n    }\n    case GraphicEditingHandleEnum.RIGHT_BOTTOM: {\n      return applyResizeOptions(\n        fixWHRatio,\n        { width: initialSize.width, height: initialSize.height },\n        {\n          width: initialSize.width + appliableMouseDelta.x,\n          height: initialSize.height + appliableMouseDelta.y,\n        }\n      );\n    }\n    default: {\n      break;\n    }\n  }\n  return { widthRatio: 1, heightRatio: 1 };\n}\n\nfunction applyResizeOptions(\n  fixWHRatio: boolean,\n  initialSize: ISize,\n  currentSize: ISize\n): IResizeRatio {\n  let widthRatio = 1;\n  let heightRatio = 1;\n  widthRatio = currentSize.width / initialSize.width;\n  heightRatio = currentSize.height / initialSize.height;\n\n  if (fixWHRatio === false) return { widthRatio, heightRatio };\n\n  const largerRatio = math.max(math.abs(widthRatio), math.abs(heightRatio));\n  widthRatio = math.sign(widthRatio) * largerRatio;\n  heightRatio = math.sign(heightRatio) * largerRatio;\n  return { widthRatio, heightRatio };\n}\n\nexport function applyGraphicMoveDeltaToGraphicEditRequest(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  moveDelta: IPoint\n): void {\n  const graphicModelEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n  if (graphicModelEditRequest !== undefined) {\n    const initialCoordinateInfo = graphicModelEditRequest.getInitialCoordinateInfo();\n    const currentEditingCoordinateInfo = graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n\n    const initialPosition = getInitialEditingDisplayedPosition(\n      graphicEditInfoContainer,\n      graphicModel\n    );\n    let newX = initialPosition.x + moveDelta.x;\n    let newY = initialPosition.y + moveDelta.y;\n\n    if (isGroupChild(graphicModel) === true) {\n      const displayedSize = getInitialEditingDisplayedSize(graphicEditInfoContainer, graphicModel);\n      const displayedCenterPoint = math.matrix([\n        [newX + displayedSize.width / 2],\n        [newY + displayedSize.height / 2],\n        [1],\n      ]);\n\n      const accumulatedTransformationMatrix = getInitialEditingAccumulatedTransformMatrix(\n        graphicEditInfoContainer,\n        graphicModel\n      );\n\n      const newCenterPoint = math.multiply(\n        math.inv(accumulatedTransformationMatrix),\n        displayedCenterPoint\n      );\n\n      newX = Number(newCenterPoint.get([0, 0])) - initialCoordinateInfo.getWidth() / 2;\n      newY = Number(newCenterPoint.get([1, 0])) - initialCoordinateInfo.getHeight() / 2;\n    }\n\n    currentEditingCoordinateInfo.setX(newX);\n    currentEditingCoordinateInfo.setY(newY);\n  }\n}\n\nexport function applyResizeRatioToGraphicEditRequest(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  resizeRatio: IResizeRatio,\n  useFlip: boolean,\n  editingHandle?: GraphicEditingHandleEnum\n): void {\n  const graphicModelEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n\n  if (graphicModelEditRequest === undefined) {\n    return;\n  }\n\n  const graphicEditingHandle = editingHandle ?? graphicEditInfoContainer.getGraphicEditingHandle();\n\n  const graphicModelCenterPointBeforeResize = getInitialEditingDisplayedCenterCoordinate(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const graphicModelRotation = getInitialEditingDisplayedRotation(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const initialSize = getInitialEditingDisplayedSize(graphicEditInfoContainer, graphicModel);\n  const initialWidth = initialSize.width;\n  const initialHeight = initialSize.height;\n\n  const initialPosition = getInitialEditingDisplayedPosition(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  let newX = initialPosition.x;\n  let newY = initialPosition.y;\n\n  let newWidth = initialWidth * resizeRatio.widthRatio;\n  let newHeight = initialHeight * resizeRatio.heightRatio;\n\n  if (math.abs(newWidth) < 5) {\n    newWidth = 5;\n  }\n  if (math.abs(newHeight) < 5) {\n    newHeight = 5;\n  }\n\n  const newFlipH = resizeRatio.widthRatio < 0;\n  const newFlipV = resizeRatio.heightRatio < 0;\n\n  let graphicModelCenterPointAfterResize = { x: 0, y: 0 };\n\n  switch (graphicEditingHandle) {\n    case GraphicEditingHandleEnum.LEFT_TOP:\n    case GraphicEditingHandleEnum.TOP:\n    case GraphicEditingHandleEnum.LEFT: {\n      // right bottom (fix)\n\n      let rightBottomPoint = {\n        x: graphicModelCenterPointBeforeResize.x + initialWidth / 2,\n        y: graphicModelCenterPointBeforeResize.y + initialHeight / 2,\n      };\n\n      rightBottomPoint = rotatePointAroundPivot(\n        rightBottomPoint,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      let leftTopPointAfterResize = {\n        x: graphicModelCenterPointBeforeResize.x + initialWidth / 2 - newWidth,\n        y: graphicModelCenterPointBeforeResize.y + initialHeight / 2 - newHeight,\n      };\n\n      leftTopPointAfterResize = rotatePointAroundPivot(\n        leftTopPointAfterResize,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      graphicModelCenterPointAfterResize = {\n        x: (leftTopPointAfterResize.x + rightBottomPoint.x) / 2,\n        y: (leftTopPointAfterResize.y + rightBottomPoint.y) / 2,\n      };\n\n      const leftTopPointWithoutRotation = rotatePointAroundPivot(\n        leftTopPointAfterResize,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      const rightBottomPointWithoutRotation = rotatePointAroundPivot(\n        rightBottomPoint,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      newX = math.min(leftTopPointWithoutRotation.x, rightBottomPointWithoutRotation.x);\n      newY = math.min(leftTopPointWithoutRotation.y, rightBottomPointWithoutRotation.y);\n      break;\n    }\n    case GraphicEditingHandleEnum.RIGHT:\n    case GraphicEditingHandleEnum.BOTTOM:\n    case GraphicEditingHandleEnum.RIGHT_BOTTOM: {\n      // left top (fix)\n\n      let leftTopPoint = {\n        x: graphicModelCenterPointBeforeResize.x - initialWidth / 2,\n        y: graphicModelCenterPointBeforeResize.y - initialHeight / 2,\n      };\n\n      leftTopPoint = rotatePointAroundPivot(\n        leftTopPoint,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      let rightBottomPointAfterResize = {\n        x: graphicModelCenterPointBeforeResize.x - initialWidth / 2 + newWidth,\n        y: graphicModelCenterPointBeforeResize.y - initialHeight / 2 + newHeight,\n      };\n\n      rightBottomPointAfterResize = rotatePointAroundPivot(\n        rightBottomPointAfterResize,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      graphicModelCenterPointAfterResize = {\n        x: (leftTopPoint.x + rightBottomPointAfterResize.x) / 2,\n        y: (leftTopPoint.y + rightBottomPointAfterResize.y) / 2,\n      };\n\n      const leftTopPointWithoutRotation = rotatePointAroundPivot(\n        leftTopPoint,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      const rightBottomPointWithoutRotation = rotatePointAroundPivot(\n        rightBottomPointAfterResize,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      newX = math.min(leftTopPointWithoutRotation.x, rightBottomPointWithoutRotation.x);\n      newY = math.min(leftTopPointWithoutRotation.y, rightBottomPointWithoutRotation.y);\n      break;\n    }\n    case GraphicEditingHandleEnum.RIGHT_TOP: {\n      // left bottom (fix)\n      let leftBottomPoint = {\n        x: graphicModelCenterPointBeforeResize.x - initialWidth / 2,\n        y: graphicModelCenterPointBeforeResize.y + initialHeight / 2,\n      };\n\n      leftBottomPoint = rotatePointAroundPivot(\n        leftBottomPoint,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      let rightTopPointAfterResize = {\n        x: graphicModelCenterPointBeforeResize.x - initialWidth / 2 + newWidth,\n        y: graphicModelCenterPointBeforeResize.y + initialHeight / 2 - newHeight,\n      };\n\n      rightTopPointAfterResize = rotatePointAroundPivot(\n        rightTopPointAfterResize,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      graphicModelCenterPointAfterResize = {\n        x: (rightTopPointAfterResize.x + leftBottomPoint.x) / 2,\n        y: (rightTopPointAfterResize.y + leftBottomPoint.y) / 2,\n      };\n\n      const rightTopPointWithoutRotation = rotatePointAroundPivot(\n        rightTopPointAfterResize,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      const leftBottomPointWithoutRotation = rotatePointAroundPivot(\n        leftBottomPoint,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      newX = math.min(rightTopPointWithoutRotation.x, leftBottomPointWithoutRotation.x);\n      newY = math.min(rightTopPointWithoutRotation.y, leftBottomPointWithoutRotation.y);\n      break;\n    }\n    case GraphicEditingHandleEnum.LEFT_BOTTOM: {\n      // right top (fix)\n      let rightTopPoint = {\n        x: graphicModelCenterPointBeforeResize.x + initialWidth / 2,\n        y: graphicModelCenterPointBeforeResize.y - initialHeight / 2,\n      };\n\n      rightTopPoint = rotatePointAroundPivot(\n        rightTopPoint,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      let leftBottomPointAfterResize = {\n        x: graphicModelCenterPointBeforeResize.x + initialWidth / 2 - newWidth,\n        y: graphicModelCenterPointBeforeResize.y - initialHeight / 2 + newHeight,\n      };\n\n      leftBottomPointAfterResize = rotatePointAroundPivot(\n        leftBottomPointAfterResize,\n        graphicModelCenterPointBeforeResize,\n        graphicModelRotation\n      );\n\n      graphicModelCenterPointAfterResize = {\n        x: (rightTopPoint.x + leftBottomPointAfterResize.x) / 2,\n        y: (rightTopPoint.y + leftBottomPointAfterResize.y) / 2,\n      };\n\n      const rightTopPointWithoutRotation = rotatePointAroundPivot(\n        rightTopPoint,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      const leftBottomPointWithoutRotation = rotatePointAroundPivot(\n        leftBottomPointAfterResize,\n        graphicModelCenterPointAfterResize,\n        -graphicModelRotation\n      );\n\n      newX = math.min(rightTopPointWithoutRotation.x, leftBottomPointWithoutRotation.x);\n      newY = math.min(rightTopPointWithoutRotation.y, leftBottomPointWithoutRotation.y);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  newWidth = math.abs(newWidth);\n  newHeight = math.abs(newHeight);\n\n  applyCoordinateToGraphicEditRequest(\n    graphicEditInfoContainer,\n    graphicModel,\n    {\n      x: newX,\n      y: newY,\n      centerX: graphicModelCenterPointAfterResize.x,\n      centerY: graphicModelCenterPointAfterResize.y,\n      width: newWidth,\n      height: newHeight,\n      flipH: newFlipH,\n      flipV: newFlipV,\n    },\n    useFlip\n  );\n}\n\nexport function applyCoordinateToGraphicEditRequest(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  newCoordinate: {\n    x: number;\n    y: number;\n    centerX: number;\n    centerY: number;\n    width: number;\n    height: number;\n    flipH: boolean;\n    flipV: boolean;\n  },\n  useFlip: boolean\n): void {\n  const graphicModelEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n\n  if (graphicModelEditRequest === undefined) {\n    return;\n  }\n\n  let newX = newCoordinate.x;\n  let newY = newCoordinate.y;\n\n  let newWidth = newCoordinate.width;\n  let newHeight = newCoordinate.height;\n\n  if (isGroupChild(graphicModel) === true) {\n    const displayedResizeRatio = getInitialEditingDisplayedResizeRatio(\n      graphicEditInfoContainer,\n      graphicModel\n    );\n    newWidth /= displayedResizeRatio.widthRatio;\n    newHeight /= displayedResizeRatio.heightRatio;\n\n    const accumulatedTransformationMatrix = getInitialEditingAccumulatedTransformMatrix(\n      graphicEditInfoContainer,\n      graphicModel\n    );\n    const displayedCenterPoint = math.matrix([\n      [newCoordinate.centerX],\n      [newCoordinate.centerY],\n      [1],\n    ]);\n    const newCenterPoint = math.multiply(\n      math.inv(accumulatedTransformationMatrix),\n      displayedCenterPoint\n    );\n\n    newX = Number(newCenterPoint.get([0, 0])) - newWidth / 2;\n    newY = Number(newCenterPoint.get([1, 0])) - newHeight / 2;\n  }\n\n  const initialCoordinateInfo = graphicModelEditRequest.getInitialCoordinateInfo();\n  const currentEditingCoordinateInfo = graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n\n  currentEditingCoordinateInfo.setX(newX);\n  currentEditingCoordinateInfo.setY(newY);\n  currentEditingCoordinateInfo.setWidth(newWidth);\n  currentEditingCoordinateInfo.setHeight(newHeight);\n\n  if (useFlip) {\n    currentEditingCoordinateInfo.setFlipH(initialCoordinateInfo.getFlipH() !== newCoordinate.flipH);\n    currentEditingCoordinateInfo.setFlipV(initialCoordinateInfo.getFlipV() !== newCoordinate.flipV);\n  }\n}\n\nexport function applyRotationToGraphicEditRequest(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  rotatedAngle: number,\n  isShiftDown: boolean\n): void {\n  const graphicModelEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n\n  if (graphicModelEditRequest !== undefined) {\n    const initialCoordinateInfo = graphicModelEditRequest.getInitialCoordinateInfo();\n    const currentEditingCoordinateInfo = graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n\n    let newAngle = degreeMod360(initialCoordinateInfo.getRotation() + rotatedAngle);\n\n    if (isShiftDown === true) {\n      newAngle = Math.floor(newAngle / 15) * 15;\n    }\n\n    currentEditingCoordinateInfo.setRotation(newAngle);\n\n    const initialResizeRatio = getInitialEditingDisplayedResizeRatio(\n      graphicEditInfoContainer,\n      graphicModel\n    );\n    const currentEditinginitialResizeRatio = getCurrentEditingDisplayedResizeRatio(\n      graphicEditInfoContainer,\n      graphicModel\n    );\n\n    currentEditingCoordinateInfo.setWidth(\n      (initialCoordinateInfo.getWidth() * initialResizeRatio.widthRatio) /\n        currentEditinginitialResizeRatio.widthRatio\n    );\n    currentEditingCoordinateInfo.setHeight(\n      (initialCoordinateInfo.getHeight() * initialResizeRatio.heightRatio) /\n        currentEditinginitialResizeRatio.heightRatio\n    );\n\n    currentEditingCoordinateInfo.setX(\n      initialCoordinateInfo.getX() +\n        initialCoordinateInfo.getWidth() / 2 -\n        currentEditingCoordinateInfo.getWidth() / 2\n    );\n    currentEditingCoordinateInfo.setY(\n      initialCoordinateInfo.getY() +\n        initialCoordinateInfo.getHeight() / 2 -\n        currentEditingCoordinateInfo.getHeight() / 2\n    );\n  }\n}\n\nexport function updateEditingDependentTreeMember(\n  graphicEditInfoContainer: GraphicEditInfoContainer\n): void {\n  updateEditingDependentParentGroup(graphicEditInfoContainer);\n  updateEditingDependentChildNode(graphicEditInfoContainer);\n}\n\nfunction updateEditingDependentParentGroup(\n  graphicEditInfoContainer: GraphicEditInfoContainer\n): void {\n  const editRequestMap = graphicEditInfoContainer.getEditingDependentGraphicModelEditRequestMap();\n  const parentGroupMap = new Map<GraphicModel, number>();\n\n  editRequestMap.forEach((editRequest, graphicModel) => {\n    let d = 0;\n    let parent = graphicModel.getParent();\n    while (isGraphicModel(parent) && isGroup(parent)) {\n      d += 1;\n      const depth = parentGroupMap.get(parent);\n      if (depth === undefined || depth < d) {\n        parentGroupMap.set(parent, d);\n      }\n\n      parent = parent.getParent();\n    }\n  });\n\n  const distanceArray: [GraphicModel, number][] = Array.from(parentGroupMap);\n  // 최상위 그룹에 대한 거리로 내림차순 정렬\n  distanceArray.sort((a, b) => b[1] - a[1]);\n\n  distanceArray.forEach(tuple => {\n    updateEditingDependentParentGroupEditRequest(graphicEditInfoContainer, tuple[0]);\n  });\n}\n\nfunction updateEditingDependentChildNode(graphicEditInfoContainer: GraphicEditInfoContainer): void {\n  // do something\n}\n\nfunction updateEditingDependentParentGroupEditRequest(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  parentGroup: GraphicModel\n): void {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  parentGroup.mapChild(child => {\n    const childGraphicModel = child as GraphicModel;\n    const childGraphicModelEditRequest =\n      graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(childGraphicModel);\n    const childCoordInfo =\n      childGraphicModelEditRequest?.getCurrentEditingCoordinateInfo() ??\n      childGraphicModel.getCoordinateInfo();\n\n    if (childCoordInfo !== undefined) {\n      let childMinX: number;\n      let childMinY: number;\n      let childMaxX: number;\n      let childMaxY: number;\n\n      if (isWHSwitched(childCoordInfo.getRotation()) === true) {\n        const centerX = childCoordInfo.getX() + childCoordInfo.getWidth() / 2;\n        const centerY = childCoordInfo.getY() + childCoordInfo.getHeight() / 2;\n\n        childMinX = centerX - childCoordInfo.getHeight() / 2;\n        childMinY = centerY - childCoordInfo.getWidth() / 2;\n        childMaxX = centerX + childCoordInfo.getHeight() / 2;\n        childMaxY = centerY + childCoordInfo.getWidth() / 2;\n      } else {\n        childMinX = childCoordInfo.getX();\n        childMinY = childCoordInfo.getY();\n        childMaxX = childCoordInfo.getX() + childCoordInfo.getWidth();\n        childMaxY = childCoordInfo.getY() + childCoordInfo.getHeight();\n      }\n\n      minX = math.min(minX, childMinX);\n      minY = math.min(minY, childMinY);\n      maxX = math.max(maxX, childMaxX);\n      maxY = math.max(maxY, childMaxY);\n    }\n  });\n\n  // group 업데이트 request 생성\n  graphicEditInfoContainer.appendEditingDependentGraphicModelEditRequest(parentGroup);\n\n  const parentEditRequest =\n    graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(parentGroup);\n\n  if (parentEditRequest !== undefined) {\n    const parentCurrentCoordInfo = parentEditRequest.getCurrentEditingCoordinateInfo();\n    const parentInitCoordInfo = parentEditRequest.getInitialCoordinateInfo();\n\n    parentCurrentCoordInfo.setGroupX(minX);\n    parentCurrentCoordInfo.setGroupY(minY);\n    parentCurrentCoordInfo.setGroupWidth(maxX - minX);\n    parentCurrentCoordInfo.setGroupHeight(maxY - minY);\n\n    parentCurrentCoordInfo.setWidth(\n      ((parentCurrentCoordInfo.getGroupWidth() ?? 1) * parentInitCoordInfo.getWidth()) /\n        (parentInitCoordInfo.getGroupWidth() ?? 1)\n    );\n    parentCurrentCoordInfo.setHeight(\n      ((parentCurrentCoordInfo.getGroupHeight() ?? 1) * parentInitCoordInfo.getHeight()) /\n        (parentInitCoordInfo.getGroupHeight() ?? 1)\n    );\n\n    const newGroupPosition = calculateNewGroupPosition(graphicEditInfoContainer, parentGroup);\n\n    parentCurrentCoordInfo.setX(newGroupPosition.x);\n    parentCurrentCoordInfo.setY(newGroupPosition.y);\n  }\n}\n\nfunction calculateNewGroupPosition(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel\n): IPoint {\n  const initialEditingCoordinateInfoList = collectParentGroupInitialEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const initialEditingAccumulatedTotalMatrix = getAccumulatedTransformMatrix([\n    getInitialEditingCoordinateInfo(graphicEditInfoContainer, graphicModel),\n    ...initialEditingCoordinateInfoList,\n  ]);\n\n  const currentEditingCoordinateInfoList = collectParentGroupCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const currentEditingCoordinateInfo = getCurrentEditingCoordinateInfo(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const currentEditingAccumulatedParentMatrix = getAccumulatedTransformMatrix(\n    currentEditingCoordinateInfoList\n  );\n  const currentEditingAccumulatedTotalMatrix = getAccumulatedTransformMatrix([\n    currentEditingCoordinateInfo,\n    ...currentEditingCoordinateInfoList,\n  ]);\n\n  const currentEditingDisplayedPosition = getCurrentEditingDisplayedPosition(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n  const currenEditingDisplayedtSize = getCurrentEditingDisplayedSize(\n    graphicEditInfoContainer,\n    graphicModel\n  );\n\n  const inverseOfCurrentEditingTranslateMatrix = math.inv(\n    math.matrix([\n      [1, 0, currentEditingDisplayedPosition.x],\n      [0, 1, currentEditingDisplayedPosition.y],\n      [0, 0, 1],\n    ])\n  );\n\n  // rfts 행렬을 풀면\n  // t X 나머지 행렬 꼴임\n  const currentEditingAccumulatedTotalMatrixWithoutTranslation = math.multiply(\n    inverseOfCurrentEditingTranslateMatrix,\n    currentEditingAccumulatedTotalMatrix\n  );\n\n  const newAccumulatedTranslationMatrix = math.multiply(\n    initialEditingAccumulatedTotalMatrix,\n    math.inv(currentEditingAccumulatedTotalMatrixWithoutTranslation)\n  );\n\n  const newAccumulatedCenterMatrix = math.matrix([\n    [\n      1,\n      0,\n      Number(newAccumulatedTranslationMatrix.get([0, 2])) + currenEditingDisplayedtSize.width / 2,\n    ],\n    [\n      0,\n      1,\n      Number(newAccumulatedTranslationMatrix.get([1, 2])) + currenEditingDisplayedtSize.height / 2,\n    ],\n    [0, 0, 1],\n  ]);\n\n  const newCenterMatrix = math.multiply(\n    math.inv(currentEditingAccumulatedParentMatrix),\n    newAccumulatedCenterMatrix\n  );\n\n  return {\n    x: Number(newCenterMatrix.get([0, 2]) - currentEditingCoordinateInfo.getWidth() / 2),\n    y: Number(newCenterMatrix.get([1, 2]) - currentEditingCoordinateInfo.getHeight() / 2),\n  };\n}\n","/**\n * store 를 제어하는 가장 작은 단위입니다.\n * 여러 simple command 가 모여 하나의 동작이 되며, undo/redo 가 가능합니다.\n */\nabstract class SimpleCommand {\n  /**\n   * Simple command 의 do 동작입니다.\n   */\n  public abstract apply(): void;\n\n  /**\n   * Simple command 의 undo 동작입니다.\n   */\n  public abstract unapply(): void;\n\n  /**\n   * Simple command 의 redo 동작입니다.\n   */\n  public abstract reapply(): void;\n}\n\nexport default SimpleCommand;\n","import { boundMethod } from 'autobind-decorator';\nimport SimpleCommand from '../../SimpleCommand';\n\nclass SetGraphicAttributeCommand<M, V> extends SimpleCommand {\n  private targetModel: M;\n\n  private oldValue: V;\n\n  private newValue: V;\n\n  private setterFunction: (value: V) => void;\n\n  public constructor(targetModel: M, oldValue: V, newValue: V, setterFunction: (prop: V) => void) {\n    super();\n    this.targetModel = targetModel;\n    this.oldValue = oldValue;\n    this.newValue = newValue;\n    this.setterFunction = setterFunction;\n  }\n\n  @boundMethod\n  public apply(): void {\n    this.setterFunction(this.newValue);\n  }\n\n  @boundMethod\n  public unapply(): void {\n    this.setterFunction(this.oldValue);\n  }\n\n  @boundMethod\n  public override reapply(): void {\n    this.apply();\n  }\n}\n\nexport default SetGraphicAttributeCommand;\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport SimpleCommand from '../SimpleCommand';\n\nexport default class AppendTreeNodeCommand extends SimpleCommand {\n  private target: TreeNode;\n\n  private parent: TreeNode;\n\n  private nextSibling?: TreeNode;\n\n  public constructor(target: TreeNode, parent: TreeNode, nextSibling?: TreeNode) {\n    super();\n    this.target = target;\n    this.parent = parent;\n    this.nextSibling = nextSibling;\n  }\n\n  @boundMethod\n  public apply(): void {\n    this.target.append(this.parent, this.nextSibling);\n  }\n\n  @boundMethod\n  public unapply(): void {\n    this.target.remove(this.parent);\n  }\n\n  @boundMethod\n  public reapply(): void {\n    this.apply();\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport AppContext from 'store/context/AppContext';\nimport SimpleCommand from '../SimpleCommand';\n\nclass RequestRerenderTreeNodeComponentCommand extends SimpleCommand {\n  private ctx: AppContext;\n\n  private targetModel: TreeNode;\n\n  private onApply: boolean;\n\n  private onUnapply: boolean;\n\n  public constructor(ctx: AppContext, targetModel: TreeNode, onApply: boolean, onUnapply: boolean) {\n    super();\n    this.ctx = ctx;\n    this.targetModel = targetModel;\n    this.onApply = onApply;\n    this.onUnapply = onUnapply;\n  }\n\n  @boundMethod\n  public apply(): void {\n    if (this.onApply === true) {\n      this.targetModel.requestRerender(this.ctx);\n    }\n  }\n\n  @boundMethod\n  public unapply(): void {\n    if (this.onUnapply === true) {\n      this.targetModel.requestRerender(this.ctx);\n    }\n  }\n\n  @boundMethod\n  public override reapply(): void {\n    this.apply();\n  }\n}\n\nexport default RequestRerenderTreeNodeComponentCommand;\n","import * as math from 'mathjs';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport GraphicModelEditRequest from 'store/container/edit/GraphicModelEditRequest';\nimport AppContext from 'store/context/AppContext';\nimport CommandHandler from 'store/manager/command/commandhandler/CommandHandler';\nimport { ICommandHandlerResponse } from 'types/store/command/CommandTypes';\nimport CoordinateInfo from 'model/node/graphic/info/CoordinateInfo';\nimport { IPoint, ISize } from 'types/common/geometry/GeometryTypes';\nimport { isWHSwitched } from 'util/coordinate/CoordinateUtil';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\nimport { createGraphicModelForInsertCommand } from 'util/node/graphic/GraphicModelCreateUtil';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport {\n  clearGraphicEditContext,\n  updateNewSelectionContainer,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport { getRootGroup, isGroup } from 'util/node/graphic/GraphicModelTreeNodeUtil';\nimport { getAccumulatedTransformMatrix } from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\nimport SetGraphicAttributeCommand from '../../simplecommand/node/graphic/SetGraphicAttributeCommand';\nimport AppendTreeNodeCommand from '../../simplecommand/node/AppendTreeNodeCommand';\nimport RequestRerenderTreeNodeComponentCommand from '../../simplecommand/rerender/RequestRerenderTreeNodeComponentCommand';\n\ninterface IGraphicInsertSetUpCommandProps {\n  commandId: CommandEnum.GRAPHIC_INSERT_SET_UP;\n  shapeType: ShapeTypeEnum;\n}\n\ninterface IGraphicInsertDefaultCommandProps {\n  commandId:\n    | CommandEnum.GRAPHIC_INSERT\n    | CommandEnum.GRAPHIC_INSERT_DUPLICATE // CTRL + MOVE\n    | CommandEnum.GRAPHIC_INSERT_ABORT;\n}\n\ntype GraphicInsertCommandProps =\n  | IGraphicInsertSetUpCommandProps\n  | IGraphicInsertDefaultCommandProps;\n\n/**\n * graphic model을 삽입하는 동작을 수행하는 command handler입니다.\n */\nexport default class GraphicInsertCommandHandler extends CommandHandler {\n  /**\n   * 실제 command handler내부에서 동작을 수행하는 부분입니다.\n   *\n   * @param props command 를 수행하는 데 필요한 정보를 담고 있는 CommandProps\n   * @param ctx 현재 app의 상태를 담고있는 AppContext\n   * @returns command 수행 결과에 따른 CommandHandlerResponse\n   */\n  public processCommand(\n    ctx: AppContext,\n    commandProps: GraphicInsertCommandProps\n  ): ICommandHandlerResponse {\n    switch (commandProps.commandId) {\n      case CommandEnum.GRAPHIC_INSERT_SET_UP: {\n        this.setUpGraphicModelInsertContext(ctx, commandProps as IGraphicInsertSetUpCommandProps);\n        break;\n      }\n      case CommandEnum.GRAPHIC_INSERT: {\n        this.insertGraphicModel(ctx, commandProps);\n        break;\n      }\n      case CommandEnum.GRAPHIC_INSERT_DUPLICATE: {\n        this.insertGraphicModelByDuplicate(ctx, commandProps);\n        break;\n      }\n      case CommandEnum.GRAPHIC_INSERT_ABORT: {\n        this.clearGraphicModelInsertContext(ctx);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return { isValid: true, terminate: true };\n  }\n\n  private setUpGraphicModelInsertContext(\n    ctx: AppContext,\n    commandProps: IGraphicInsertSetUpCommandProps\n  ): void {\n    const graphicModel = createGraphicModelForInsertCommand(commandProps.shapeType);\n\n    this.clearGraphicModelInsertContext(ctx);\n\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    editableContext.setEventState(EventStateEnum.GRAPHIC_INSERT);\n\n    graphicEditInfoContainer.setEventTargetGraphicModel(graphicModel);\n    graphicEditInfoContainer.appendEditPreviewLayerGraphicModel(graphicModel);\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.READY);\n\n    ctx\n      .getEditableContext()\n      .getProxyLayerInfoContainer()\n      .enableEditViewProxyLayer(graphicModel, { cursorType: 'crosshair' }, true);\n  }\n\n  private insertGraphicModel(ctx: AppContext, prop: IGraphicInsertDefaultCommandProps): void {\n    const editableContext = ctx.getEditableContext();\n    const parentModel = editableContext.getTreeNodeRoot();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const commandController = editableContext.getCommandController();\n\n    const graphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (graphicModel !== undefined && commandController !== undefined) {\n      commandController?.appendSimpleCommand(new AppendTreeNodeCommand(graphicModel, parentModel));\n      commandController?.appendPostSimpleCommand(\n        new RequestRerenderTreeNodeComponentCommand(ctx, parentModel, true, true)\n      );\n\n      updateNewSelectionContainer(ctx, [graphicModel]);\n    }\n\n    this.clearGraphicModelInsertContext(ctx);\n  }\n\n  private insertGraphicModelByDuplicate(\n    ctx: AppContext,\n    prop: IGraphicInsertDefaultCommandProps\n  ): void {\n    const editableContext = ctx.getEditableContext();\n    const treeNodeRoot = editableContext.getTreeNodeRoot();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(false);\n    const editingGraphicModels = graphicEditInfoContainer.getEditingGraphicModelList();\n\n    const commandController = editableContext.getCommandController();\n\n    if (commandController !== undefined) {\n      editingGraphicModels.forEach(newShapeModel => {\n        const graphicModelEditRequest =\n          graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(newShapeModel);\n\n        if (graphicModelEditRequest !== undefined) {\n          const coordinateInfo = newShapeModel.getCoordinateInfo();\n\n          const currentEditingCoordinateInfo =\n            graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n          coordinateInfo.setX(currentEditingCoordinateInfo.getX());\n          coordinateInfo.setY(currentEditingCoordinateInfo.getY());\n\n          commandController.appendSimpleCommand(\n            new AppendTreeNodeCommand(newShapeModel, newShapeModel.getParent() ?? treeNodeRoot)\n          );\n        }\n      });\n      commandController.preExecuteCommand();\n\n      this.updateParentGroupCoordinate(ctx, graphicEditInfoContainer);\n\n      updateNewSelectionContainer(ctx, editingGraphicModels);\n    }\n\n    this.clearGraphicModelInsertContext(ctx);\n  }\n\n  private updateParentGroupCoordinate(\n    ctx: AppContext,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): void {\n    const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n    const editRequestMap = graphicEditInfoContainer.getEditingDependentGraphicModelEditRequestMap();\n\n    const rootGroupSet = new Set<GraphicModel>();\n\n    editingGraphicModelList.forEach(graphicModel => {\n      const rootGroup = getRootGroup(graphicModel);\n      if (rootGroup) rootGroupSet.add(rootGroup);\n    });\n\n    rootGroupSet.forEach(rootGroup => {\n      this.updateGroupCoordinate(rootGroup, editingGraphicModelList, editRequestMap);\n    });\n\n    this.applyEditRequest(ctx, editRequestMap);\n  }\n\n  private getChildGraphicModelList(\n    parentGroup: GraphicModel,\n    targetGraphicModels: GraphicModel[]\n  ): GraphicModel[] {\n    const childGraphicModelList = new Array<GraphicModel>();\n\n    targetGraphicModels.forEach(targetModel => {\n      if (targetModel.getParent() === parentGroup) {\n        childGraphicModelList.push(targetModel);\n      }\n    });\n\n    parentGroup.forEachChild(child => {\n      if (isGraphicModel(child)) {\n        childGraphicModelList.push(child);\n      }\n    });\n\n    return childGraphicModelList;\n  }\n\n  private updateGroupCoordinate(\n    parentGroup: GraphicModel,\n    targetGraphicModels: GraphicModel[],\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ): void {\n    const childGraphicModelList = this.getChildGraphicModelList(parentGroup, targetGraphicModels);\n    childGraphicModelList.forEach(graphicModel => {\n      if (isGroup(graphicModel) === true) {\n        this.updateGroupCoordinate(graphicModel, targetGraphicModels, editRequestMap);\n      }\n    });\n\n    if (isGroup(parentGroup) === true) {\n      this.updateGroupCoordinateCore(parentGroup, childGraphicModelList, editRequestMap);\n    }\n  }\n\n  private updateGroupCoordinateCore(\n    parentGroup: GraphicModel,\n    childGraphicModelList: GraphicModel[],\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ): void {\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    childGraphicModelList.forEach(graphicModel => {\n      const coordinateInfo =\n        editRequestMap.get(graphicModel)?.getCurrentEditingCoordinateInfo() ??\n        graphicModel.getCoordinateInfo();\n\n      const x = coordinateInfo.getX();\n      const y = coordinateInfo.getY();\n      const width = coordinateInfo.getWidth();\n      const height = coordinateInfo.getHeight();\n\n      const rotationDegree = coordinateInfo.getRotation();\n\n      let childMinX: number;\n      let childMinY: number;\n      let childMaxX: number;\n      let childMaxY: number;\n\n      if (isWHSwitched(rotationDegree) === true) {\n        const childCenterX = x + width / 2;\n        const childCenterY = y + height / 2;\n\n        childMinX = childCenterX - height / 2;\n        childMinY = childCenterY - width / 2;\n        childMaxX = childCenterX + height / 2;\n        childMaxY = childCenterY + width / 2;\n      } else {\n        childMinX = x;\n        childMinY = y;\n        childMaxX = x + width;\n        childMaxY = y + height;\n      }\n\n      minX = Math.min(minX, childMinX);\n      minY = Math.min(minY, childMinY);\n      maxX = Math.max(maxX, childMaxX);\n      maxY = Math.max(maxY, childMaxY);\n    });\n\n    const editRequest = editRequestMap.get(parentGroup) ?? new GraphicModelEditRequest(parentGroup);\n\n    if (editRequestMap.has(parentGroup) === false) {\n      editRequestMap.set(parentGroup, editRequest);\n    }\n\n    const coordinateInfo = editRequest.getCurrentEditingCoordinateInfo();\n    const newGroupX = minX;\n    const newGroupY = minY;\n    const newGroupW = maxX - minX;\n    const newGroupH = maxY - minY;\n    const newW = (newGroupW * coordinateInfo.getWidth()) / (coordinateInfo.getGroupWidth() ?? 1);\n    const newH = (newGroupH * coordinateInfo.getHeight()) / (coordinateInfo.getGroupHeight() ?? 1);\n\n    const tmpCoordinateInfo = new CoordinateInfo();\n\n    tmpCoordinateInfo.setX(coordinateInfo.getX());\n    tmpCoordinateInfo.setY(coordinateInfo.getY());\n    tmpCoordinateInfo.setWidth(newW);\n    tmpCoordinateInfo.setHeight(newH);\n\n    tmpCoordinateInfo.setFlipH(coordinateInfo.getFlipH());\n    tmpCoordinateInfo.setFlipV(coordinateInfo.getFlipV());\n    tmpCoordinateInfo.setRotation(coordinateInfo.getRotation());\n\n    tmpCoordinateInfo.setGroupX(newGroupX);\n    tmpCoordinateInfo.setGroupY(newGroupY);\n    tmpCoordinateInfo.setGroupWidth(newGroupW);\n    tmpCoordinateInfo.setGroupHeight(newGroupH);\n\n    const newGroupPosition = this.getNewGroupPosition(\n      parentGroup,\n      tmpCoordinateInfo,\n      editRequestMap\n    );\n\n    coordinateInfo.setX(newGroupPosition.x);\n    coordinateInfo.setY(newGroupPosition.y);\n    coordinateInfo.setWidth(newW);\n    coordinateInfo.setHeight(newH);\n\n    coordinateInfo.setGroupX(newGroupX);\n    coordinateInfo.setGroupY(newGroupY);\n    coordinateInfo.setGroupWidth(newGroupW);\n    coordinateInfo.setGroupHeight(newGroupH);\n  }\n\n  private getNewGroupPosition(\n    targetGroup: GraphicModel,\n    tmpCoordinateInfo: CoordinateInfo,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ): { x: number; y: number } {\n    const targetGroupEditRequest =\n      editRequestMap.get(targetGroup) ?? new GraphicModelEditRequest(targetGroup);\n\n    if (editRequestMap.has(targetGroup) === false) {\n      editRequestMap.set(targetGroup, targetGroupEditRequest);\n    }\n\n    const currentEditingCoordinateInfoList = this.getParentCoordinateInfoList(\n      targetGroup,\n      editRequestMap\n    );\n    const currentEditingCoordinateInfo = targetGroupEditRequest.getCurrentEditingCoordinateInfo();\n\n    const initialEditingAccumulatedTotalMatrix = getAccumulatedTransformMatrix([\n      currentEditingCoordinateInfo,\n      ...currentEditingCoordinateInfoList,\n    ]);\n\n    const currentEditingAccumulatedParentMatrix = getAccumulatedTransformMatrix(\n      currentEditingCoordinateInfoList\n    );\n    const currentEditingAccumulatedTotalMatrix = getAccumulatedTransformMatrix([\n      tmpCoordinateInfo,\n      ...currentEditingCoordinateInfoList,\n    ]);\n\n    const { currentPosition, currentSize } = this.getCurrentTransform(\n      tmpCoordinateInfo,\n      currentEditingCoordinateInfoList,\n      currentEditingAccumulatedParentMatrix\n    );\n\n    const inverseOfCurrentEditingTranslateMatrix = math.inv(\n      math.matrix([\n        [1, 0, currentPosition.x],\n        [0, 1, currentPosition.y],\n        [0, 0, 1],\n      ])\n    );\n\n    // rfts 행렬을 풀면\n    // t X 나머지 행렬 꼴임\n    const currentEditingAccumulatedTotalMatrixWithoutTranslation = math.multiply(\n      inverseOfCurrentEditingTranslateMatrix,\n      currentEditingAccumulatedTotalMatrix\n    );\n    const newAccumulatedTranslationMatrix = math.multiply(\n      initialEditingAccumulatedTotalMatrix,\n      math.inv(currentEditingAccumulatedTotalMatrixWithoutTranslation)\n    );\n    const newAccumulatedCenterMatrix = math.matrix([\n      [1, 0, Number(newAccumulatedTranslationMatrix.get([0, 2])) + currentSize.width / 2],\n      [0, 1, Number(newAccumulatedTranslationMatrix.get([1, 2])) + currentSize.height / 2],\n      [0, 0, 1],\n    ]);\n    const newCenterMatrix = math.multiply(\n      math.inv(currentEditingAccumulatedParentMatrix),\n      newAccumulatedCenterMatrix\n    );\n\n    return {\n      x: Number(newCenterMatrix.get([0, 2]) - tmpCoordinateInfo.getWidth() / 2),\n      y: Number(newCenterMatrix.get([1, 2]) - tmpCoordinateInfo.getHeight() / 2),\n    };\n  }\n\n  private getParentCoordinateInfoList(\n    graphicModel: GraphicModel,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ): CoordinateInfo[] {\n    const currentEditingCoordinateInfoList = new Array<CoordinateInfo>();\n\n    let tmpParent = graphicModel.getParent();\n\n    while (isGraphicModel(tmpParent) && isGroup(tmpParent) === true) {\n      const parentGraphicModel = tmpParent as GraphicModel;\n      const editRequest = editRequestMap.get(parentGraphicModel);\n\n      currentEditingCoordinateInfoList.push(\n        editRequest?.getCurrentEditingCoordinateInfo() ?? parentGraphicModel.getCoordinateInfo()\n      );\n\n      tmpParent = tmpParent.getParent();\n    }\n\n    return currentEditingCoordinateInfoList;\n  }\n\n  private getCurrentTransform(\n    targetCoordinateInfo: CoordinateInfo,\n    parentCoordinateInfoList: CoordinateInfo[],\n    parentAccumulatedMatrix: math.Matrix\n  ): { currentPosition: IPoint; currentSize: ISize } {\n    const currentSize = {\n      width: targetCoordinateInfo.getWidth(),\n      height: targetCoordinateInfo.getHeight(),\n    };\n\n    let accumulatedRotation = targetCoordinateInfo.getRotation();\n\n    parentCoordinateInfoList.forEach(coordinateInfo => {\n      const groupWidth = coordinateInfo.getGroupWidth();\n      const groupHeight = coordinateInfo.getGroupHeight();\n      const widthRatio = groupWidth ? coordinateInfo.getWidth() / groupWidth : 1;\n      const heightRatio = groupHeight ? coordinateInfo.getHeight() / groupHeight : 1;\n\n      if (isWHSwitched(accumulatedRotation) === true) {\n        currentSize.width *= heightRatio;\n        currentSize.height *= widthRatio;\n      } else {\n        currentSize.width *= widthRatio;\n        currentSize.height *= heightRatio;\n      }\n\n      const parentFlipH = coordinateInfo.getFlipH();\n      const parentFlipV = coordinateInfo.getFlipV();\n\n      if (parentFlipH !== parentFlipV) {\n        accumulatedRotation = 360 - accumulatedRotation;\n      }\n\n      accumulatedRotation += coordinateInfo.getRotation();\n    });\n\n    const centerPointMatrix = math.matrix([\n      [1, 0, targetCoordinateInfo.getX() + targetCoordinateInfo.getWidth() / 2],\n      [0, 1, targetCoordinateInfo.getY() + targetCoordinateInfo.getHeight() / 2],\n      [0, 0, 1],\n    ]);\n\n    const currentCenterPointMatrix = math.multiply(parentAccumulatedMatrix, centerPointMatrix);\n\n    return {\n      currentPosition: {\n        x: Number(currentCenterPointMatrix.get([0, 2])) - currentSize.width / 2,\n        y: Number(currentCenterPointMatrix.get([1, 2])) - currentSize.height / 2,\n      },\n      currentSize,\n    };\n  }\n\n  private applyEditRequest(\n    ctx: AppContext,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    editRequestMap.forEach((editRequest, graphicModel) => {\n      const oldCoordinateInfo = graphicModel.getCoordinateInfo();\n      const newCoordinateInfo = editRequest.getCurrentEditingCoordinateInfo().clone();\n\n      const command = new SetGraphicAttributeCommand(\n        graphicModel,\n        oldCoordinateInfo,\n        newCoordinateInfo,\n        graphicModel.setCoordinateInfo\n      );\n      ctx.getEditableContext().getCommandController()?.appendSimpleCommand(command);\n    });\n  }\n\n  private clearGraphicModelInsertContext(ctx: AppContext): void {\n    clearGraphicEditContext(ctx);\n  }\n}\n","import GraphicModel from 'model/node/graphic/GraphicModel';\nimport FillInfo from 'model/node/graphic/info/FillInfo';\nimport PathBuilderFactory from 'model/node/graphic/info/path/PathBuilderFactory';\nimport PathInfo from 'model/node/graphic/info/PathInfo';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\nimport IdGenerator from 'util/id/IdGenerator';\nimport StrokeInfo from 'model/node/graphic/info/StrokeInfo';\nimport { GraphicTypeEnum } from 'types/model/node/graphic/GraphicTypeEnum';\nimport { createDefaultFill, createDefaultStrokeFill } from './style/FillStyleUtil';\n\nexport function createGraphicModelForInsertCommand(shapeType: ShapeTypeEnum): GraphicModel {\n  const graphicModel = new GraphicModel(IdGenerator.generateId());\n\n  const pathInfo = new PathInfo();\n  pathInfo.setPrstGeom({ shapeType });\n  pathInfo.setPathBuilder(PathBuilderFactory.createPathBuilder(shapeType));\n  graphicModel.setPathInfo(pathInfo);\n\n  const fillInfo = new FillInfo();\n  fillInfo.setFill(createDefaultFill());\n  graphicModel.setFillInfo(fillInfo);\n\n  const strokeInfo = new StrokeInfo();\n  strokeInfo.setFill(createDefaultStrokeFill());\n  strokeInfo.setWidth(3);\n  graphicModel.setStrokeInfo(strokeInfo);\n\n  const coordinateInfo = graphicModel.getCoordinateInfo();\n\n  coordinateInfo.setWidth(100);\n  coordinateInfo.setHeight(100);\n\n  graphicModel.setIsBeingEdited(true);\n\n  return graphicModel;\n}\n\nexport function createGraphicModelForGroupObject(): GraphicModel {\n  const graphicModel = new GraphicModel(IdGenerator.generateId());\n  graphicModel.setGraphicType(GraphicTypeEnum.GROUP);\n\n  return graphicModel;\n}\n","import Color from 'model/color/Color';\nimport FillBase from 'model/node/graphic/info/fill/FillBase';\nimport SolidFill from 'model/node/graphic/info/fill/SolidFill';\nimport { ColorType } from 'types/model/color/ColorTypes';\n\n/**\n * 도형의 기본 채우기 fill을 생성합니다.\n *\n * @returns 도형의 기본 채우기 fill\n */\nexport function createDefaultFill(): FillBase {\n  const color = new Color(ColorType.PRESET, 'dodgerblue');\n  return new SolidFill(color);\n}\n\n/**\n * 도형의 기본 윤곽선 fill을 생성합니다.ㅣ\n *\n * @returns 도형의 기본 윤곽선 fill\n */\nexport function createDefaultStrokeFill(): FillBase {\n  const color = new Color(ColorType.PRESET, 'darkslateblue');\n  return new SolidFill(color);\n}\n","import { boundMethod } from 'autobind-decorator';\nimport CommandHandler from 'store/manager/command/commandhandler/CommandHandler';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { CommandCreatorMapType, CommandMapType } from 'types/store/command/CommandTypes';\n\n/**\n * CommandMapper는 commandId 에 따라 어떤 CommandHandler 들이 동작하는지를 정의합니다.\n * CommandManager가 commandId 를 받으면 CommandMapper 에서 CommandHandler의 list 받아 실행합니다.\n */\nexport default abstract class CommandMapper {\n  /**\n   * CommandMap을 반환합니다.\n   */\n  protected abstract getCommandMap(): CommandMapType;\n\n  /**\n   * CommandCreatorMap을 반환합니다.\n   */\n  protected abstract getCommandCreatorMap(): CommandCreatorMapType;\n\n  /**\n   * commandId 에 따른 CommandHandler의 list 를 반환합니다.\n   * list 가 구성되어 있지 않은 경우 CommandCreatorMap을 이용하여 동적으로 생성 후 반환합니다.\n   *\n   * @param commandId CommandHandler의 list 를 찾기 위한 key\n   * @returns commandId 해당하는 CommandHandler의 list\n   */\n  @boundMethod\n  public get(commandId: CommandEnum): Nullable<CommandHandler[]> {\n    if (this.getCommandMap().has(commandId) === false) {\n      this.getCommandCreatorMap().get(commandId)?.();\n    }\n\n    return this.getCommandMap().get(commandId);\n  }\n}\n","import { CommandEnum } from 'types/store/command/CommandEnum';\nimport AppContext from 'store/context/AppContext';\nimport { ICommandHandlerResponse } from 'types/store/command/CommandTypes';\nimport { boundMethod } from 'autobind-decorator';\nimport {\n  clearGraphicEditContext,\n  updateNewSelectionContainer,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport CommandHandler from '../CommandHandler';\nimport SetGraphicAttributeCommand from '../../simplecommand/node/graphic/SetGraphicAttributeCommand';\nimport RequestRerenderTreeNodeComponentCommand from '../../simplecommand/rerender/RequestRerenderTreeNodeComponentCommand';\n\ninterface IGraphicMoveCommandProps {\n  commandId: CommandEnum.GRAPHIC_MOVE | CommandEnum.GRAPHIC_MOVE_ABORT;\n}\n\nexport default class GraphicMoveCommandHandler extends CommandHandler {\n  public processCommand(\n    ctx: AppContext,\n    commandProps: IGraphicMoveCommandProps\n  ): ICommandHandlerResponse {\n    switch (commandProps.commandId) {\n      case CommandEnum.GRAPHIC_MOVE: {\n        this.moveGraphicModelByEditContext(ctx, commandProps);\n        break;\n      }\n      case CommandEnum.GRAPHIC_MOVE_ABORT: {\n        this.clearGraphicModelEditContext(ctx);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return { isValid: true, terminate: true };\n  }\n\n  @boundMethod\n  private moveGraphicModelByEditContext(\n    ctx: AppContext,\n    commandProps: IGraphicMoveCommandProps\n  ): void {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const commandController = editableContext.getCommandController();\n\n    if (commandController !== undefined) {\n      graphicEditInfoContainer\n        .getEditingDependentGraphicModelEditRequestMap()\n        .forEach(graphicModelEditRequest => {\n          const graphicModel = graphicModelEditRequest.getGraphicModel();\n\n          const currentEditingCoordinateInfo =\n            graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n\n          const oldCoordinateInfo = graphicModel.getCoordinateInfo();\n          const newCoordinateInfo = currentEditingCoordinateInfo.clone();\n\n          const setCoordinateInfoCommand = new SetGraphicAttributeCommand(\n            graphicModel,\n            oldCoordinateInfo,\n            newCoordinateInfo,\n            graphicModel.setCoordinateInfo\n          );\n          commandController.appendSimpleCommand(setCoordinateInfoCommand);\n\n          const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n            ctx,\n            graphicModel,\n            true,\n            true\n          );\n          commandController.appendPostSimpleCommand(requestRerenderCommand);\n        });\n\n      const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n      updateNewSelectionContainer(ctx, editingGraphicModelList);\n    }\n\n    this.clearGraphicModelEditContext(ctx);\n  }\n\n  @boundMethod\n  private clearGraphicModelEditContext(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    graphicEditInfoContainer.getEditingGraphicModelList().forEach(graphicModel => {\n      graphicModel.requestRerender(ctx);\n    });\n    clearGraphicEditContext(ctx);\n  }\n}\n","import { CommandEnum } from 'types/store/command/CommandEnum';\nimport AppContext from 'store/context/AppContext';\nimport { ICommandHandlerResponse } from 'types/store/command/CommandTypes';\nimport { boundMethod } from 'autobind-decorator';\nimport {\n  clearGraphicEditContext,\n  updateNewSelectionContainer,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport CommandHandler from '../CommandHandler';\nimport SetGraphicAttributeCommand from '../../simplecommand/node/graphic/SetGraphicAttributeCommand';\nimport RequestRerenderTreeNodeComponentCommand from '../../simplecommand/rerender/RequestRerenderTreeNodeComponentCommand';\n\nexport interface IGraphicRotateCommandProps {\n  commandId: CommandEnum.GRAPHIC_ROTATE | CommandEnum.GRAPHIC_ROTATE_ABORT;\n}\n\nexport default class GraphicRotateCommandHandler extends CommandHandler {\n  public override processCommand(\n    ctx: AppContext,\n    commandProps: IGraphicRotateCommandProps\n  ): ICommandHandlerResponse {\n    switch (commandProps.commandId) {\n      case CommandEnum.GRAPHIC_ROTATE: {\n        this.rotateGraphicModelByEditContext(ctx);\n        break;\n      }\n      case CommandEnum.GRAPHIC_ROTATE_ABORT: {\n        this.clearGraphicModelEditContext(ctx);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return { isValid: true, terminate: true };\n  }\n\n  @boundMethod\n  private rotateGraphicModelByEditContext(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const commandController = editableContext.getCommandController();\n\n    if (commandController !== undefined) {\n      graphicEditInfoContainer\n        .getEditingDependentGraphicModelEditRequestMap()\n        .forEach(graphicModelEditRequest => {\n          const graphicModel = graphicModelEditRequest.getGraphicModel();\n\n          const currentEditingCoordinateInfo =\n            graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n\n          const oldCoordinateInfo = graphicModel.getCoordinateInfo();\n          const newCoordinateInfo = currentEditingCoordinateInfo.clone();\n\n          const setCoordinateInfoCommand = new SetGraphicAttributeCommand(\n            graphicModel,\n            oldCoordinateInfo,\n            newCoordinateInfo,\n            graphicModel.setCoordinateInfo\n          );\n          commandController.appendSimpleCommand(setCoordinateInfoCommand);\n\n          const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n            ctx,\n            graphicModel,\n            true,\n            true\n          );\n          commandController.appendPostSimpleCommand(requestRerenderCommand);\n        });\n\n      const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n      updateNewSelectionContainer(ctx, editingGraphicModelList);\n    }\n\n    this.clearGraphicModelEditContext(ctx);\n  }\n\n  @boundMethod\n  private clearGraphicModelEditContext(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    graphicEditInfoContainer.getEditingGraphicModelList().forEach(graphicModel => {\n      graphicModel.requestRerender(ctx);\n    });\n    clearGraphicEditContext(ctx);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { ICommandHandlerResponse } from 'types/store/command/CommandTypes';\nimport AppContext from 'store/context/AppContext';\nimport {\n  clearGraphicEditContext,\n  updateNewSelectionContainer,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport CommandHandler from '../CommandHandler';\nimport SetGraphicAttributeCommand from '../../simplecommand/node/graphic/SetGraphicAttributeCommand';\nimport RequestRerenderTreeNodeComponentCommand from '../../simplecommand/rerender/RequestRerenderTreeNodeComponentCommand';\n\ninterface IGraphicResizeCommandProps {\n  commandId: CommandEnum.GRAPHIC_RESIZE | CommandEnum.GRAPHIC_RESIZE_ABORT;\n}\n\nexport default class GraphicResizeCommandHandler extends CommandHandler {\n  public override processCommand(\n    ctx: AppContext,\n    commandProps: IGraphicResizeCommandProps\n  ): ICommandHandlerResponse {\n    switch (commandProps.commandId) {\n      case CommandEnum.GRAPHIC_RESIZE: {\n        this.resizeGraphicModelByEditContext(ctx);\n        break;\n      }\n      case CommandEnum.GRAPHIC_RESIZE_ABORT: {\n        this.clearGraphicModelEditContext(ctx);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    return { isValid: true, terminate: true };\n  }\n\n  @boundMethod\n  private resizeGraphicModelByEditContext(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const commandController = editableContext.getCommandController();\n\n    if (commandController !== undefined) {\n      graphicEditInfoContainer\n        .getEditingDependentGraphicModelEditRequestMap()\n        .forEach(graphicModelEditRequest => {\n          const graphicModel = graphicModelEditRequest.getGraphicModel();\n\n          const currentEditingCoordinateInfo =\n            graphicModelEditRequest.getCurrentEditingCoordinateInfo();\n\n          const oldCoordinateInfo = graphicModel.getCoordinateInfo();\n          const newCoordinateInfo = currentEditingCoordinateInfo.clone();\n\n          const setCoordinateInfoCommand = new SetGraphicAttributeCommand(\n            graphicModel,\n            oldCoordinateInfo,\n            newCoordinateInfo,\n            graphicModel.setCoordinateInfo\n          );\n          commandController.appendSimpleCommand(setCoordinateInfoCommand);\n\n          const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n            ctx,\n            graphicModel,\n            true,\n            true\n          );\n          commandController.appendPostSimpleCommand(requestRerenderCommand);\n        });\n\n      const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n      updateNewSelectionContainer(ctx, editingGraphicModelList);\n    }\n\n    this.clearGraphicModelEditContext(ctx);\n  }\n\n  @boundMethod\n  private clearGraphicModelEditContext(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    graphicEditInfoContainer.getEditingGraphicModelList().forEach(graphicModel => {\n      graphicModel.requestRerender(ctx);\n    });\n    clearGraphicEditContext(ctx);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport SimpleCommand from '../SimpleCommand';\n\nexport default class RemoveTreeNodeCommand extends SimpleCommand {\n  private target: TreeNode;\n\n  private parent: Nullable<TreeNode>;\n\n  private nextSibling: Nullable<TreeNode>;\n\n  public constructor(target: TreeNode) {\n    super();\n    this.target = target;\n    this.parent = undefined;\n    this.nextSibling = undefined;\n  }\n\n  @boundMethod\n  public apply(): void {\n    if (this.parent === undefined) {\n      this.parent = this.target.getParent();\n      this.nextSibling = this.target.getNextSibling();\n    }\n    this.removeTreeNode();\n  }\n\n  @boundMethod\n  public unapply(): void {\n    if (this.parent !== undefined) {\n      this.target.append(this.parent, this.nextSibling);\n    }\n  }\n\n  @boundMethod\n  public reapply(): void {\n    this.removeTreeNode();\n  }\n\n  @boundMethod\n  private removeTreeNode(): void {\n    if (this.parent !== undefined) {\n      this.target.remove(this.parent);\n    }\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport SimpleCommand from '../SimpleCommand';\n\nexport default class MoveTreeNodeCommand extends SimpleCommand {\n  private target: TreeNode;\n\n  private oldParent?: TreeNode;\n\n  private oldNextSibling?: TreeNode;\n\n  private newParent: TreeNode;\n\n  private newNextSibling?: TreeNode;\n\n  public constructor(target: TreeNode, newParent: TreeNode, newNextSibling?: TreeNode) {\n    super();\n    this.target = target;\n    this.newParent = newParent;\n    this.newNextSibling = newNextSibling;\n  }\n\n  @boundMethod\n  public apply(): void {\n    this.oldParent = this.target.getParent();\n    this.oldNextSibling = this.target.getNextSibling();\n\n    if (this.oldParent !== undefined) {\n      this.target.remove(this.oldParent);\n    }\n\n    this.target.append(this.newParent, this.newNextSibling);\n  }\n\n  @boundMethod\n  public unapply(): void {\n    this.target.remove(this.newParent);\n\n    if (this.oldParent !== undefined) {\n      this.target.append(this.oldParent, this.oldNextSibling);\n    }\n  }\n\n  @boundMethod\n  public reapply(): void {\n    if (this.oldParent !== undefined) {\n      this.target.remove(this.oldParent);\n    }\n\n    this.target.append(this.newParent, this.newNextSibling);\n  }\n}\n","import * as math from 'mathjs';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport AppContext from 'store/context/AppContext';\nimport { ICommandHandlerResponse } from 'types/store/command/CommandTypes';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { updateNewSelectionContainer } from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport { getRootGroup, isGroup, isGroupChild } from 'util/node/graphic/GraphicModelTreeNodeUtil';\nimport TreeNode from 'model/node/TreeNode';\nimport GraphicModelEditRequest from 'store/container/edit/GraphicModelEditRequest';\nimport { isWHSwitched } from 'util/coordinate/CoordinateUtil';\nimport CoordinateInfo from 'model/node/graphic/info/CoordinateInfo';\nimport {\n  getAccumulatedTransformMatrix,\n  getNoneEditingDisplayedCenterCoordinate,\n  getNoneEditingDisplayedFlipH,\n  getNoneEditingDisplayedFlipV,\n  getNoneEditingDisplayedPosition,\n  getNoneEditingDisplayedRotation,\n  getNoneEditingDisplayedSize,\n  getTransformMatrix,\n} from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\nimport CommandHandler from '../CommandHandler';\nimport RemoveTreeNodeCommand from '../../simplecommand/node/RemoveTreeNodeCommand';\nimport MoveTreeNodeCommand from '../../simplecommand/node/MoveTreeNodeCommand';\nimport SetGraphicAttributeCommand from '../../simplecommand/node/graphic/SetGraphicAttributeCommand';\nimport RequestRerenderTreeNodeComponentCommand from '../../simplecommand/rerender/RequestRerenderTreeNodeComponentCommand';\n\nexport interface IDeleteGraphicCommandProps {\n  commandId: CommandEnum.DELETE_GRAPHIC;\n}\n\nexport default class GraphicDeleteCommandHandler extends CommandHandler {\n  public processCommand(\n    ctx: AppContext,\n    commandProps: IDeleteGraphicCommandProps\n  ): ICommandHandlerResponse {\n    switch (commandProps.commandId) {\n      case CommandEnum.DELETE_GRAPHIC: {\n        this.deleteGraphic(ctx);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return { isValid: true, terminate: true };\n  }\n\n  private deleteGraphic(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const selectedGraphicModels = selectionContainer\n      .getGraphicModelSelectionContainer()\n      .getSelectedGraphicModels();\n\n    const deletedGraphicModelList = new Array<GraphicModel>();\n\n    selectedGraphicModels?.reverse().forEach((graphicModel: GraphicModel) => {\n      const parentModel = graphicModel.getParent();\n      if (parentModel !== undefined) {\n        this.removeNodeAndAllChild(ctx, graphicModel);\n        if (isGroupChild(graphicModel) === true) {\n          deletedGraphicModelList.push(graphicModel);\n        }\n      }\n    });\n\n    this.updateParentGroup(ctx, deletedGraphicModelList);\n\n    updateNewSelectionContainer(ctx, []);\n  }\n\n  private updateParentGroup(ctx: AppContext, deletedGraphicModelList: GraphicModel[]) {\n    const deletedGraphicModelSet = new Set<GraphicModel>(deletedGraphicModelList);\n    const editRequestMap = new Map<GraphicModel, GraphicModelEditRequest>();\n\n    const rootGroupSet = new Set<GraphicModel>();\n\n    deletedGraphicModelList.forEach(graphicModel => {\n      const parentGroup = graphicModel.getParent();\n      if (isGraphicModel(parentGroup) && isGroup(parentGroup) === true) {\n        this.unGroupChild(ctx, parentGroup, deletedGraphicModelSet, editRequestMap);\n\n        const rootGroup = getRootGroup(parentGroup);\n        if (rootGroup !== undefined) {\n          rootGroupSet.add(rootGroup);\n        }\n      }\n    });\n\n    rootGroupSet.forEach(rootGroup => {\n      this.updateGroupCoordinate(rootGroup, deletedGraphicModelSet, editRequestMap);\n    });\n\n    this.applyEditRequest(ctx, editRequestMap);\n  }\n\n  private updateGroupCoordinate(\n    parentGroup: GraphicModel,\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    const childGraphicModelList = this.getChildGraphicModelList(\n      parentGroup,\n      deletedGraphicModelSet\n    );\n\n    childGraphicModelList.forEach(graphicModel => {\n      if (isGroup(graphicModel) === true) {\n        this.updateGroupCoordinate(graphicModel, deletedGraphicModelSet, editRequestMap);\n      }\n    });\n\n    if (isGroup(parentGroup) === true && deletedGraphicModelSet.has(parentGroup) === false) {\n      this.updateGroupCoordinateCore(\n        parentGroup,\n        childGraphicModelList,\n        deletedGraphicModelSet,\n        editRequestMap\n      );\n    }\n  }\n\n  private updateGroupCoordinateCore(\n    parentGroup: GraphicModel,\n    childGraphicModelList: GraphicModel[],\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    childGraphicModelList.forEach(childGraphicModel => {\n      const childCoordInfo =\n        editRequestMap.get(childGraphicModel)?.getCurrentEditingCoordinateInfo() ??\n        childGraphicModel.getCoordinateInfo();\n\n      if (childCoordInfo !== undefined) {\n        let childMinX: number;\n        let childMinY: number;\n        let childMaxX: number;\n        let childMaxY: number;\n\n        if (isWHSwitched(childCoordInfo.getRotation()) === true) {\n          const centerX = childCoordInfo.getX() + childCoordInfo.getWidth() / 2;\n          const centerY = childCoordInfo.getY() + childCoordInfo.getHeight() / 2;\n\n          childMinX = centerX - childCoordInfo.getHeight() / 2;\n          childMinY = centerY - childCoordInfo.getWidth() / 2;\n          childMaxX = centerX + childCoordInfo.getHeight() / 2;\n          childMaxY = centerY + childCoordInfo.getWidth() / 2;\n        } else {\n          childMinX = childCoordInfo.getX();\n          childMinY = childCoordInfo.getY();\n          childMaxX = childCoordInfo.getX() + childCoordInfo.getWidth();\n          childMaxY = childCoordInfo.getY() + childCoordInfo.getHeight();\n        }\n\n        minX = math.min(minX, childMinX);\n        minY = math.min(minY, childMinY);\n        maxX = math.max(maxX, childMaxX);\n        maxY = math.max(maxY, childMaxY);\n      }\n    });\n\n    const parentEditRequest =\n      editRequestMap.get(parentGroup) ?? new GraphicModelEditRequest(parentGroup);\n\n    if (editRequestMap.has(parentGroup) === false) {\n      editRequestMap.set(parentGroup, parentEditRequest);\n    }\n\n    const parentCurrentCoordInfo = parentEditRequest.getCurrentEditingCoordinateInfo();\n\n    const newGroupX = minX;\n    const newGroupY = minY;\n    const newGroupWidth = maxX - minX;\n    const newGroupHeight = maxY - minY;\n\n    const newWidth =\n      (newGroupWidth * parentCurrentCoordInfo.getWidth()) /\n      (parentCurrentCoordInfo.getGroupWidth() ?? 1);\n    const newHeight =\n      (newGroupHeight * parentCurrentCoordInfo.getHeight()) /\n      (parentCurrentCoordInfo.getGroupHeight() ?? 1);\n\n    const tmpCoordinateInfo = new CoordinateInfo();\n\n    tmpCoordinateInfo.setX(parentCurrentCoordInfo.getX());\n    tmpCoordinateInfo.setY(parentCurrentCoordInfo.getY());\n    tmpCoordinateInfo.setWidth(newWidth);\n    tmpCoordinateInfo.setHeight(newHeight);\n\n    tmpCoordinateInfo.setFlipH(parentCurrentCoordInfo.getFlipH());\n    tmpCoordinateInfo.setFlipV(parentCurrentCoordInfo.getFlipV());\n    tmpCoordinateInfo.setRotation(parentCurrentCoordInfo.getRotation());\n\n    tmpCoordinateInfo.setGroupX(newGroupX);\n    tmpCoordinateInfo.setGroupY(newGroupY);\n    tmpCoordinateInfo.setGroupWidth(newGroupWidth);\n    tmpCoordinateInfo.setGroupHeight(newGroupHeight);\n\n    const newGroupPosition = this.getNewGroupPosition(\n      parentGroup,\n      tmpCoordinateInfo,\n      deletedGraphicModelSet,\n      editRequestMap\n    );\n\n    parentCurrentCoordInfo.setX(newGroupPosition.x);\n    parentCurrentCoordInfo.setY(newGroupPosition.y);\n    parentCurrentCoordInfo.setWidth(newWidth);\n    parentCurrentCoordInfo.setHeight(newHeight);\n\n    parentCurrentCoordInfo.setGroupX(newGroupX);\n    parentCurrentCoordInfo.setGroupY(newGroupY);\n    parentCurrentCoordInfo.setGroupWidth(newGroupWidth);\n    parentCurrentCoordInfo.setGroupHeight(newGroupHeight);\n  }\n\n  private getNewGroupPosition(\n    targetGroup: GraphicModel,\n    tmpCoordinateInfo: CoordinateInfo,\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ): { x: number; y: number } {\n    const targetGroupEditRequest =\n      editRequestMap.get(targetGroup) ?? new GraphicModelEditRequest(targetGroup);\n\n    if (editRequestMap.has(targetGroup) === false) {\n      editRequestMap.set(targetGroup, targetGroupEditRequest);\n    }\n\n    const currentEditingCoordinateInfoList = this.getParentCoordinateInfoList(\n      targetGroup,\n      deletedGraphicModelSet,\n      editRequestMap\n    );\n    const currentEditingCoordinateInfo = targetGroupEditRequest.getCurrentEditingCoordinateInfo();\n\n    const initialEditingAccumulatedTotalMatrix = getAccumulatedTransformMatrix([\n      currentEditingCoordinateInfo,\n      ...currentEditingCoordinateInfoList,\n    ]);\n\n    const currentEditingAccumulatedParentMatrix = getAccumulatedTransformMatrix(\n      currentEditingCoordinateInfoList\n    );\n    const currentEditingAccumulatedTotalMatrix = getAccumulatedTransformMatrix([\n      tmpCoordinateInfo,\n      ...currentEditingCoordinateInfoList,\n    ]);\n\n    const { currentPosition, currentSize } = this.getCurrentTransform(\n      tmpCoordinateInfo,\n      currentEditingCoordinateInfoList,\n      currentEditingAccumulatedParentMatrix\n    );\n\n    const inverseOfCurrentEditingTranslateMatrix = math.inv(\n      math.matrix([\n        [1, 0, currentPosition.x],\n        [0, 1, currentPosition.y],\n        [0, 0, 1],\n      ])\n    );\n\n    // rfts 행렬을 풀면\n    // t X 나머지 행렬 꼴임\n    const currentEditingAccumulatedTotalMatrixWithoutTranslation = math.multiply(\n      inverseOfCurrentEditingTranslateMatrix,\n      currentEditingAccumulatedTotalMatrix\n    );\n    const newAccumulatedTranslationMatrix = math.multiply(\n      initialEditingAccumulatedTotalMatrix,\n      math.inv(currentEditingAccumulatedTotalMatrixWithoutTranslation)\n    );\n    const newAccumulatedCenterMatrix = math.matrix([\n      [1, 0, Number(newAccumulatedTranslationMatrix.get([0, 2])) + currentSize.width / 2],\n      [0, 1, Number(newAccumulatedTranslationMatrix.get([1, 2])) + currentSize.height / 2],\n      [0, 0, 1],\n    ]);\n    const newCenterMatrix = math.multiply(\n      math.inv(currentEditingAccumulatedParentMatrix),\n      newAccumulatedCenterMatrix\n    );\n\n    return {\n      x: Number(newCenterMatrix.get([0, 2]) - tmpCoordinateInfo.getWidth() / 2),\n      y: Number(newCenterMatrix.get([1, 2]) - tmpCoordinateInfo.getHeight() / 2),\n    };\n  }\n\n  private unGroupChild(\n    ctx: AppContext,\n    parentGroup: GraphicModel,\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    if (isGroup(parentGroup) === true && deletedGraphicModelSet.has(parentGroup) === false) {\n      const childGraphicModelList = this.getChildGraphicModelList(\n        parentGroup,\n        deletedGraphicModelSet\n      );\n\n      if (childGraphicModelList.length < 2) {\n        const newParent = this.getNewParent(parentGroup, deletedGraphicModelSet);\n\n        if (newParent !== undefined) {\n          deletedGraphicModelSet.add(parentGroup);\n\n          // node tree 재구성\n          childGraphicModelList.forEach(childGraphicModel => {\n            this.moveNode(\n              ctx,\n              childGraphicModel,\n              newParent,\n              this.getNewNextSibling(parentGroup, deletedGraphicModelSet)\n            );\n          });\n          this.removeNode(ctx, parentGroup);\n\n          this.applyUnGroupTransform(\n            parentGroup,\n            newParent,\n            childGraphicModelList,\n            deletedGraphicModelSet,\n            editRequestMap\n          );\n\n          editRequestMap.delete(parentGroup);\n\n          if (isGraphicModel(newParent) && isGroup(newParent)) {\n            this.unGroupChild(ctx, newParent, deletedGraphicModelSet, editRequestMap);\n          }\n        }\n      }\n    }\n  }\n\n  private applyUnGroupTransform(\n    oldParent: GraphicModel,\n    newParent: TreeNode,\n    childGraphicModelList: GraphicModel[],\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    let newParentTransformationMatrix = math.identity(3, 3) as math.Matrix;\n\n    if (isGraphicModel(newParent) && isGroup(newParent) === true) {\n      const newParentGraphicModel = newParent;\n      const currentEditingCoordinateInfoList = this.getParentCoordinateInfoList(\n        newParentGraphicModel,\n        deletedGraphicModelSet,\n        editRequestMap\n      );\n\n      newParentTransformationMatrix = getAccumulatedTransformMatrix([\n        editRequestMap.get(newParentGraphicModel)?.getCurrentEditingCoordinateInfo() ??\n          newParentGraphicModel.getCoordinateInfo(),\n        ...currentEditingCoordinateInfoList,\n      ]);\n    }\n\n    const flipHList = new Array<boolean>();\n    const flipVList = new Array<boolean>();\n    const rotationList = new Array<number>();\n    const wRatioList = new Array<number>();\n    const hRatioList = new Array<number>();\n\n    let tmpTreeNode: Nullable<TreeNode> = newParent;\n\n    while (isGraphicModel(tmpTreeNode) && isGroup(tmpTreeNode) === true) {\n      const tmpGraphicModel = tmpTreeNode;\n      if (tmpGraphicModel !== undefined) {\n        const tmpCoordinateInfo =\n          editRequestMap.get(tmpGraphicModel)?.getCurrentEditingCoordinateInfo() ??\n          tmpGraphicModel.getCoordinateInfo();\n\n        flipHList.push(tmpCoordinateInfo.getFlipH());\n        flipVList.push(tmpCoordinateInfo.getFlipV());\n        rotationList.push(tmpCoordinateInfo.getRotation());\n        wRatioList.push(tmpCoordinateInfo.getWidth() / (tmpCoordinateInfo.getGroupWidth() ?? 1));\n        hRatioList.push(tmpCoordinateInfo.getHeight() / (tmpCoordinateInfo.getGroupHeight() ?? 1));\n      }\n\n      tmpTreeNode = this.getNewParent(tmpTreeNode, deletedGraphicModelSet);\n    }\n\n    flipHList.reverse();\n    flipVList.reverse();\n    rotationList.reverse();\n    wRatioList.reverse();\n    hRatioList.reverse();\n\n    childGraphicModelList.forEach(childGraphicModel => {\n      this.applyUnGroupTransformOneDepthChild(\n        childGraphicModel,\n        oldParent,\n        newParentTransformationMatrix,\n        flipHList,\n        flipVList,\n        rotationList,\n        wRatioList,\n        hRatioList,\n        editRequestMap\n      );\n\n      if (isGroup(childGraphicModel) === true) {\n        const coordinateInfo =\n          editRequestMap.get(childGraphicModel)?.getCurrentEditingCoordinateInfo() ??\n          childGraphicModel.getCoordinateInfo();\n\n        flipHList.push(coordinateInfo.getFlipH());\n        flipVList.push(coordinateInfo.getFlipV());\n        rotationList.push(coordinateInfo.getRotation());\n        wRatioList.push(coordinateInfo.getWidth() / (coordinateInfo.getGroupWidth() ?? 1));\n        hRatioList.push(coordinateInfo.getHeight() / (coordinateInfo.getGroupHeight() ?? 1));\n\n        const childDisplayedPosition = getNoneEditingDisplayedPosition(childGraphicModel);\n        const childDisplayedSize = getNoneEditingDisplayedSize(childGraphicModel);\n\n        // newTransformationMatrix는\n        // getNoneEditingAccumulatedTransformationMatrix 함수로 얻는 matrix와 같음\n        // 하지만 depth에 따라 아래의 방식으로 직접 계산하는 것이 효율적임\n        const newTransformationMatrix는 = getTransformMatrix(\n          coordinateInfo,\n          childDisplayedPosition.x,\n          childDisplayedPosition.y,\n          childDisplayedSize.width,\n          childDisplayedSize.height,\n          getNoneEditingDisplayedFlipH(childGraphicModel),\n          getNoneEditingDisplayedFlipV(childGraphicModel),\n          getNoneEditingDisplayedRotation(childGraphicModel)\n        );\n\n        this.applyUnGroupTransformRecursively(\n          childGraphicModel,\n          newTransformationMatrix는,\n          flipHList,\n          flipVList,\n          rotationList,\n          wRatioList,\n          hRatioList,\n          deletedGraphicModelSet,\n          editRequestMap\n        );\n\n        flipHList.pop();\n        flipVList.pop();\n        rotationList.pop();\n        wRatioList.pop();\n        hRatioList.pop();\n      }\n    });\n  }\n\n  private applyUnGroupTransformOneDepthChild(\n    childGraphicModel: GraphicModel,\n    oldParent: GraphicModel,\n    parentTransformationMatrix: math.Matrix,\n    flipHList: boolean[],\n    flipVList: boolean[],\n    rotationList: number[],\n    wRatioList: number[],\n    hRatioList: number[],\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    const editRequest =\n      editRequestMap.get(childGraphicModel) ?? new GraphicModelEditRequest(childGraphicModel);\n\n    if (editRequestMap.has(childGraphicModel) === false) {\n      editRequestMap.set(childGraphicModel, editRequest);\n    }\n\n    const parentCoordinateInfo =\n      editRequestMap.get(oldParent)?.getCurrentEditingCoordinateInfo() ??\n      oldParent.getCoordinateInfo();\n    const childCoordinateInfo = editRequest.getCurrentEditingCoordinateInfo();\n\n    let newRotation = childCoordinateInfo.getRotation();\n\n    if (parentCoordinateInfo.getFlipH() !== parentCoordinateInfo.getFlipV()) {\n      newRotation = 360 - newRotation;\n    }\n\n    newRotation += parentCoordinateInfo.getRotation();\n\n    let accumulatedWRatio = 1;\n    let accumulatedHRatio = 1;\n    let accumulatedRotation = newRotation;\n\n    const listSize = flipHList.length;\n\n    for (let index = 0; index < listSize; index += 1) {\n      const parentFlipH = flipHList[listSize - 1 - index];\n      const parentFlipV = flipVList[listSize - 1 - index];\n      const parentRotation = rotationList[listSize - 1 - index];\n      const parentWRatio = wRatioList[listSize - 1 - index];\n      const parentHRatio = hRatioList[listSize - 1 - index];\n\n      if (isWHSwitched(accumulatedRotation) === true) {\n        accumulatedWRatio *= parentHRatio;\n        accumulatedHRatio *= parentWRatio;\n      } else {\n        accumulatedWRatio *= parentWRatio;\n        accumulatedHRatio *= parentHRatio;\n      }\n\n      if (parentFlipH !== parentFlipV) {\n        accumulatedRotation = 360 - accumulatedRotation;\n      }\n\n      accumulatedRotation += parentRotation;\n    }\n\n    const displayedSize = getNoneEditingDisplayedSize(childGraphicModel);\n\n    const newWidth = displayedSize.width / accumulatedWRatio;\n    const newHeight = displayedSize.height / accumulatedHRatio;\n\n    const displayedCenterCoordinate = getNoneEditingDisplayedCenterCoordinate(childGraphicModel);\n\n    const newCenterCoordinate = math.multiply(\n      math.inv(parentTransformationMatrix),\n      math.matrix([[displayedCenterCoordinate.x], [displayedCenterCoordinate.y], [1]])\n    );\n\n    const newX = Number(newCenterCoordinate.get([0, 0])) - newWidth / 2;\n    const newY = Number(newCenterCoordinate.get([1, 0])) - newHeight / 2;\n\n    const newFlipH = childCoordinateInfo.getFlipH() !== parentCoordinateInfo.getFlipH();\n    const newFlipV = childCoordinateInfo.getFlipV() !== parentCoordinateInfo.getFlipV();\n\n    childCoordinateInfo.setX(newX);\n    childCoordinateInfo.setY(newY);\n    childCoordinateInfo.setWidth(newWidth);\n    childCoordinateInfo.setHeight(newHeight);\n    childCoordinateInfo.setRotation(newRotation);\n    childCoordinateInfo.setFlipH(newFlipH);\n    childCoordinateInfo.setFlipV(newFlipV);\n  }\n\n  private applyUnGroupTransformRecursively(\n    parentGroup: GraphicModel,\n    parentTransformationMatrix: math.Matrix,\n    flipHList: boolean[],\n    flipVList: boolean[],\n    rotationList: number[],\n    wRatioList: number[],\n    hRatioList: number[],\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    if (isGroup(parentGroup) === true) {\n      const childGraphicModelList = this.getChildGraphicModelList(\n        parentGroup,\n        deletedGraphicModelSet\n      );\n\n      childGraphicModelList.forEach(child => {\n        if (isGraphicModel(child)) {\n          const childGraphicModel = child;\n\n          const editRequest =\n            editRequestMap.get(childGraphicModel) ?? new GraphicModelEditRequest(childGraphicModel);\n\n          if (editRequestMap.has(childGraphicModel) === false) {\n            editRequestMap.set(childGraphicModel, editRequest);\n          }\n\n          const childCoordinateInfo = editRequest.getCurrentEditingCoordinateInfo();\n\n          let accumulatedWRatio = 1;\n          let accumulatedHRatio = 1;\n          let accumulatedRotation = childCoordinateInfo.getRotation();\n\n          const listSize = flipHList.length;\n\n          for (let index = 0; index < listSize; index += 1) {\n            const parentFlipH = flipHList[listSize - 1 - index];\n            const parentFlipV = flipVList[listSize - 1 - index];\n            const parentRotation = rotationList[listSize - 1 - index];\n            const parentWRatio = wRatioList[listSize - 1 - index];\n            const parentHRatio = hRatioList[listSize - 1 - index];\n\n            if (isWHSwitched(accumulatedRotation) === true) {\n              accumulatedWRatio *= parentHRatio;\n              accumulatedHRatio *= parentWRatio;\n            } else {\n              accumulatedWRatio *= parentWRatio;\n              accumulatedHRatio *= parentHRatio;\n            }\n\n            if (parentFlipH !== parentFlipV) {\n              accumulatedRotation = 360 - accumulatedRotation;\n            }\n\n            accumulatedRotation += parentRotation;\n          }\n\n          const displayedSize = getNoneEditingDisplayedSize(childGraphicModel);\n\n          const newWidth = displayedSize.width / accumulatedWRatio;\n          const newHeight = displayedSize.height / accumulatedHRatio;\n\n          const displayedCenterCoordinate =\n            getNoneEditingDisplayedCenterCoordinate(childGraphicModel);\n\n          const newCenterCoordinate = math.multiply(\n            math.inv(parentTransformationMatrix),\n            math.matrix([[displayedCenterCoordinate.x], [displayedCenterCoordinate.y], [1]])\n          );\n\n          const newX = Number(newCenterCoordinate.get([0, 0])) - newWidth / 2;\n          const newY = Number(newCenterCoordinate.get([1, 0])) - newHeight / 2;\n\n          childCoordinateInfo.setX(newX);\n          childCoordinateInfo.setY(newY);\n          childCoordinateInfo.setWidth(newWidth);\n          childCoordinateInfo.setHeight(newHeight);\n\n          if (isGroup(childGraphicModel) === true) {\n            const displayedPosition = {\n              x: displayedCenterCoordinate.x - displayedSize.width / 2,\n              y: displayedCenterCoordinate.y - displayedSize.height / 2,\n            };\n\n            const newTransformationMatrix = getTransformMatrix(\n              childCoordinateInfo,\n              displayedPosition.x,\n              displayedPosition.y,\n              displayedSize.width,\n              displayedSize.height,\n              getNoneEditingDisplayedFlipH(childGraphicModel),\n              getNoneEditingDisplayedFlipV(childGraphicModel),\n              getNoneEditingDisplayedRotation(childGraphicModel)\n            );\n\n            flipHList.push(childCoordinateInfo.getFlipH());\n            flipVList.push(childCoordinateInfo.getFlipV());\n            rotationList.push(childCoordinateInfo.getRotation());\n            wRatioList.push(newWidth / (childCoordinateInfo.getGroupWidth() ?? 1));\n            hRatioList.push(newHeight / (childCoordinateInfo.getGroupHeight() ?? 1));\n\n            this.applyUnGroupTransformRecursively(\n              childGraphicModel,\n              newTransformationMatrix,\n              flipHList,\n              flipVList,\n              rotationList,\n              wRatioList,\n              hRatioList,\n              deletedGraphicModelSet,\n              editRequestMap\n            );\n\n            flipHList.pop();\n            flipVList.pop();\n            rotationList.pop();\n            wRatioList.pop();\n            hRatioList.pop();\n          }\n        }\n      });\n    }\n  }\n\n  private getCurrentTransform(\n    targetCoordinateInfo: CoordinateInfo,\n    parentCoordinateInfoList: CoordinateInfo[],\n    parentAccumulatedMatrix: math.Matrix\n  ): { currentPosition: { x: number; y: number }; currentSize: { width: number; height: number } } {\n    const currentSize = {\n      width: targetCoordinateInfo.getWidth(),\n      height: targetCoordinateInfo.getHeight(),\n    };\n\n    let accumulatedRotation = targetCoordinateInfo.getRotation();\n\n    parentCoordinateInfoList.forEach(coordinateInfo => {\n      if (isWHSwitched(accumulatedRotation) === true) {\n        currentSize.width *= coordinateInfo.getHeight() / (coordinateInfo.getGroupHeight() ?? 1);\n        currentSize.height *= coordinateInfo.getWidth() / (coordinateInfo.getGroupWidth() ?? 1);\n      } else {\n        currentSize.width *= coordinateInfo.getWidth() / (coordinateInfo.getGroupWidth() ?? 1);\n        currentSize.height *= coordinateInfo.getHeight() / (coordinateInfo.getGroupHeight() ?? 1);\n      }\n\n      const parentFlipH = coordinateInfo.getFlipH();\n      const parentFlipV = coordinateInfo.getFlipV();\n\n      if (parentFlipH !== parentFlipV) {\n        accumulatedRotation = 360 - accumulatedRotation;\n      }\n\n      accumulatedRotation += coordinateInfo.getRotation();\n    });\n\n    const centerPointMatrix = math.matrix([\n      [1, 0, targetCoordinateInfo.getX() + targetCoordinateInfo.getWidth() / 2],\n      [0, 1, targetCoordinateInfo.getY() + targetCoordinateInfo.getHeight() / 2],\n      [0, 0, 1],\n    ]);\n\n    const currentCenterPointMatrix = math.multiply(parentAccumulatedMatrix, centerPointMatrix);\n\n    return {\n      currentPosition: {\n        x: Number(currentCenterPointMatrix.get([0, 2])) - currentSize.width / 2,\n        y: Number(currentCenterPointMatrix.get([1, 2])) - currentSize.height / 2,\n      },\n      currentSize,\n    };\n  }\n\n  private applyEditRequest(\n    ctx: AppContext,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ) {\n    const commandController = ctx.getEditableContext().getCommandController();\n\n    if (commandController !== undefined) {\n      editRequestMap.forEach((editRequest, graphicModel) => {\n        const oldCoordinateInfo = graphicModel.getCoordinateInfo();\n        const newCoordinateInfo = editRequest.getCurrentEditingCoordinateInfo().clone();\n\n        const setCoordinateInfoCommand = new SetGraphicAttributeCommand(\n          graphicModel,\n          oldCoordinateInfo,\n          newCoordinateInfo,\n          graphicModel.setCoordinateInfo\n        );\n        commandController.appendSimpleCommand(setCoordinateInfoCommand);\n\n        const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n          ctx,\n          graphicModel,\n          true,\n          true\n        );\n        commandController.appendPostSimpleCommand(requestRerenderCommand);\n      });\n    }\n  }\n\n  private removeNodeAndAllChild(ctx: AppContext, node: TreeNode): void {\n    const parent = node.getParent();\n    if (parent === undefined) {\n      return;\n    }\n\n    this.removeChildNode(ctx, node);\n    this.removeNode(ctx, node);\n  }\n\n  private removeChildNode(ctx: AppContext, parentNode: TreeNode): void {\n    for (\n      let child = parentNode.getLastChild();\n      child !== undefined;\n      child = child.getPrevSibling()\n    ) {\n      if (child.getFirstChild() !== undefined) {\n        this.removeChildNode(ctx, child);\n      }\n      this.removeNode(ctx, child);\n    }\n  }\n\n  private removeNode(ctx: AppContext, targetNode: TreeNode): boolean {\n    const parent = targetNode.getParent();\n\n    if (parent === undefined) {\n      return false;\n    }\n\n    const commandController = ctx.getEditableContext().getCommandController();\n    const removeNodeCommand = new RemoveTreeNodeCommand(targetNode);\n    commandController?.appendSimpleCommand(removeNodeCommand);\n    const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n      ctx,\n      parent,\n      true,\n      true\n    );\n    commandController?.appendSimpleCommand(requestRerenderCommand);\n\n    return true;\n  }\n\n  private moveNode(\n    ctx: AppContext,\n    target: TreeNode,\n    newParent: TreeNode,\n    newNext?: TreeNode\n  ): void {\n    const commandController = ctx.getEditableContext().getCommandController();\n\n    const moveTreeNodeCommand = new MoveTreeNodeCommand(target, newParent, newNext);\n    commandController?.appendSimpleCommand(moveTreeNodeCommand);\n\n    const oldParent = target.getParent();\n    if (oldParent !== undefined) {\n      const requestRerenderOldParentCommand = new RequestRerenderTreeNodeComponentCommand(\n        ctx,\n        oldParent,\n        true,\n        true\n      );\n      commandController?.appendSimpleCommand(requestRerenderOldParentCommand);\n    }\n\n    const requestRerenderNewParentCommand = new RequestRerenderTreeNodeComponentCommand(\n      ctx,\n      newParent,\n      true,\n      true\n    );\n    commandController?.appendSimpleCommand(requestRerenderNewParentCommand);\n  }\n\n  private getChildGraphicModelList(\n    parentGroup: GraphicModel,\n    deletedGraphicModelSet: Set<GraphicModel>\n  ): GraphicModel[] {\n    const childGraphicModelList = new Array<GraphicModel>();\n\n    parentGroup.forEachChild(child => {\n      if (isGraphicModel(child)) {\n        const childGraphicModel = child;\n\n        if (deletedGraphicModelSet.has(childGraphicModel) === false) {\n          childGraphicModelList.push(childGraphicModel);\n        } else if (isGroup(childGraphicModel) === true) {\n          childGraphicModelList.push(\n            ...this.getChildGraphicModelList(childGraphicModel, deletedGraphicModelSet)\n          );\n        }\n      }\n    });\n\n    return childGraphicModelList;\n  }\n\n  private getNewParent(\n    currentParent: TreeNode,\n    deletedGraphicModelSet: Set<GraphicModel>\n  ): Nullable<TreeNode> {\n    let newParent = currentParent.getParent();\n\n    while (newParent !== undefined) {\n      if (isGraphicModel(newParent) && deletedGraphicModelSet.has(newParent) === true) {\n        newParent = newParent.getParent();\n      } else {\n        break;\n      }\n    }\n\n    return newParent;\n  }\n\n  private getNewNextSibling(\n    currentParent: TreeNode,\n    deletedGraphicModelSet: Set<GraphicModel>\n  ): Nullable<TreeNode> {\n    let newNextSibling = currentParent.getNextSibling();\n\n    while (newNextSibling !== undefined) {\n      if (isGraphicModel(newNextSibling) && deletedGraphicModelSet.has(newNextSibling) === true) {\n        newNextSibling = newNextSibling.getNextSibling();\n      } else {\n        break;\n      }\n    }\n\n    return newNextSibling;\n  }\n\n  private getParentCoordinateInfoList(\n    graphicModel: GraphicModel,\n    deletedGraphicModelSet: Set<GraphicModel>,\n    editRequestMap: Map<GraphicModel, GraphicModelEditRequest>\n  ): CoordinateInfo[] {\n    const currentEditingCoordinateInfoList = new Array<CoordinateInfo>();\n\n    if (deletedGraphicModelSet.has(graphicModel) === false) {\n      let tmpParent = graphicModel.getParent();\n\n      while (isGraphicModel(tmpParent) && isGroup(tmpParent) === true) {\n        const parentGraphicModel = tmpParent;\n        const editRequest = editRequestMap.get(parentGraphicModel);\n\n        if (deletedGraphicModelSet.has(parentGraphicModel) === false) {\n          currentEditingCoordinateInfoList.push(\n            editRequest?.getCurrentEditingCoordinateInfo() ?? parentGraphicModel.getCoordinateInfo()\n          );\n        }\n\n        tmpParent = tmpParent.getParent();\n      }\n    }\n\n    return currentEditingCoordinateInfoList;\n  }\n}\n","import * as math from 'mathjs';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport AppContext from 'store/context/AppContext';\nimport { ICommandHandlerResponse } from 'types/store/command/CommandTypes';\nimport { getRootGroup, isGroup, isGroupChild } from 'util/node/graphic/GraphicModelTreeNodeUtil';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport TreeNode from 'model/node/TreeNode';\nimport { createGraphicModelForGroupObject } from 'util/node/graphic/GraphicModelCreateUtil';\nimport { isWHSwitched } from 'util/coordinate/CoordinateUtil';\nimport { updateNewSelectionContainer } from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport {\n  getNoneEditingDisplayedCenterCoordinate,\n  getNoneEditingDisplayedFlipH,\n  getNoneEditingDisplayedFlipV,\n  getNoneEditingDisplayedPosition,\n  getNoneEditingDisplayedRotation,\n  getNoneEditingDisplayedSize,\n  getTransformMatrix,\n} from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport CommandHandler from '../CommandHandler';\nimport AppendTreeNodeCommand from '../../simplecommand/node/AppendTreeNodeCommand';\nimport RequestRerenderTreeNodeComponentCommand from '../../simplecommand/rerender/RequestRerenderTreeNodeComponentCommand';\nimport MoveTreeNodeCommand from '../../simplecommand/node/MoveTreeNodeCommand';\nimport RemoveTreeNodeCommand from '../../simplecommand/node/RemoveTreeNodeCommand';\nimport CommandController from '../../CommandController';\nimport SetGraphicAttributeCommand from '../../simplecommand/node/graphic/SetGraphicAttributeCommand';\n\ninterface IGraphicGroupCommandProps {\n  commandId: CommandEnum.GROUP_OBJECTS | CommandEnum.UNGROUP;\n}\n\nexport default class GraphicGroupCommandHandler extends CommandHandler {\n  public processCommand(\n    ctx: AppContext,\n    commandProps: IGraphicGroupCommandProps\n  ): ICommandHandlerResponse {\n    switch (commandProps.commandId) {\n      case CommandEnum.GROUP_OBJECTS: {\n        this.groupObjects(ctx);\n        break;\n      }\n      case CommandEnum.UNGROUP: {\n        this.unGroup(ctx);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return { isValid: true, terminate: true };\n  }\n\n  private groupObjects(ctx: AppContext) {\n    const editableContext = ctx.getEditableContext();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const selectedGraphicModels = selectionContainer\n      .getGraphicModelSelectionContainer()\n      .getSelectedGraphicModels();\n\n    const isGroupChildSelected = selectedGraphicModels.some(graphicModel => {\n      return isGroupChild(graphicModel);\n    });\n\n    if (selectedGraphicModels.length < 2 || isGroupChildSelected === true) {\n      return;\n    }\n\n    const treeNodeRoot = editableContext.getTreeNodeRoot();\n\n    const rootChildArray = treeNodeRoot.mapChild(child => {\n      return child;\n    });\n\n    selectedGraphicModels.sort((a: GraphicModel, b: GraphicModel) => {\n      if (rootChildArray.indexOf(a) < rootChildArray.indexOf(b)) return -1;\n      if (rootChildArray.indexOf(a) > rootChildArray.indexOf(b)) return 1;\n      return 0;\n    });\n\n    const groupNextSibling =\n      selectedGraphicModels[selectedGraphicModels.length - 1].getNextSibling();\n\n    this.createNewGroup(ctx, treeNodeRoot, selectedGraphicModels, groupNextSibling);\n  }\n\n  private unGroup(ctx: AppContext) {\n    const editableContext = ctx.getEditableContext();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const treeNodeRoot = editableContext.getTreeNodeRoot();\n    const commandController = editableContext.getCommandController();\n\n    if (commandController !== undefined) {\n      const rootGroupSet = new Set<GraphicModel>();\n\n      selectionContainer\n        .getGraphicModelSelectionContainer()\n        .getSelectedGraphicModels()\n        .forEach((graphicModel: GraphicModel) => {\n          const rootGroup = getRootGroup(graphicModel);\n\n          if (rootGroup !== undefined) {\n            rootGroupSet.add(rootGroup);\n          }\n        });\n\n      if (rootGroupSet.size > 0) {\n        const graphicModelListForNewSelection: GraphicModel[] = [];\n\n        rootGroupSet.forEach((group: GraphicModel) => {\n          group.forEachChild(child => {\n            if (isGraphicModel(child)) {\n              graphicModelListForNewSelection.push(child);\n            }\n          });\n\n          this.unGroupChild(ctx, commandController, group, treeNodeRoot);\n        });\n\n        const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n          ctx,\n          treeNodeRoot,\n          true,\n          true\n        );\n        commandController.appendPostSimpleCommand(requestRerenderCommand);\n\n        updateNewSelectionContainer(ctx, graphicModelListForNewSelection);\n      }\n    }\n  }\n\n  protected createNewGroup(\n    ctx: AppContext,\n    parent: TreeNode,\n    groupChildList: GraphicModel[],\n    groupNextSibling: Nullable<TreeNode>\n  ): void {\n    const commandController = ctx.getEditableContext().getCommandController();\n    if (commandController !== undefined) {\n      const newGroupShape = createGraphicModelForGroupObject();\n\n      let minX = Infinity;\n      let minY = Infinity;\n      let maxX = -Infinity;\n      let maxY = -Infinity;\n\n      groupChildList.forEach(graphicModel => {\n        const coordinateInfo = graphicModel.getCoordinateInfo();\n\n        const x = coordinateInfo.getX();\n        const y = coordinateInfo.getY();\n        const width = coordinateInfo.getWidth();\n        const height = coordinateInfo.getHeight();\n\n        const rotationDegree = coordinateInfo.getRotation();\n\n        let childMinX: number;\n        let childMinY: number;\n        let childMaxX: number;\n        let childMaxY: number;\n\n        if (isWHSwitched(rotationDegree) === true) {\n          const childCenterX = x + width / 2;\n          const childCenterY = y + height / 2;\n\n          childMinX = childCenterX - height / 2;\n          childMinY = childCenterY - width / 2;\n          childMaxX = childCenterX + height / 2;\n          childMaxY = childCenterY + width / 2;\n        } else {\n          childMinX = x;\n          childMinY = y;\n          childMaxX = x + width;\n          childMaxY = y + height;\n        }\n\n        minX = Math.min(minX, childMinX);\n        minY = Math.min(minY, childMinY);\n        maxX = Math.max(maxX, childMaxX);\n        maxY = Math.max(maxY, childMaxY);\n      });\n\n      const coordinateInfo = newGroupShape.getCoordinateInfo();\n\n      coordinateInfo.setX(minX);\n      coordinateInfo.setY(minY);\n      coordinateInfo.setWidth(maxX - minX);\n      coordinateInfo.setHeight(maxY - minY);\n      coordinateInfo.setGroupX(minX);\n      coordinateInfo.setGroupY(minY);\n      coordinateInfo.setGroupWidth(maxX - minX);\n      coordinateInfo.setGroupHeight(maxY - minY);\n\n      const appendTreeNodeCommand = new AppendTreeNodeCommand(\n        newGroupShape,\n        parent,\n        groupNextSibling\n      );\n      commandController.appendSimpleCommand(appendTreeNodeCommand);\n\n      // append group childs\n      groupChildList.forEach(graphicModel => {\n        const moveTreeNodeCommand = new MoveTreeNodeCommand(graphicModel, newGroupShape, undefined);\n        commandController.appendSimpleCommand(moveTreeNodeCommand);\n      });\n\n      const requestRerenderCommand = new RequestRerenderTreeNodeComponentCommand(\n        ctx,\n        parent,\n        true,\n        true\n      );\n      commandController.appendPostSimpleCommand(requestRerenderCommand);\n\n      updateNewSelectionContainer(ctx, [newGroupShape]);\n    }\n  }\n\n  protected unGroupChild(\n    ctx: AppContext,\n    commandController: CommandController,\n    group: GraphicModel,\n    appendTarget: TreeNode\n  ): void {\n    let child = group.getLastChild();\n    while (isGraphicModel(child)) {\n      const childGraphicModel = child;\n      const newNextSibling =\n        child === group.getLastChild() ? group.getNextSibling() : child.getNextSibling();\n      this.moveNode(ctx, childGraphicModel, appendTarget, newNextSibling);\n\n      const oldCoordinateInfo = childGraphicModel.getCoordinateInfo();\n      const newCoordinateInfo = oldCoordinateInfo.clone();\n\n      const displayedPosition = getNoneEditingDisplayedPosition(childGraphicModel);\n      newCoordinateInfo.setX(displayedPosition.x);\n      newCoordinateInfo.setY(displayedPosition.y);\n\n      const displayedSize = getNoneEditingDisplayedSize(childGraphicModel);\n      newCoordinateInfo.setWidth(displayedSize.width);\n      newCoordinateInfo.setHeight(displayedSize.height);\n\n      const displayedRotation = getNoneEditingDisplayedRotation(childGraphicModel);\n      newCoordinateInfo.setRotation(displayedRotation);\n\n      const displayedFlipH = getNoneEditingDisplayedFlipH(childGraphicModel);\n      const displayedFlipV = getNoneEditingDisplayedFlipV(childGraphicModel);\n\n      newCoordinateInfo.setFlipH(displayedFlipH);\n      newCoordinateInfo.setFlipV(displayedFlipV);\n\n      const setCoordinateInfoCommand = new SetGraphicAttributeCommand(\n        childGraphicModel,\n        oldCoordinateInfo,\n        newCoordinateInfo,\n        childGraphicModel.setCoordinateInfo\n      );\n      commandController.appendSimpleCommand(setCoordinateInfoCommand);\n\n      // newTransformationMatrix는\n      // getNoneEditingAccumulatedTransformationMatrix 함수로 얻는 matrix와 같음\n      const newTransformationMatrix = getTransformMatrix(\n        oldCoordinateInfo,\n        displayedPosition.x,\n        displayedPosition.y,\n        displayedSize.width,\n        displayedSize.height,\n        displayedFlipH,\n        displayedFlipV,\n        displayedRotation\n      );\n\n      const flipHList = new Array<boolean>();\n      const flipVList = new Array<boolean>();\n      const rotationList = new Array<number>();\n      const wRatioList = new Array<number>();\n      const hRatioList = new Array<number>();\n\n      flipHList.push(displayedFlipH);\n      flipVList.push(displayedFlipV);\n      rotationList.push(displayedRotation);\n      wRatioList.push(displayedSize.width / (oldCoordinateInfo.getGroupWidth() ?? 1));\n      hRatioList.push(displayedSize.height / (oldCoordinateInfo.getGroupHeight() ?? 1));\n\n      if (isGroup(childGraphicModel) === true) {\n        this.applyChildTransformRecursively(\n          ctx,\n          commandController,\n          childGraphicModel,\n          newTransformationMatrix,\n          flipHList,\n          flipVList,\n          rotationList,\n          wRatioList,\n          hRatioList\n        );\n      }\n\n      child = child.getPrevSibling();\n    }\n\n    const removeTreeNodeCommand = new RemoveTreeNodeCommand(group);\n    commandController?.appendSimpleCommand(removeTreeNodeCommand);\n  }\n\n  protected applyChildTransformRecursively(\n    ctx: AppContext,\n    commandController: CommandController,\n    parentGroup: GraphicModel,\n    parentTransformationMatrix: math.Matrix,\n    flipHList: boolean[],\n    flipVList: boolean[],\n    rotationList: number[],\n    wRatioList: number[],\n    hRatioList: number[]\n  ): void {\n    parentGroup.forEachChild(child => {\n      if (isGraphicModel(child)) {\n        const childGraphicModel = child;\n\n        const oldCoordinateInfo = childGraphicModel.getCoordinateInfo();\n        const newCoordinateInfo = oldCoordinateInfo.clone();\n\n        let accumulatedWRatio = 1;\n        let accumulatedHRatio = 1;\n        let accumulatedRotation = oldCoordinateInfo.getRotation();\n\n        const listSize = flipHList.length;\n\n        for (let index = 0; index < listSize; index += 1) {\n          const parentFlipH = flipHList[listSize - 1 - index];\n          const parentFlipV = flipVList[listSize - 1 - index];\n          const parentRotation = rotationList[listSize - 1 - index];\n          const parentWRatio = wRatioList[listSize - 1 - index];\n          const parentHRatio = hRatioList[listSize - 1 - index];\n          if (isWHSwitched(accumulatedRotation) === true) {\n            accumulatedWRatio *= parentHRatio;\n            accumulatedHRatio *= parentWRatio;\n          } else {\n            accumulatedWRatio *= parentWRatio;\n            accumulatedHRatio *= parentHRatio;\n          }\n          if (parentFlipH !== parentFlipV) {\n            accumulatedRotation = 360 - accumulatedRotation;\n          }\n          accumulatedRotation += parentRotation;\n        }\n\n        const displayedSize = getNoneEditingDisplayedSize(childGraphicModel);\n        const newWidth = displayedSize.width / accumulatedWRatio;\n        const newHeight = displayedSize.height / accumulatedHRatio;\n\n        newCoordinateInfo.setWidth(newWidth);\n        newCoordinateInfo.setHeight(newHeight);\n\n        const displayedCenterCoordinate =\n          getNoneEditingDisplayedCenterCoordinate(childGraphicModel);\n\n        const newCenterCoordinate = math.multiply(\n          math.inv(parentTransformationMatrix),\n          math.matrix([[displayedCenterCoordinate.x], [displayedCenterCoordinate.y], [1]])\n        );\n\n        const newX = Number(newCenterCoordinate.get([0, 0])) - newWidth / 2;\n        const newY = Number(newCenterCoordinate.get([1, 0])) - newHeight / 2;\n\n        newCoordinateInfo.setX(newX);\n        newCoordinateInfo.setY(newY);\n\n        const setCoordinateInfoCommand = new SetGraphicAttributeCommand(\n          childGraphicModel,\n          oldCoordinateInfo,\n          newCoordinateInfo,\n          childGraphicModel.setCoordinateInfo\n        );\n        commandController.appendSimpleCommand(setCoordinateInfoCommand);\n\n        if (isGroup(childGraphicModel) === true) {\n          const displayedPosition = {\n            x: displayedCenterCoordinate.x - displayedSize.width / 2,\n            y: displayedCenterCoordinate.y - displayedSize.height / 2,\n          };\n          // newTransformationMatrix는\n          // getNoneEditingAccumulatedTransformationMatrix 함수로 얻는 matrix와 같음\n          // 하지만 depth에 따라 아래의 방식으로 직접 계산하는 것이 효율적임\n          const newTransformationMatrix = getTransformMatrix(\n            oldCoordinateInfo,\n            displayedPosition.x,\n            displayedPosition.y,\n            displayedSize.width,\n            displayedSize.height,\n            getNoneEditingDisplayedFlipH(childGraphicModel),\n            getNoneEditingDisplayedFlipV(childGraphicModel),\n            getNoneEditingDisplayedRotation(childGraphicModel)\n          );\n          flipHList.push(oldCoordinateInfo.getFlipH());\n          flipVList.push(oldCoordinateInfo.getFlipV());\n          rotationList.push(oldCoordinateInfo.getRotation());\n          wRatioList.push(newWidth / (oldCoordinateInfo.getGroupWidth() ?? 1));\n          hRatioList.push(newHeight / (oldCoordinateInfo.getGroupHeight() ?? 1));\n\n          this.applyChildTransformRecursively(\n            ctx,\n            commandController,\n            childGraphicModel,\n            newTransformationMatrix,\n            flipHList,\n            flipVList,\n            rotationList,\n            wRatioList,\n            hRatioList\n          );\n\n          flipHList.pop();\n          flipVList.pop();\n          rotationList.pop();\n          wRatioList.pop();\n          hRatioList.pop();\n        }\n      }\n    });\n  }\n\n  private moveNode(\n    ctx: AppContext,\n    target: TreeNode,\n    newParent: TreeNode,\n    newNext?: TreeNode\n  ): void {\n    const commandController = ctx.getEditableContext().getCommandController();\n\n    const moveTreeNodeCommand = new MoveTreeNodeCommand(target, newParent, newNext);\n    commandController?.appendSimpleCommand(moveTreeNodeCommand);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport CommandHandlerFactory from 'store/manager/command/commandhandler/factory/CommandHandlerFactory';\nimport GraphicInsertCommandHandler from 'store/manager/command/commandhandler/graphic/GraphicInsertCommandHandler';\nimport CommandMapper from 'store/manager/command/CommandMapper/CommandMapper';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { CommandCreatorMapType, CommandMapType } from 'types/store/command/CommandTypes';\nimport GraphicMoveCommandHandler from '../commandhandler/graphic/GraphicMoveCommandHandler';\nimport GraphicRotateCommandHandler from '../commandhandler/graphic/GraphicRotateCommandHandler';\nimport GraphicResizeCommandHandler from '../commandhandler/graphic/GraphicResizeCommandHandler';\nimport GraphicDeleteCommandHandler from '../commandhandler/graphic/GraphicDeleteCommandHandler';\nimport GraphicGroupCommandHandler from '../commandhandler/graphic/GraphicGroupCommandHandler';\n\n/**\n * 편집 모드 (Edit) 인 경우에 대한 command mapper 입니다.\n */\nclass EditModeCommandMapper extends CommandMapper {\n  /**\n   * 특정 command에 대한 필요한 command handler 묶음을 관리하는 map 입니다.\n   */\n  protected readonly commandMap: CommandMapType;\n\n  /**\n   * CommandHandlerMap을 동적으로 구성하기 위한 함수를 담고 있는 map 입니다.\n   */\n  protected readonly commandCreatorMap: CommandCreatorMapType;\n\n  /**\n   * 생성자\n   *\n   * @param commandHandlerFactory command handler를 생성할 수 있는 factory 입니다.\n   */\n  public constructor(commandHandlerFactory: CommandHandlerFactory) {\n    super();\n    this.commandMap = new Map();\n    this.commandCreatorMap = new Map();\n    this.init(commandHandlerFactory);\n  }\n\n  /**\n   * CommandMap을 반환합니다.\n   *\n   * @returns this.commandMap\n   */\n  @boundMethod\n  public getCommandMap(): CommandMapType {\n    return this.commandMap;\n  }\n\n  /**\n   * command creator map을 반환합니다.\n   *\n   * @returns this.commandCreatorMap\n   */\n  public getCommandCreatorMap(): CommandCreatorMapType {\n    return this.commandCreatorMap;\n  }\n\n  /**\n   * command handler를 동적으로 생성 할 수 있도록 CommandCreatorMap을 채웁니다.\n   *\n   * @param commandHandlerFactory command handler를 생성할 수 있는 factory 입니다.\n   */\n  @boundMethod\n  private init(commandHandlerFactory: CommandHandlerFactory): void {\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_INSERT_SET_UP, () => {\n      const graphicInsertCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicInsertCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_INSERT_SET_UP, [graphicInsertCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_INSERT, () => {\n      const graphicInsertCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicInsertCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_INSERT, [graphicInsertCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_INSERT_ABORT, () => {\n      const graphicInsertCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicInsertCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_INSERT_ABORT, [graphicInsertCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_MOVE, () => {\n      const graphicMoveCommandHandler =\n        commandHandlerFactory.getTargetCommandHandler(GraphicMoveCommandHandler);\n      this.getCommandMap().set(CommandEnum.GRAPHIC_MOVE, [graphicMoveCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_MOVE_ABORT, () => {\n      const graphicMoveCommandHandler =\n        commandHandlerFactory.getTargetCommandHandler(GraphicMoveCommandHandler);\n      this.getCommandMap().set(CommandEnum.GRAPHIC_MOVE_ABORT, [graphicMoveCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_ROTATE, () => {\n      const graphicRotateCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicRotateCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_ROTATE, [graphicRotateCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_ROTATE_ABORT, () => {\n      const graphicRotateCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicRotateCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_ROTATE_ABORT, [graphicRotateCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_RESIZE, () => {\n      const graphicResizeCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicResizeCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_RESIZE, [graphicResizeCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GRAPHIC_RESIZE_ABORT, () => {\n      const graphicResizeCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicResizeCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GRAPHIC_RESIZE_ABORT, [graphicResizeCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.DELETE_GRAPHIC, () => {\n      const graphicDeleteCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicDeleteCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.DELETE_GRAPHIC, [graphicDeleteCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.GROUP_OBJECTS, () => {\n      const graphicGroupCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicGroupCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.GROUP_OBJECTS, [graphicGroupCommandHandler]);\n    });\n    this.getCommandCreatorMap().set(CommandEnum.UNGROUP, () => {\n      const graphicGroupCommandHandler = commandHandlerFactory.getTargetCommandHandler(\n        GraphicGroupCommandHandler\n      );\n      this.getCommandMap().set(CommandEnum.UNGROUP, [graphicGroupCommandHandler]);\n    });\n  }\n}\n\nexport default EditModeCommandMapper;\n","import { boundMethod } from 'autobind-decorator';\nimport CommandHandlerFactory from 'store/manager/command/commandhandler/factory/CommandHandlerFactory';\nimport CommandMapper from 'store/manager/command/CommandMapper/CommandMapper';\nimport EditModeCommandMapper from 'store/manager/command/CommandMapper/EditModeCommandMapper';\nimport { CommandModeEnum } from 'types/store/command/CommandModeEnum';\nimport { CommandModeMapType } from 'types/store/command/CommandTypes';\n\n/**\n * CommandMode에 따른 CommandMapper를 관리하는 class 입니다.\n */\nexport default class CommandModeMapper {\n  /**\n   * command mode에 따른 command mapper를 관리하는 map 입니다.\n   */\n  private readonly commandModeMap: CommandModeMapType;\n\n  /**\n   * command handler를 생성하는 factory 입니다.\n   */\n  private readonly commandHandlerFactory: CommandHandlerFactory;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.commandModeMap = new Map();\n    this.commandHandlerFactory = new CommandHandlerFactory();\n    this.init();\n  }\n\n  /**\n   * command mode에 맞는 commandMapper를 반환합니다.\n   *\n   * @param commandMode 현재 실행중인 commandMode\n   * @returns command mode에 맞는 commandMapper\n   */\n  @boundMethod\n  public get(commandMode: CommandModeEnum): Nullable<CommandMapper> {\n    return this.commandModeMap.get(commandMode);\n  }\n\n  /**\n   * commandModeMap을 초기화 합니다.\n   */\n  @boundMethod\n  private init() {\n    this.commandModeMap.set(\n      CommandModeEnum.EDIT,\n      new EditModeCommandMapper(this.commandHandlerFactory)\n    );\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport CommandCompositor from 'store/manager/command/CommandCompositor';\nimport CommandController from 'store/manager/command/CommandController';\nimport CommandMapper from 'store/manager/command/CommandMapper/CommandMapper';\nimport CommandModeMapper from 'store/manager/command/CommandModeMapper';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { ICommandProps } from 'types/store/command/CommandTypes';\n\n/**\n * Command 수행을 담당하는 class 입니다.\n * 실제 tree node에 대한 변경사항의 반영은 Command manager 안에서만 가능합니다.\n */\nexport default class CommandManager {\n  /**\n   * 현재 실행 상황(command mode)에 대한 CommandMapper List를 가지고 있는 Mapper 입니다.\n   */\n  private commandModeMapper: CommandModeMapper;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.commandModeMapper = new CommandModeMapper();\n  }\n\n  /**\n   * command를 실행하기 위한 command handler 정보를 담고 있는 command mapper을 반환합니다.\n   *\n   * @param ctx 현재 app의 상태를 담고 있는 AppContext\n   * @returns command mode에 따른 command mapper\n   */\n  @boundMethod\n  private getCommandMapper(ctx: AppContext): Nullable<CommandMapper> {\n    return this.commandModeMapper.get(ctx.getEditableContext().getCommandMode());\n  }\n\n  /**\n   * command compositor를 생성하여 반환합니다.\n   *\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   * @returns 새로 생성 한 CommandCompositor\n   */\n  private createCommandCompositor(ctx: AppContext): CommandCompositor {\n    return new CommandCompositor(ctx);\n  }\n\n  /**\n   * command controller를 생성하여 반환합니다.\n   *\n   * @param commandCompositor CommandController 생성에 필요한 command compositor\n   * @returns 새로 생성 한 CommandController\n   */\n  private createCommandController(commandCompositor: CommandCompositor): CommandController {\n    return new CommandController(commandCompositor);\n  }\n\n  /**\n   * CommandId를 기준으로 command를 구성하고 실행합니다.\n   *\n   * @param ctx 현재 app의 상태를 담고 있는 AppContext\n   * @returns command 가 정상적으로 실행 되었는지의 여부\n   */\n  @boundMethod\n  public execute(ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n    const commandProps = editableContext.getCommandProps();\n    if (commandProps === undefined) {\n      return false;\n    }\n\n    const { commandId } = commandProps;\n    if (commandId === CommandEnum.UNDO) {\n      return this.executeUndo(ctx, commandProps);\n    }\n    if (commandId === CommandEnum.REDO) {\n      return this.executeRedo(ctx, commandProps);\n    }\n\n    return this.executeCurrentCommand(ctx, commandProps);\n  }\n\n  /**\n   * 현재 입력에 맞추어 command 를 실행합니다.\n   *\n   * @param ctx 현재 app의 상태를 담고 있는 AppContext\n   * @param commandProps command 실행 정보를 담고 있는 CommandProps\n   * @returns 정상적으로 command 가 실행되었는지의 여부\n   */\n  @boundMethod\n  private executeCurrentCommand(ctx: AppContext, commandProps: ICommandProps): boolean {\n    const editableContext = ctx.getEditableContext();\n    // compose simple commands\n    const commandController = this.createCommandController(this.createCommandCompositor(ctx));\n    editableContext.setCommandController(commandController);\n\n    let isCommandValid = true;\n\n    this.getCommandMapper(ctx)\n      ?.get(commandProps.commandId)\n      ?.some(commandHandler => {\n        if (isCommandValid === false) {\n          return true;\n        }\n\n        // simple command 를 CommandController 통해서 CommandCompositor 에 append 하는 과정\n        const response = commandHandler.processCommand(ctx, commandProps);\n        if (response.isValid === false) {\n          isCommandValid = false;\n          commandController.fallback();\n          return true;\n        }\n\n        return response.terminate;\n      });\n\n    if (isCommandValid === true) {\n      commandController.executeCommand();\n      commandController.executePostCommand();\n      commandController.finishApplyProcess(ctx);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * 현재 입력에 맞추어 Undo 를 실행합니다.\n   *\n   * @param ctx 현재 app의 상태를 담고 있는 AppContext\n   * @param commandProps command 실행 정보를 담고 있는 CommandProps\n   * @returns 정상적으로 command 가 실행되었는지의 여부\n   */\n  @boundMethod\n  private executeUndo(ctx: AppContext, commandProps: ICommandProps): boolean {\n    const editableContext = ctx.getEditableContext();\n    // compose simple commands\n    const commandController = this.createCommandController(this.createCommandCompositor(ctx));\n    commandController.unExecuteCommand(ctx);\n    return true;\n  }\n\n  /**\n   * 현재 입력에 맞추어 Redo 를 실행합니다.\n   *\n   * @param ctx 현재 app의 상태를 담고 있는 AppContext\n   * @param commandProps command 실행 정보를 담고 있는 CommandProps\n   * @returns 정상적으로 command 가 실행되었는지의 여부\n   */\n  @boundMethod\n  private executeRedo(ctx: AppContext, commandProps: ICommandProps): boolean {\n    const editableContext = ctx.getEditableContext();\n    // compose simple commands\n    const commandController = this.createCommandController(this.createCommandCompositor(ctx));\n    commandController.reExecuteCommand(ctx);\n    return true;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport EventHandler from 'store/manager/event/handler/EventHandler';\nimport { EventHandlerMap } from 'types/store/event/EventTypes';\nimport { identify } from 'util/id/Identifiable';\n\n/**\n * EventHandler를 생성하여 반환하는 factory입니다.\n * EventHandler는 state를 가지지 않기 때문에, 중복된 요청이 생길 경우\n * instance를 하나만 생성하여 같은 instance를 반환합니다.\n */\nexport default class EventHandlerFactory {\n  /**\n   * EventHandler의 instance를 관리하는 Map type 입니다.\n   */\n  private eventHandlerMap: EventHandlerMap;\n\n  /**\n   * 생성자\n   */\n  constructor() {\n    this.eventHandlerMap = new Map();\n  }\n\n  /**\n   * EventHandler의 생성자를 인자로 받아 해당 eventHandler의 instance를 반환하는 함수입니다.\n   * 이미 instance가 있는 경우 같은 instance를 반환합니다.\n   *\n   * @param EventHandlerConstructor EventHandler의 생성자입니다.\n   * @returns 새로 생성한 EventHandler의 instance\n   */\n  @boundMethod\n  public getTargetEventHandler(EventHandlerConstructor: new () => EventHandler): EventHandler {\n    const uniqueKey = identify(EventHandlerConstructor);\n    let eventHandler = this.eventHandlerMap.get(uniqueKey);\n    if (eventHandler === undefined) {\n      eventHandler = new EventHandlerConstructor();\n      this.eventHandlerMap.set(uniqueKey, eventHandler);\n    }\n\n    return eventHandler;\n  }\n}\n","export const MouseEventCoordinateReferenceId = 'MouseEventCoordinateReference';\n\nexport const SlideComponentBasicMargin = 10;\nexport const EditViewScollBarSize = 16;\n","import GraphicModel from 'model/node/graphic/GraphicModel';\nimport AppContext from 'store/context/AppContext';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\nimport { IPoint } from 'types/common/geometry/GeometryTypes';\nimport { MouseEventCoordinateReferenceId } from 'types/component/node/slide/SlideComponentTypes';\nimport { applyGraphicModelTransformToRenderCoordinate } from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\n\nexport function convertClientCoordinateToRenderCoordinate(\n  clientCoordinate: IPoint,\n  zoomRatio: number\n): IPoint {\n  const mouseEventCoordinateReference = document.getElementById(\n    MouseEventCoordinateReferenceId\n  ) as HTMLElement;\n\n  const referenceCoordinateRect = mouseEventCoordinateReference?.getBoundingClientRect();\n\n  return {\n    x: (clientCoordinate.x - referenceCoordinateRect.left) / zoomRatio,\n    y: (clientCoordinate.y - referenceCoordinateRect.top) / zoomRatio,\n  };\n}\n\nexport function calculateAppliableMouseDelta(\n  event: MouseEvent,\n  ctx: AppContext,\n  eventTargetGraphicModel: GraphicModel,\n  applyFlip: boolean\n): IPoint {\n  const editableContext = ctx.getEditableContext();\n  const viewModeContainer = editableContext.getViewModeContainer();\n\n  const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n  const zoomRatio = viewModeContainer.getZoomRatio();\n\n  const editingStartedRenderCoordinate =\n    graphicEditInfoContainer.getEditingStartedRenderCoordinate();\n\n  const currentMouseRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n    {\n      x: event.getClientX(),\n      y: event.getClientY(),\n    },\n    zoomRatio\n  );\n\n  const editingStartedPositonBasedOnGraphicModel = applyGraphicModelTransformToRenderCoordinate(\n    graphicEditInfoContainer,\n    eventTargetGraphicModel,\n    editingStartedRenderCoordinate,\n    applyFlip\n  );\n\n  const currentMousePositonBasedOnGraphicModel = applyGraphicModelTransformToRenderCoordinate(\n    graphicEditInfoContainer,\n    eventTargetGraphicModel,\n    currentMouseRenderCoordinate,\n    applyFlip\n  );\n\n  return {\n    x: currentMousePositonBasedOnGraphicModel.x - editingStartedPositonBasedOnGraphicModel.x,\n    y: currentMousePositonBasedOnGraphicModel.y - editingStartedPositonBasedOnGraphicModel.y,\n  };\n}\n","import AppContext from 'store/context/AppContext';\nimport KeyEvent from 'store/manager/event/wrapper/KeyEvent';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\nimport WheelEvent from 'store/manager/event/wrapper/WheelEvent';\nimport Identifiable from 'util/id/Identifiable';\n\n/**\n * event 를 처리하는 event handler class 입니다.\n * event는 우선순위에 따라 여러 event handler들을 chain으로 구성하여 처리하며,\n * event 종류별로 적합한 함수를 호출하여 처리합니다.\n * chain을 구성하는 하나의 event handler의 event 처리 함수에서 true를 반환하면,\n * 다음 chain으로 넘어가지 않고 event chain을 종료합니다.\n */\nclass EventHandler {\n  /**\n   * mouse down event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  /**\n   * mouse up event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  /**\n   * mouse move event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onMouseMove(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  /**\n   * mouse drag event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onDrag(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  /**\n   * mouse wheel event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onWheel(event: WheelEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  /**\n   * key down event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onKeyDown(event: KeyEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  /**\n   * key up event에 대한 처리 함수 입니다.\n   *\n   * @param event 발생한 event\n   * @param ctx 현재 app 정보를 담고 있는 AppContext\n   * @returns event 처리가 완전히 완료되었는지의 여부\n   */\n  public onKeyUp(event: KeyEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  public onAppAreaMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  public onAppAreaMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  public onAppAreaMouseMove(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n\n  public onAppAreaDrag(event: MouseEvent, ctx: AppContext): boolean {\n    return false;\n  }\n}\n\nexport default class extends Identifiable(EventHandler) {}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport { convertClientCoordinateToRenderCoordinate } from 'util/coordinate/RenderCoordinateUtil';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport { ISize } from 'types/common/geometry/GeometryTypes';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport EventHandler from '../EventHandler';\nimport MouseEvent from '../../wrapper/MouseEvent';\nimport KeyEvent from '../../wrapper/KeyEvent';\n\nexport default class GraphicInsertEventHandler extends EventHandler {\n  @boundMethod\n  public override onMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const editableContext = ctx.getEditableContext();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const viewModeContainer = editableContext.getViewModeContainer();\n\n    const eventState = editableContext.getEventState();\n    const eventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const zoomRatio = viewModeContainer.getZoomRatio();\n\n    if (this.isMouseDownValid(eventState, graphicEditInfoContainer) === false) {\n      if (eventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n      return true;\n    }\n\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.PRESSED);\n\n    const editingStartedRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    graphicEditInfoContainer.setEditingStartedRenderCoordinate(editingStartedRenderCoordinate);\n\n    return true;\n  }\n\n  @boundMethod\n  public override onDrag(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n\n    const editableContext = ctx.getEditableContext();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const viewModeContainer = editableContext.getViewModeContainer();\n    const proxryLayerInfoContainer = editableContext.getProxyLayerInfoContainer();\n\n    const eventState = editableContext.getEventState();\n    const eventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const zoomRatio = viewModeContainer.getZoomRatio();\n\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (eventSubState === GraphicEditEventSubStateEnum.PRESSED) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.DRAG);\n      graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(true);\n      proxryLayerInfoContainer.disableEditViewProxyLayer();\n      proxryLayerInfoContainer.enableAppAreaProxyLayer(\n        eventTargetGraphicModel,\n        {\n          cursorType: 'crosshair',\n        },\n        true,\n        false\n      );\n      graphicEditInfoContainer.requestRerenderSelectionLayer(ctx);\n    }\n\n    if (\n      this.isMouseMoveValid(eventState, graphicEditInfoContainer) === false ||\n      eventTargetGraphicModel === undefined\n    ) {\n      if (eventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n      return true;\n    }\n\n    const editingStartedRenderCoordinate =\n      graphicEditInfoContainer.getEditingStartedRenderCoordinate();\n\n    const currentMouseRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    const mouseDelta = {\n      x: currentMouseRenderCoordinate.x - editingStartedRenderCoordinate.x,\n      y: currentMouseRenderCoordinate.y - editingStartedRenderCoordinate.y,\n    };\n\n    const size: ISize = { width: mouseDelta.x, height: mouseDelta.y };\n\n    if (event.isShiftDown()) {\n      const largerAbsoluteValue = Math.max(Math.abs(mouseDelta.x), Math.abs(mouseDelta.y), 5);\n      size.width = Math.sign(mouseDelta.x) * largerAbsoluteValue;\n      size.height = Math.sign(mouseDelta.y) * largerAbsoluteValue;\n    } else {\n      if (mouseDelta.x >= 0 && mouseDelta.x <= 5) size.width = 5;\n      else if (mouseDelta.x >= -5 && mouseDelta.x < 0) size.width = -5;\n      if (mouseDelta.y >= 0 && mouseDelta.y <= 5) size.height = 5;\n      else if (mouseDelta.y >= -5 && mouseDelta.y < 0) size.height = -5;\n    }\n\n    const eventTargetCoordinateInfo = eventTargetGraphicModel.getCoordinateInfo();\n\n    if (mouseDelta.x >= 0) {\n      eventTargetCoordinateInfo.setX(editingStartedRenderCoordinate.x);\n      eventTargetCoordinateInfo.setWidth(size.width);\n    } else {\n      eventTargetCoordinateInfo.setX(currentMouseRenderCoordinate.x + size.width - mouseDelta.x);\n      eventTargetCoordinateInfo.setWidth(-size.width);\n    }\n\n    if (mouseDelta.y >= 0) {\n      eventTargetCoordinateInfo.setY(editingStartedRenderCoordinate.y);\n      eventTargetCoordinateInfo.setHeight(size.height);\n    } else {\n      eventTargetCoordinateInfo.setY(currentMouseRenderCoordinate.y + size.height - mouseDelta.y);\n      eventTargetCoordinateInfo.setHeight(-size.height);\n    }\n\n    graphicEditInfoContainer.requestRerenderEditPreviewLayer(ctx);\n\n    return true;\n  }\n\n  @boundMethod\n  public override onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const proxryLayerInfoContainer = editableContext.getProxyLayerInfoContainer();\n\n    const eventState = editableContext.getEventState();\n\n    const prevEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n\n    proxryLayerInfoContainer.disableAppAreaProxyLayer();\n\n    if (\n      prevEventSubState === GraphicEditEventSubStateEnum.PRESSED ||\n      prevEventSubState === GraphicEditEventSubStateEnum.DRAG\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.RELEASED);\n    }\n\n    if (this.isMouseUpValid(eventState, graphicEditInfoContainer) === false) {\n      const props = {\n        commandId: CommandEnum.GRAPHIC_INSERT_ABORT,\n      };\n      editableContext.setCommandProps(props);\n\n      return true;\n    }\n\n    if (prevEventSubState === GraphicEditEventSubStateEnum.PRESSED) {\n      this.setXYWithoutMove(graphicEditInfoContainer);\n    }\n\n    const props = {\n      commandId: CommandEnum.GRAPHIC_INSERT,\n    };\n\n    editableContext.setCommandProps(props);\n\n    return true;\n  }\n\n  @boundMethod\n  public override onAppAreaDrag(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onDrag(event, ctx);\n  }\n\n  @boundMethod\n  public override onAppAreaMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onMouseUp(event, ctx);\n  }\n\n  @boundMethod\n  public override onKeyDown(event: KeyEvent, ctx: AppContext): boolean {\n    switch (true) {\n      case /^Escape$/.test(event.getKey()): {\n        const editableContext = ctx.getEditableContext();\n        const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n        graphicEditInfoContainer.abortCurrentEditingState();\n        const props = {\n          commandId: CommandEnum.GRAPHIC_INSERT_ABORT,\n        };\n        editableContext.setCommandProps(props);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    event.stopPropagation();\n    return true;\n  }\n\n  @boundMethod\n  public override onKeyUp(event: KeyEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    return true;\n  }\n\n  private setXYWithoutMove(graphicEditInfoContainer: GraphicEditInfoContainer): void {\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    if (eventTargetGraphicModel !== undefined) {\n      const eventTargetCoordinateInfo = eventTargetGraphicModel.getCoordinateInfo();\n\n      const editingStartedRenderCoordinate =\n        graphicEditInfoContainer.getEditingStartedRenderCoordinate();\n\n      eventTargetCoordinateInfo.setX(editingStartedRenderCoordinate.x);\n      eventTargetCoordinateInfo.setY(editingStartedRenderCoordinate.y);\n    }\n  }\n\n  private isMouseDownValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const eventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const graphic = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_INSERT ||\n      eventSubState !== GraphicEditEventSubStateEnum.READY ||\n      graphic === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseMoveValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const eventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_INSERT ||\n      eventSubState !== GraphicEditEventSubStateEnum.DRAG\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseUpValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const eventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const graphic = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_INSERT ||\n      eventSubState !== GraphicEditEventSubStateEnum.RELEASED ||\n      graphic === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport AppContext from 'store/context/AppContext';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport EventHandler from '../EventHandler';\nimport KeyEvent from '../../wrapper/KeyEvent';\nimport MouseEvent from '../../wrapper/MouseEvent';\n\nexport default class GraphicEventHandler extends EventHandler {\n  @boundMethod\n  public override onKeyDown(event: KeyEvent, ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n\n    switch (true) {\n      case /^Backspace$/.test(event.getKey()):\n      case /^Delete$/.test(event.getKey()): {\n        editableContext.setCommandProps({ commandId: CommandEnum.DELETE_GRAPHIC });\n        event.preventDefault();\n        return true;\n      }\n      case /^Escape$/.test(event.getKey()): {\n        const newSelectionContainer = editableContext.createSelectionContainer();\n        editableContext.setCommandProps({ commandId: CommandEnum.INVALID, newSelectionContainer });\n        return true;\n      }\n      default:\n        break;\n    }\n\n    return false;\n  }\n\n  @boundMethod\n  public override onMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n    const newSelectionContainer = editableContext.createSelectionContainer();\n    editableContext.setCommandProps({ commandId: CommandEnum.INVALID, newSelectionContainer });\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    graphicEditInfoContainer.setRangeSelectionStartPosition({\n      x: event.getClientX(),\n      y: event.getClientY(),\n    });\n    graphicEditInfoContainer.setRangeSelectionEndPosition({\n      x: event.getClientX(),\n      y: event.getClientY(),\n    });\n\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.PRESSED);\n    return true;\n  }\n\n  @boundMethod\n  public override onDrag(event: MouseEvent, ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    graphicEditInfoContainer.setRangeSelectionEndPosition({\n      x: event.getClientX(),\n      y: event.getClientY(),\n    });\n\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.DRAG);\n    return true;\n  }\n\n  @boundMethod\n  public override onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() === GraphicEditEventSubStateEnum.DRAG\n    ) {\n      const startPosition = graphicEditInfoContainer.getRangeSelectionStartPosition();\n      const endPosition = graphicEditInfoContainer.getRangeSelectionEndPosition();\n      // TODO: range selection\n    }\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.NONE);\n\n    return false;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport { isGraphicModel } from 'util/node/TreeNodeTypeGuards';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport { convertClientCoordinateToRenderCoordinate } from 'util/coordinate/RenderCoordinateUtil';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { getRootGroup } from 'util/node/graphic/GraphicModelTreeNodeUtil';\nimport { updateNewSelectionContainer } from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport EventHandler from '../EventHandler';\nimport MouseEvent from '../../wrapper/MouseEvent';\n\nexport default class GraphicSelectionEventHandler extends EventHandler {\n  @boundMethod\n  public override onMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const targetModel = event.getEventTargetModel();\n\n    if (isGraphicModel(targetModel)) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.READY);\n      graphicEditInfoContainer.setEventTargetGraphicModel(targetModel);\n\n      const eventState = editableContext.getEventState();\n      const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n      const zoomRatio = editableContext.getViewModeContainer().getZoomRatio();\n\n      if (this.isMouseDownValid(eventState, graphicEditInfoContainer) === false) {\n        if (graphicEditEventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n          graphicEditInfoContainer.abortCurrentEditingState();\n        }\n\n        return true;\n      }\n\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.PRESSED);\n\n      const editingStartedRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n        { x: event.getClientX(), y: event.getClientY() },\n        zoomRatio\n      );\n\n      graphicEditInfoContainer.setEditingStartedRenderCoordinate(editingStartedRenderCoordinate);\n\n      graphicEditInfoContainer.setIsMultiSelectionEvent(event.isCtrlDown() || event.isShiftDown());\n      this.updateSelectionOnMouseDown(event, ctx);\n    }\n\n    return true;\n  }\n\n  @boundMethod\n  public override onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n\n    const editableContext = ctx.getEditableContext();\n    const eventState = editableContext.getEventState();\n\n    const selectionContainer = editableContext.getSelectionContainer();\n    const graphicSelectionContainer = selectionContainer.getGraphicModelSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    if (\n      this.isMouseUpValid(eventState, graphicEditInfoContainer) !== false &&\n      graphicSelectionContainer !== undefined\n    ) {\n      // GraphicMoveEventHandler에서 처리하도록 함\n      return false;\n    }\n\n    const props = {\n      commandId: CommandEnum.GRAPHIC_MOVE_ABORT,\n    };\n\n    editableContext.setCommandProps(props);\n    this.updateSelectionOnMouseUp(event, ctx);\n\n    return true;\n  }\n\n  private isMouseDownValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    if (\n      eventState !== EventStateEnum.GRAPHIC_MOVE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.READY ||\n      eventTargetGraphicModel === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseUpValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    if (\n      eventState === EventStateEnum.GRAPHIC_MOVE &&\n      graphicEditEventSubState === GraphicEditEventSubStateEnum.DRAG &&\n      eventTargetGraphicModel !== undefined\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateSelectionOnMouseDown(event: MouseEvent, ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n\n    const selectionContainer = editableContext.getSelectionContainer();\n    const graphicSelectionContainer = selectionContainer.getGraphicModelSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    const newSelectedGraphicModelList = new Array<GraphicModel>();\n\n    if (eventTargetGraphicModel === undefined) {\n      return;\n    }\n\n    const graphicSelectionSize = graphicSelectionContainer.getSize();\n\n    const isSelectedGraphicModel =\n      graphicSelectionContainer.hasGraphicModelSelection(eventTargetGraphicModel);\n\n    const isMultiSelectionEvent = graphicEditInfoContainer.getIsMultiSelectionEvent();\n\n    const rootGroup: Nullable<GraphicModel> = getRootGroup(eventTargetGraphicModel);\n    const isRootGroupSelected = rootGroup\n      ? graphicSelectionContainer.hasGraphicModelSelection(rootGroup)\n      : false;\n\n    const hasRootGroupMemberInSelectionContainer = rootGroup\n      ? graphicSelectionContainer.hasTargetRootGroupMember(rootGroup)\n      : false;\n\n    let isSelectionRecentlyUpdated = false;\n\n    if (isMultiSelectionEvent === true) {\n      // multiselection event의 경우 기본적으로 release에서 selection에 변경 함\n      if (rootGroup !== undefined) {\n        // multiselection event\n        // root group이 있는 경우\n        if (eventTargetGraphicModel === rootGroup) {\n          // multiselection event\n          // root group이 있고, event target이 root group인 경우\n          if (isRootGroupSelected === true) {\n            // multiselection event\n            // root group이 있고, event target이 root group인 경우\n            // root group이 선택 된 경우\n            // pressed에서 selection 변경하지 않음\n            // drag로 진행하지 않을 경우 released에서 해당 root group을 selected list에서 제거\n          } else {\n            // multiselection event\n            // root group이 있고, event target이 root group인 경우\n            // root group이 선택 되지 않은 경우\n            // root group의 leaf graphic model이 선택 된 상황에서\n            // floating object를 선택하여 진입 한 경우 임\n            // pressed에서 root group 만으로 selection 구성\n            // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n            newSelectedGraphicModelList.push(rootGroup);\n            updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n            isSelectionRecentlyUpdated = true;\n          }\n        } else {\n          // multiselection event\n          // root group이 있고, event target이 group의 leaf graphic model인 경우\n          // eslint-disable-next-line no-lonely-if\n          if (isRootGroupSelected === true) {\n            // multiselection event\n            // root group이 있고, event target이 group의 leaf graphic model인 경우\n            // root group 이 선택 된 경우\n            if (graphicSelectionSize === 1) {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 된 경우\n              // root group 만 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않을 경우 released에서 eventTargetGraphicModel만으로 selection 구성\n            } else {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 된 경우\n              // root group 및 다른 root graphic model 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않을 경우 released에서 root group을 selected list에서 제거\n            }\n          } else {\n            // multiselection event\n            // root group이 있고, event target이 group의 leaf graphic model인 경우\n            // root group 이 선택 되지 않은 경우\n            // eslint-disable-next-line no-lonely-if\n            if (isSelectedGraphicModel === true) {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 되지 않은 경우\n              // eventTargetGraphicModel이 선택되어 있는 경우\n              if (graphicSelectionSize === 1) {\n                // pressed에서 eventTargetGraphicModel을 기존의 selected list 에 추가\n                // drag로 진행 할 경우 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n                // eventTargetGraphicModel이 선택되어 있는 경우\n                // eventTargetGraphicModel만 선택되어 있는 경우\n                // pressed에서 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 root group만으로 selection 구성\n              } else {\n                // pressed에서 eventTargetGraphicModel을 기존의 selected list 에 추가\n                // drag로 진행 할 경우 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n                // eventTargetGraphicModel이 선택되어 있는 경우\n                // eventTargetGraphicModel 및 같은 root group의 다른 leaf graphic model이 선택되어 있는 경우\n                // pressed에서 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 기존의 selection list에서 eventTargetGraphicModel 제거\n              }\n            } else {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 되지 않은 경우\n              // eventTargetGraphicModel이 선택되어 있지 않은 경우\n              // eslint-disable-next-line no-lonely-if\n              if (hasRootGroupMemberInSelectionContainer === true) {\n                // multiselection event\n                // root group이 있고, event target이 group의 leaf graphic model인 경우\n                // root group 이 선택 되지 않은 경우\n                // eventTargetGraphicModel이 선택되어 있지 않은 경우\n                // 같은 root group의 다른 leaf graphic model이 선택되어 있는 경우\n                // pressed에서 기존의 selection list에서 eventTargetGraphicModel 추가\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n                graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n                  newSelectedGraphicModelList.push(graphicSelection.getModel());\n                });\n\n                newSelectedGraphicModelList.push(eventTargetGraphicModel);\n                updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n                isSelectionRecentlyUpdated = true;\n              } else {\n                // multiselection event\n                // root group이 있고, event target이 group의 leaf graphic model인 경우\n                // root group 이 선택 되지 않은 경우\n                // eventTargetGraphicModel이 선택되어 있지 않은 경우\n                // 같은 root group의 다른 leaf graphic model이 선택되어 있지 않은 경우\n                // pressed에서 기존의 selection list에서 root graphic model 만 추출 및 root group 추가\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n                const newSelectedGraphicModelSet = new Set<GraphicModel>();\n                graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n                  const graphicModel = graphicSelection.getModel();\n                  const rootGroupOfSelectedGraphicModel = getRootGroup(graphicModel);\n                  if (rootGroupOfSelectedGraphicModel !== undefined) {\n                    newSelectedGraphicModelSet.add(rootGroupOfSelectedGraphicModel);\n                  } else {\n                    newSelectedGraphicModelSet.add(graphicModel);\n                  }\n                });\n\n                newSelectedGraphicModelSet.add(rootGroup);\n\n                newSelectedGraphicModelSet.forEach(graphicModel => {\n                  newSelectedGraphicModelList.push(graphicModel);\n                });\n                updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n                isSelectionRecentlyUpdated = true;\n              }\n            }\n          }\n        }\n      } else {\n        // multiselection event\n        // root group이 없는 경우\n        // eslint-disable-next-line no-lonely-if\n        if (isSelectedGraphicModel === true) {\n          // multiselection event\n          // root group이 없는 경우\n          // eventTargetGraphicModel이 이미 선택되어 있는 경우\n          // pressed에서 selection 변경하지 않음\n          // drag로 진행하지 않을 경우 기존 selection list에서 eventTargetGraphicModel 제거\n        } else {\n          // multiselection event\n          // root group이 없는 경우\n          // eventTargetGraphicModel이 선택되어 있지 않은 경우\n          // pressed에서 기존의 selection list에서 root graphic model 만 추출 및 eventTargetGraphicModel이 추가\n          // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n          const newSelectedGraphicModelSet = new Set<GraphicModel>();\n          graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n            const graphicModel = graphicSelection.getModel();\n            const rootGroupOfSelectedGraphicModel = getRootGroup(graphicModel);\n            if (rootGroupOfSelectedGraphicModel !== undefined) {\n              newSelectedGraphicModelSet.add(rootGroupOfSelectedGraphicModel);\n            } else {\n              newSelectedGraphicModelSet.add(graphicModel);\n            }\n          });\n\n          newSelectedGraphicModelSet.add(eventTargetGraphicModel);\n\n          newSelectedGraphicModelSet.forEach(graphicModel => {\n            newSelectedGraphicModelList.push(graphicModel);\n          });\n\n          updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n          isSelectionRecentlyUpdated = true;\n        }\n      }\n    } else {\n      // 일반 click event\n      // eslint-disable-next-line no-lonely-if\n      if (rootGroup !== undefined) {\n        // 일반 click event\n        // root group 이 있는 경우\n        if (eventTargetGraphicModel === rootGroup) {\n          // 일반 click event\n          // root group 이 있는 경우\n          // eventTargetGraphicModel이 root group인 경우\n          if (isRootGroupSelected === true) {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 root group인 경우\n            // root group이 선택 된 경우\n            // pressed에서 selection 변경하지 않음\n            // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n          } else {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 root group인 경우\n            // root group이 선택 되지 않음\n            // pressed에서 root group만으로 selection 구성\n            // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            newSelectedGraphicModelList.push(rootGroup);\n            updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n            isSelectionRecentlyUpdated = true;\n          }\n        } else {\n          // 일반 click event\n          // root group 이 있는 경우\n          // eventTargetGraphicModel이 leaf graphic model인 경우\n          // eslint-disable-next-line no-lonely-if\n          if (isRootGroupSelected === true) {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 leaf graphic model인 경우\n            // root group이 선택 된 경우\n            if (graphicSelectionSize === 1) {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group 만 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않은 경우 released에서 eventTargetGraphicModel만으로 selection 구성\n            } else {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group 및 다른 root graphic model이 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            }\n          } else {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 leaf graphic model인 경우\n            // root group이 선택 되지 않은 경우\n            // eslint-disable-next-line no-lonely-if\n            if (isSelectedGraphicModel === true) {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group이 선택 되지 않은 경우\n              // root group 아래의 leaf graphic model 이 선택 된 경우\n              // event target이 이미 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            } else if (hasRootGroupMemberInSelectionContainer === true) {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group이 선택 되지 않은 경우\n              // root group 아래의 leaf graphic model 이 선택 된 경우\n              // event target이 선택되지 않은 경우\n              // pressed에서 eventTargetGraphicModel 만으로 새로운 selection 구성\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n              newSelectedGraphicModelList.push(eventTargetGraphicModel);\n              updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n              isSelectionRecentlyUpdated = true;\n            } else {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group이 선택 되지 않은 경우\n              // root group 과 관련된 어떤 graphic model 도 선택되지 않은 경우\n              // pressed에서 root group 만으로 새로운 selection 구성\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n              newSelectedGraphicModelList.push(rootGroup);\n              updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n              isSelectionRecentlyUpdated = true;\n            }\n          }\n        }\n      } else {\n        // 일반 click event\n        // root group 이 없는 경우\n        // eslint-disable-next-line no-lonely-if\n        if (isSelectedGraphicModel === true) {\n          // 일반 click event\n          // root group 이 없는 경우\n          // 이미 선택 된 graphic model 인 경우\n          // pressed에서 selection 변경하지 않음\n          // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n        } else {\n          // 일반 click event\n          // root group 이 없는 경우\n          // 선택되지 않은 graphic model 인 경우\n          // pressed에서 eventTargetGraphicModel 만으로 selection 구성\n          // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n          newSelectedGraphicModelList.push(eventTargetGraphicModel);\n          updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n          isSelectionRecentlyUpdated = true;\n        }\n      }\n    }\n\n    graphicEditInfoContainer.setIsSelectionRecentlyUpdated(isSelectionRecentlyUpdated);\n\n    if (isSelectionRecentlyUpdated === false) {\n      const graphicSelections = graphicSelectionContainer.getGraphicModelSelections();\n      graphicSelections.forEach(graphicSelection => {\n        newSelectedGraphicModelList.push(graphicSelection.getModel());\n      });\n\n      updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n    }\n  }\n\n  private updateSelectionOnMouseUp(event: MouseEvent, ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n\n    const selectionContainer = editableContext.getSelectionContainer();\n    const graphicSelectionContainer = selectionContainer.getGraphicModelSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    const newSelectedGraphicModelList = new Array<GraphicModel>();\n\n    if (\n      eventTargetGraphicModel === undefined ||\n      graphicEditInfoContainer.getIsSelectionRecentlyUpdated() === true\n    ) {\n      return;\n    }\n\n    const graphicSelectionSize = graphicSelectionContainer.getSize();\n\n    const isSelectedGraphicModel =\n      graphicSelectionContainer.hasGraphicModelSelection(eventTargetGraphicModel);\n\n    const isMultiSelectionEvent = graphicEditInfoContainer.getIsMultiSelectionEvent();\n\n    const rootGroup: Nullable<GraphicModel> = getRootGroup(eventTargetGraphicModel);\n    const isRootGroupSelected = rootGroup\n      ? graphicSelectionContainer.hasGraphicModelSelection(rootGroup)\n      : false;\n\n    const hasRootGroupMemberInSelectionContainer = rootGroup\n      ? graphicSelectionContainer.hasTargetRootGroupMember(rootGroup)\n      : false;\n\n    let isSelectionRecentlyUpdated = false;\n\n    if (isMultiSelectionEvent === true) {\n      // multiselection event의 경우 기본적으로 release에서 selection에 변경 함\n      if (rootGroup !== undefined) {\n        // multiselection event\n        // root group이 있는 경우\n        if (eventTargetGraphicModel === rootGroup) {\n          // multiselection event\n          // root group이 있고, event target이 root group인 경우\n          if (isRootGroupSelected === true) {\n            // multiselection event\n            // root group이 있고, event target이 root group인 경우\n            // root group이 선택 된 경우\n            // pressed에서 selection 변경하지 않음\n            // drag로 진행하지 않을 경우 released에서 해당 root group을 selected list에서 제거\n            graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n              if (graphicSelection.getModel() !== rootGroup) {\n                newSelectedGraphicModelList.push(graphicSelection.getModel());\n              }\n            });\n            updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n            isSelectionRecentlyUpdated = true;\n          } else {\n            // multiselection event\n            // root group이 있고, event target이 root group인 경우\n            // root group이 선택 되지 않은 경우\n            // root group의 leaf graphic model이 선택 된 상황에서\n            // floating object를 선택하여 진입 한 경우 임\n            // pressed에서 root group 만으로 selection 구성\n            // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n          }\n        } else {\n          // multiselection event\n          // root group이 있고, event target이 group의 leaf graphic model인 경우\n          // eslint-disable-next-line no-lonely-if\n          if (isRootGroupSelected === true) {\n            // multiselection event\n            // root group이 있고, event target이 group의 leaf graphic model인 경우\n            // root group 이 선택 된 경우\n            if (graphicSelectionSize === 1) {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 된 경우\n              // root group 만 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않을 경우 released에서 eventTargetGraphicModel만으로 selection 구성\n              newSelectedGraphicModelList.push(eventTargetGraphicModel);\n              updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n              isSelectionRecentlyUpdated = true;\n            } else {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 된 경우\n              // root group 및 다른 root graphic model 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않을 경우 released에서 root group을 selected list에서 제거\n              graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n                if (graphicSelection.getModel() !== rootGroup) {\n                  newSelectedGraphicModelList.push(graphicSelection.getModel());\n                }\n              });\n              updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n              isSelectionRecentlyUpdated = true;\n            }\n          } else {\n            // multiselection event\n            // root group이 있고, event target이 group의 leaf graphic model인 경우\n            // root group 이 선택 되지 않은 경우\n            // eslint-disable-next-line no-lonely-if\n            if (isSelectedGraphicModel === true) {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 되지 않은 경우\n              // eventTargetGraphicModel이 선택되어 있는 경우\n              if (graphicSelectionSize === 1) {\n                // pressed에서 eventTargetGraphicModel을 기존의 selected list 에 추가\n                // drag로 진행 할 경우 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n                // eventTargetGraphicModel이 선택되어 있는 경우\n                // eventTargetGraphicModel만 선택되어 있는 경우\n                // pressed에서 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 root group만으로 selection 구성\n                newSelectedGraphicModelList.push(rootGroup);\n                updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n                isSelectionRecentlyUpdated = true;\n              } else {\n                // pressed에서 eventTargetGraphicModel을 기존의 selected list 에 추가\n                // drag로 진행 할 경우 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n                // eventTargetGraphicModel이 선택되어 있는 경우\n                // eventTargetGraphicModel 및 같은 root group의 다른 leaf graphic model이 선택되어 있는 경우\n                // pressed에서 selection 변경하지 않음\n                // drag로 진행하지 않을 경우 released에서 기존의 selection list에서 eventTargetGraphicModel 제거\n                graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n                  if (graphicSelection.getModel() !== eventTargetGraphicModel) {\n                    newSelectedGraphicModelList.push(graphicSelection.getModel());\n                  }\n                });\n                updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n                isSelectionRecentlyUpdated = true;\n              }\n            } else {\n              // multiselection event\n              // root group이 있고, event target이 group의 leaf graphic model인 경우\n              // root group 이 선택 되지 않은 경우\n              // eventTargetGraphicModel이 선택되어 있지 않은 경우\n              // eslint-disable-next-line no-lonely-if\n              if (hasRootGroupMemberInSelectionContainer === true) {\n                // multiselection event\n                // root group이 있고, event target이 group의 leaf graphic model인 경우\n                // root group 이 선택 되지 않은 경우\n                // eventTargetGraphicModel이 선택되어 있지 않은 경우\n                // 같은 root group의 다른 leaf graphic model이 선택되어 있는 경우\n                // pressed에서 selection 변경하지 기존의 selection list에서 eventTargetGraphicModel 추가\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n              } else {\n                // multiselection event\n                // root group이 있고, event target이 group의 leaf graphic model인 경우\n                // root group 이 선택 되지 않은 경우\n                // eventTargetGraphicModel이 선택되어 있지 않은 경우\n                // 같은 root group의 다른 leaf graphic model이 선택되어 있지 않은 경우\n                // pressed에서 기존의 selection list에서 root graphic model 만 추출 및 root group 추가\n                // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n              }\n            }\n          }\n        }\n      } else {\n        // multiselection event\n        // root group이 없는 경우\n        // eslint-disable-next-line no-lonely-if\n        if (isSelectedGraphicModel === true) {\n          // multiselection event\n          // root group이 없는 경우\n          // eventTargetGraphicModel이 이미 선택되어 있는 경우\n          // pressed에서 selection 변경하지 않음\n          // drag로 진행하지 않을 경우 기존 selection list에서 eventTargetGraphicModel 제거\n          graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n            if (graphicSelection.getModel() !== eventTargetGraphicModel) {\n              newSelectedGraphicModelList.push(graphicSelection.getModel());\n            }\n          });\n          updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n          isSelectionRecentlyUpdated = true;\n        } else {\n          // multiselection event\n          // root group이 없는 경우\n          // eventTargetGraphicModel이 선택되어 있지 않은 경우\n          // pressed에서 기존의 selection list에서 root graphic model 만 추출 및 eventTargetGraphicModel이 추가\n          // drag로 진행하지 않을 경우 released에서 selection 변경하지 않음\n        }\n      }\n    } else {\n      // 일반 click event\n      // eslint-disable-next-line no-lonely-if\n      if (rootGroup !== undefined) {\n        // 일반 click event\n        // root group 이 있는 경우\n        if (eventTargetGraphicModel === rootGroup) {\n          // 일반 click event\n          // root group 이 있는 경우\n          // eventTargetGraphicModel이 root group인 경우\n          if (isRootGroupSelected === true) {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 root group인 경우\n            // root group이 선택 된 경우\n            // pressed에서 selection 변경하지 않음\n            // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n          } else {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 root group인 경우\n            // root group이 선택 되지 않음\n            // pressed에서 root group만으로 selection 구성\n            // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n          }\n        } else {\n          // 일반 click event\n          // root group 이 있는 경우\n          // eventTargetGraphicModel이 leaf graphic model인 경우\n          // eslint-disable-next-line no-lonely-if\n          if (isRootGroupSelected === true) {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 leaf graphic model인 경우\n            // root group이 선택 된 경우\n            if (graphicSelectionSize === 1 && event.isRButton() === false) {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group 만 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않은 경우 released에서 eventTargetGraphicModel만으로 selection 구성\n              newSelectedGraphicModelList.push(eventTargetGraphicModel);\n              updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n              isSelectionRecentlyUpdated = true;\n            } else {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group 및 다른 root graphic model이 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            }\n          } else {\n            // 일반 click event\n            // root group 이 있는 경우\n            // eventTargetGraphicModel이 leaf graphic model인 경우\n            // root group이 선택 되지 않은 경우\n            // eslint-disable-next-line no-lonely-if\n            if (isSelectedGraphicModel === true) {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group이 선택 되지 않은 경우\n              // root group 아래의 leaf graphic model 이 선택 된 경우\n              // event target이 이미 선택 된 경우\n              // pressed에서 selection 변경하지 않음\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            } else if (hasRootGroupMemberInSelectionContainer === true) {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group이 선택 되지 않은 경우\n              // root group 아래의 leaf graphic model 이 선택 된 경우\n              // event target이 선택되지 않은 경우\n              // pressed에서 eventTargetGraphicModel 만으로 새로운 selection 구성\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            } else {\n              // 일반 click event\n              // root group 이 있는 경우\n              // eventTargetGraphicModel이 leaf graphic model인 경우\n              // root group이 선택 되지 않은 경우\n              // root group 과 관련된 어떤 graphic model 도 선택되지 않은 경우\n              // pressed에서 root group 만으로 새로운 selection 구성\n              // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n            }\n          }\n        }\n      } else {\n        // 일반 click event\n        // root group 이 없는 경우\n        // eslint-disable-next-line no-lonely-if\n        if (isSelectedGraphicModel === true) {\n          // 일반 click event\n          // root group 이 없는 경우\n          // 이미 선택 된 graphic model 인 경우\n          // pressed에서 selection 변경하지 않음\n          // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n        } else {\n          // 일반 click event\n          // root group 이 없는 경우\n          // 선택되지 않은 graphic model 인 경우\n          // pressed에서 eventTargetGraphicModel 만으로 selection 구성\n          // drag로 진행하지 않은 경우 released에서 selection 변경하지 않음\n        }\n      }\n    }\n\n    if (isSelectionRecentlyUpdated === false) {\n      graphicSelectionContainer.getGraphicModelSelections().forEach(graphicSelection => {\n        newSelectedGraphicModelList.push(graphicSelection.getModel());\n      });\n\n      updateNewSelectionContainer(ctx, newSelectedGraphicModelList);\n    }\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport * as math from 'mathjs';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport AppContext from 'store/context/AppContext';\nimport {\n  collectEditingDependentGraphicModelList,\n  collectEditingTargetGraphicModelList,\n  collectEditPreviewLayerGraphicModelList,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport {\n  applyGraphicMoveDeltaToGraphicEditRequest,\n  updateEditingDependentTreeMember,\n} from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport { IPoint } from 'types/common/geometry/GeometryTypes';\nimport { convertClientCoordinateToRenderCoordinate } from 'util/coordinate/RenderCoordinateUtil';\nimport EventHandler from '../EventHandler';\nimport MouseEvent from '../../wrapper/MouseEvent';\nimport KeyEvent from '../../wrapper/KeyEvent';\n\nexport default class GraphicMoveEventHandler extends EventHandler {\n  @boundMethod\n  public override onDrag(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n\n    const editableContext = ctx.getEditableContext();\n\n    const eventState = editableContext.getEventState();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() ===\n      GraphicEditEventSubStateEnum.PRESSED\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.DRAG);\n      this.setUpGraphicModelMoveContext(ctx, selectionContainer, graphicEditInfoContainer);\n    }\n\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    if (this.isMouseMoveValid(eventState, graphicEditInfoContainer) === false) {\n      if (graphicEditEventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n      return true;\n    }\n\n    const moveDelta = this.calculateMouseDelta(ctx, graphicEditInfoContainer, event);\n\n    const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n    this.applyMoveDelta(graphicEditInfoContainer, editingGraphicModelList, moveDelta);\n\n    graphicEditInfoContainer.requestRerenderEditPreviewLayer(ctx);\n    return true;\n  }\n\n  @boundMethod\n  public override onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n    const eventState = editableContext.getEventState();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() === GraphicEditEventSubStateEnum.DRAG\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.RELEASED);\n    }\n\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    if (eventTargetGraphicModel === undefined) {\n      return true;\n    }\n\n    if (this.isMouseUpValid(eventState, graphicEditInfoContainer, selectionContainer) === false) {\n      const commandProps = {\n        commandId: CommandEnum.GRAPHIC_MOVE_ABORT,\n      };\n      editableContext.setCommandProps(commandProps);\n\n      return true;\n    }\n\n    const moveDelta = this.calculateMouseDelta(ctx, graphicEditInfoContainer, event);\n    const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n    this.applyMoveDelta(graphicEditInfoContainer, editingGraphicModelList, moveDelta);\n\n    updateEditingDependentTreeMember(graphicEditInfoContainer);\n\n    const props = {\n      commandId: CommandEnum.GRAPHIC_MOVE,\n    };\n\n    editableContext.setCommandProps(props);\n\n    return true;\n  }\n\n  @boundMethod\n  public override onAppAreaDrag(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onDrag(event, ctx);\n  }\n\n  @boundMethod\n  public override onAppAreaMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onMouseUp(event, ctx);\n  }\n\n  @boundMethod\n  public override onKeyDown(event: KeyEvent, ctx: AppContext): boolean {\n    // ToDo. ctrl event, alt event 처리 zoom ratio get\n    switch (true) {\n      case /^Escape$/.test(event.getKey()): {\n        const editableContext = ctx.getEditableContext();\n        const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n        graphicEditInfoContainer.abortCurrentEditingState();\n        const props = {\n          commandId: CommandEnum.GRAPHIC_MOVE_ABORT,\n        };\n        editableContext.setCommandProps(props);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    event.stopPropagation();\n    return true;\n  }\n\n  @boundMethod\n  public override onKeyUp(event: KeyEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    return true;\n  }\n\n  private calculateMouseDelta(\n    ctx: AppContext,\n    graphicEditInfoContainer: GraphicEditInfoContainer,\n    event: MouseEvent\n  ): IPoint {\n    const zoomRatio = ctx.getEditableContext().getViewModeContainer().getZoomRatio();\n\n    const editingStartedRenderCoordinate =\n      graphicEditInfoContainer.getEditingStartedRenderCoordinate();\n\n    const currentMouseRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    let mouseDeltaX = currentMouseRenderCoordinate.x - editingStartedRenderCoordinate.x;\n    let mouseDeltaY = currentMouseRenderCoordinate.y - editingStartedRenderCoordinate.y;\n\n    if (event.isShiftDown() === true) {\n      if (math.abs(mouseDeltaX) >= math.abs(mouseDeltaY)) {\n        mouseDeltaY = 0;\n      } else {\n        mouseDeltaX = 0;\n      }\n    }\n\n    return { x: mouseDeltaX, y: mouseDeltaY };\n  }\n\n  public applyMoveDelta(\n    graphicEditInfoContainer: GraphicEditInfoContainer,\n    graphicModels: GraphicModel[],\n    moveDelta: IPoint\n  ): void {\n    graphicModels.forEach(graphicModel => {\n      applyGraphicMoveDeltaToGraphicEditRequest(graphicEditInfoContainer, graphicModel, moveDelta);\n    });\n  }\n\n  private isMouseMoveValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_MOVE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.DRAG ||\n      eventTargetGraphicModel === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseUpValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer,\n    selectionContainer: Nullable<SelectionContainer>\n  ): boolean {\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_MOVE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.RELEASED ||\n      eventTargetGraphicModel === undefined ||\n      selectionContainer === undefined ||\n      selectionContainer.getGraphicModelSelectionContainer() === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private setUpGraphicModelMoveContext(\n    ctx: AppContext,\n    selectionContainer: SelectionContainer,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): void {\n    collectEditingTargetGraphicModelList(\n      selectionContainer,\n      graphicEditInfoContainer,\n      true,\n      undefined\n    );\n    collectEditingDependentGraphicModelList(graphicEditInfoContainer);\n    collectEditPreviewLayerGraphicModelList(graphicEditInfoContainer);\n    graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(true);\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    ctx\n      .getEditableContext()\n      .getProxyLayerInfoContainer()\n      .enableAppAreaProxyLayer(eventTargetGraphicModel, { cursorType: 'move' }, true, false);\n    graphicEditInfoContainer.getEditPreviewLayerGraphicModelList().forEach(graphicModel => {\n      graphicModel.requestRerender(ctx);\n    });\n    graphicEditInfoContainer.requestRerenderSelectionLayer(ctx);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport {\n  collectEditingDependentGraphicModelList,\n  collectEditingTargetGraphicModelList,\n  collectEditPreviewLayerGraphicModelList,\n  updateNewSelectionContainer,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport {\n  applyRotationToGraphicEditRequest,\n  getInitialEditingDisplayedCenterCoordinate,\n  getInitialEditingDisplayedFlipH,\n  getInitialEditingDisplayedFlipV,\n  updateEditingDependentTreeMember,\n} from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport { convertClientCoordinateToRenderCoordinate } from 'util/coordinate/RenderCoordinateUtil';\nimport { getAngleBetweenThreePoints } from 'util/coordinate/CoordinateUtil';\nimport { GraphicEditingHandleEnum } from 'types/store/container/edit/GraphicEditingHandleEnum';\nimport EventHandler from '../EventHandler';\nimport MouseEvent from '../../wrapper/MouseEvent';\nimport KeyEvent from '../../wrapper/KeyEvent';\n\nexport default class GraphicRotateEventHandler extends EventHandler {\n  @boundMethod\n  public override onMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n\n    const eventState = editableContext.getEventState();\n    const selectionContainer = editableContext.getSelectionContainer();\n    const graphicSelectionContainer = selectionContainer.getGraphicModelSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    const zoomRatio = editableContext.getViewModeContainer().getZoomRatio();\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      this.isMouseDownValid(eventState, graphicEditEventSubState) === false ||\n      graphicEditInfoContainer.getGraphicEditingHandle() !== GraphicEditingHandleEnum.ROTATE ||\n      eventTargetGraphicModel === undefined\n    ) {\n      if (graphicEditEventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n\n      return true;\n    }\n\n    const isSelectedGraphicModel =\n      graphicSelectionContainer.hasGraphicModelSelection(eventTargetGraphicModel);\n\n    if (isSelectedGraphicModel === false) {\n      // handle이 부모 group handle일 경우 selection 조정\n      updateNewSelectionContainer(ctx, [eventTargetGraphicModel]);\n    }\n\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.PRESSED);\n\n    const editingStartedRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    graphicEditInfoContainer.setEditingStartedRenderCoordinate(editingStartedRenderCoordinate);\n\n    this.setUpGraphicModelRotateContext(\n      ctx,\n      selectionContainer,\n      graphicEditInfoContainer,\n      isSelectedGraphicModel\n    );\n\n    return true;\n  }\n\n  @boundMethod\n  public override onDrag(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n\n    const eventState = editableContext.getEventState();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    const zoomRatio = editableContext.getViewModeContainer().getZoomRatio();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() ===\n      GraphicEditEventSubStateEnum.PRESSED\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.DRAG);\n      graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(true);\n      graphicEditInfoContainer.getEditPreviewLayerGraphicModelList().forEach(graphicModel => {\n        graphicModel.requestRerender(ctx);\n      });\n      graphicEditInfoContainer.requestRerenderSelectionLayer(ctx);\n    }\n\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      this.isMouseMoveValid(eventState, graphicEditEventSubState, selectionContainer) === false ||\n      eventTargetGraphicModel === undefined\n    ) {\n      if (graphicEditEventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n\n      return true;\n    }\n\n    const editingStartedRenderCoordinate =\n      graphicEditInfoContainer.getEditingStartedRenderCoordinate();\n\n    const currentMouseRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    const eventTargetCenterCoordinate = getInitialEditingDisplayedCenterCoordinate(\n      graphicEditInfoContainer,\n      eventTargetGraphicModel\n    );\n\n    const rotatedAngle = getAngleBetweenThreePoints(\n      editingStartedRenderCoordinate,\n      currentMouseRenderCoordinate,\n      eventTargetCenterCoordinate\n    );\n\n    const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n\n    editingGraphicModelList.forEach(graphicModel => {\n      const graphicModelEditRequest =\n        graphicEditInfoContainer.getEditingDependentGraphicModelEditRequest(graphicModel);\n      let angleDirection = 1;\n\n      if (graphicModelEditRequest !== undefined) {\n        const initialCoordinateInfo = graphicModelEditRequest.getInitialCoordinateInfo();\n\n        const parentFlipH =\n          getInitialEditingDisplayedFlipH(graphicEditInfoContainer, graphicModel) !==\n          initialCoordinateInfo.getFlipH();\n        const parentFlipV =\n          getInitialEditingDisplayedFlipV(graphicEditInfoContainer, graphicModel) !==\n          initialCoordinateInfo.getFlipV();\n\n        if (parentFlipH !== parentFlipV) {\n          angleDirection = -1;\n        }\n      }\n      applyRotationToGraphicEditRequest(\n        graphicEditInfoContainer,\n        graphicModel,\n        rotatedAngle * angleDirection,\n        event.isShiftDown()\n      );\n    });\n\n    graphicEditInfoContainer.requestRerenderEditPreviewLayer(ctx);\n    return true;\n  }\n\n  @boundMethod\n  public override onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n    const eventState = editableContext.getEventState();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() === GraphicEditEventSubStateEnum.DRAG\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.RELEASED);\n    }\n\n    if (this.isMouseUpValid(eventState, graphicEditInfoContainer) === false) {\n      const commandProps = {\n        commandId: CommandEnum.GRAPHIC_ROTATE_ABORT,\n      };\n      editableContext.setCommandProps(commandProps);\n\n      return true;\n    }\n\n    updateEditingDependentTreeMember(graphicEditInfoContainer);\n\n    const commandProps = {\n      commandId: CommandEnum.GRAPHIC_ROTATE,\n    };\n\n    editableContext.setCommandProps(commandProps);\n\n    return true;\n  }\n\n  public override onAppAreaDrag(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onDrag(event, ctx);\n  }\n\n  @boundMethod\n  public override onAppAreaMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onMouseUp(event, ctx);\n  }\n\n  @boundMethod\n  public override onKeyDown(event: KeyEvent, ctx: AppContext): boolean {\n    switch (true) {\n      case /^Escape$/.test(event.getKey()): {\n        const editableContext = ctx.getEditableContext();\n        const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n        graphicEditInfoContainer.abortCurrentEditingState();\n        const props = {\n          commandId: CommandEnum.GRAPHIC_ROTATE_ABORT,\n        };\n        editableContext.setCommandProps(props);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    event.stopPropagation();\n    return true;\n  }\n\n  @boundMethod\n  public override onKeyUp(event: KeyEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    return true;\n  }\n\n  private isMouseDownValid(\n    eventState: EventStateEnum,\n    graphicEditEventSubState: GraphicEditEventSubStateEnum\n  ): boolean {\n    if (\n      eventState !== EventStateEnum.GRAPHIC_ROTATE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.READY\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseMoveValid(\n    eventState: EventStateEnum,\n    graphicEditEventSubState: GraphicEditEventSubStateEnum,\n    selectionContainer: Nullable<SelectionContainer>\n  ): boolean {\n    if (\n      eventState !== EventStateEnum.GRAPHIC_ROTATE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.DRAG ||\n      selectionContainer === undefined ||\n      selectionContainer.getGraphicModelSelectionContainer() === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseUpValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_ROTATE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.RELEASED ||\n      eventTargetGraphicModel === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private setUpGraphicModelRotateContext(\n    ctx: AppContext,\n    selectionContainer: SelectionContainer,\n    graphicEditInfoContainer: GraphicEditInfoContainer,\n    isSelectedGraphicModel: boolean\n  ): void {\n    collectEditingTargetGraphicModelList(\n      selectionContainer,\n      graphicEditInfoContainer,\n      isSelectedGraphicModel,\n      undefined\n    );\n    collectEditingDependentGraphicModelList(graphicEditInfoContainer);\n    collectEditPreviewLayerGraphicModelList(graphicEditInfoContainer);\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    ctx\n      .getEditableContext()\n      .getProxyLayerInfoContainer()\n      .enableAppAreaProxyLayer(\n        eventTargetGraphicModel,\n        {\n          cursorType: 'img',\n          img: ResourceEnum.IMG_CURSOR_ROTATE,\n          position: {\n            x: 15,\n            y: 15,\n          },\n        },\n        true,\n        false\n      );\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport SelectionContainer from 'store/manager/selection/SelectionContainer';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport {\n  collectEditingDependentGraphicModelList,\n  collectEditingTargetGraphicModelList,\n  collectEditPreviewLayerGraphicModelList,\n  updateNewSelectionContainer,\n} from 'util/node/graphic/edit/GraphicModelEditingUtil';\nimport { convertClientCoordinateToRenderCoordinate } from 'util/coordinate/RenderCoordinateUtil';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { IPoint } from 'types/common/geometry/GeometryTypes';\nimport {\n  applyGraphicModelTransformToRenderCoordinate,\n  applyResizeRatioToGraphicEditRequest,\n  calculateResizeRatio,\n  updateEditingDependentTreeMember,\n} from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport MouseEvent from '../../wrapper/MouseEvent';\nimport EventHandler from '../EventHandler';\nimport KeyEvent from '../../wrapper/KeyEvent';\n\nexport default class GraphicResizeEventHandler extends EventHandler {\n  @boundMethod\n  public override onMouseDown(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n\n    const eventState = editableContext.getEventState();\n    const selectionContainer = editableContext.getSelectionContainer();\n    const graphicSelectionContainer = selectionContainer.getGraphicModelSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    const zoomRatio = editableContext.getViewModeContainer().getZoomRatio();\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      this.isMouseDownValid(eventState, graphicEditEventSubState) === false ||\n      eventTargetGraphicModel === undefined\n    ) {\n      if (graphicEditEventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n\n      return true;\n    }\n\n    const isSelectedGraphicModel =\n      graphicSelectionContainer.hasGraphicModelSelection(eventTargetGraphicModel);\n\n    if (isSelectedGraphicModel === false) {\n      // handle이 부모 group handle일 경우 selection 조정\n      updateNewSelectionContainer(ctx, [eventTargetGraphicModel]);\n    }\n\n    graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.PRESSED);\n\n    const editingStartedRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    graphicEditInfoContainer.setEditingStartedRenderCoordinate(editingStartedRenderCoordinate);\n\n    this.setUpGraphicModelResizeContext(\n      ctx,\n      selectionContainer,\n      graphicEditInfoContainer,\n      isSelectedGraphicModel\n    );\n\n    return true;\n  }\n\n  @boundMethod\n  public override onDrag(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n\n    const eventState = editableContext.getEventState();\n    const selectionContainer = editableContext.getSelectionContainer();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    const zoomRatio = editableContext.getViewModeContainer().getZoomRatio();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() ===\n      GraphicEditEventSubStateEnum.PRESSED\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.DRAG);\n      graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(true);\n      graphicEditInfoContainer.getEditPreviewLayerGraphicModelList().forEach(graphicModel => {\n        graphicModel.requestRerender(ctx);\n      });\n      graphicEditInfoContainer.requestRerenderSelectionLayer(ctx);\n    }\n\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      this.isMouseMoveValid(eventState, graphicEditEventSubState, selectionContainer) === false ||\n      eventTargetGraphicModel === undefined\n    ) {\n      if (graphicEditEventSubState !== GraphicEditEventSubStateEnum.ABORT) {\n        graphicEditInfoContainer.abortCurrentEditingState();\n      }\n\n      return true;\n    }\n\n    const appliableMouseDelta = this.calculateAppliableMouseDelta(\n      event,\n      graphicEditInfoContainer,\n      eventTargetGraphicModel,\n      zoomRatio\n    );\n\n    const resizeRatio = calculateResizeRatio(\n      graphicEditInfoContainer,\n      eventTargetGraphicModel,\n      appliableMouseDelta,\n      event.isShiftDown()\n    );\n\n    const editingGraphicModelList = graphicEditInfoContainer.getEditingGraphicModelList();\n\n    editingGraphicModelList.forEach(graphicModel => {\n      applyResizeRatioToGraphicEditRequest(\n        graphicEditInfoContainer,\n        graphicModel,\n        resizeRatio,\n        true\n      );\n    });\n\n    graphicEditInfoContainer.requestRerenderEditPreviewLayer(ctx);\n    return true;\n  }\n\n  @boundMethod\n  public override onMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    const editableContext = ctx.getEditableContext();\n    const eventState = editableContext.getEventState();\n\n    const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n    if (\n      graphicEditInfoContainer.getGraphicEditEventSubState() === GraphicEditEventSubStateEnum.DRAG\n    ) {\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.RELEASED);\n    }\n\n    if (this.isMouseUpValid(eventState, graphicEditInfoContainer) === false) {\n      const commandProps = {\n        commandId: CommandEnum.GRAPHIC_RESIZE_ABORT,\n      };\n      editableContext.setCommandProps(commandProps);\n\n      return true;\n    }\n\n    updateEditingDependentTreeMember(graphicEditInfoContainer);\n\n    const commandProps = {\n      commandId: CommandEnum.GRAPHIC_RESIZE,\n    };\n\n    editableContext.setCommandProps(commandProps);\n\n    return true;\n  }\n\n  public override onAppAreaDrag(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onDrag(event, ctx);\n  }\n\n  @boundMethod\n  public override onAppAreaMouseUp(event: MouseEvent, ctx: AppContext): boolean {\n    return this.onMouseUp(event, ctx);\n  }\n\n  @boundMethod\n  public override onKeyDown(event: KeyEvent, ctx: AppContext): boolean {\n    // ToDo. ctrl event, alt event 처리 zoom ratio get\n    switch (true) {\n      case /^Escape$/.test(event.getKey()): {\n        const editableContext = ctx.getEditableContext();\n        const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n        graphicEditInfoContainer.abortCurrentEditingState();\n        const props = {\n          commandId: CommandEnum.GRAPHIC_RESIZE_ABORT,\n        };\n        editableContext.setCommandProps(props);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    event.stopPropagation();\n    return true;\n  }\n\n  @boundMethod\n  public override onKeyUp(event: KeyEvent, ctx: AppContext): boolean {\n    event.stopPropagation();\n    return true;\n  }\n\n  private isMouseDownValid(\n    eventState: EventStateEnum,\n    graphicEditEventSubState: GraphicEditEventSubStateEnum\n  ): boolean {\n    if (\n      eventState !== EventStateEnum.GRAPHIC_RESIZE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.READY\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseMoveValid(\n    eventState: EventStateEnum,\n    graphicEditEventSubState: GraphicEditEventSubStateEnum,\n    selectionContainer: Nullable<SelectionContainer>\n  ): boolean {\n    if (\n      eventState !== EventStateEnum.GRAPHIC_RESIZE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.DRAG ||\n      selectionContainer?.getGraphicModelSelectionContainer() === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private isMouseUpValid(\n    eventState: EventStateEnum,\n    graphicEditInfoContainer: GraphicEditInfoContainer\n  ): boolean {\n    const graphicEditEventSubState = graphicEditInfoContainer.getGraphicEditEventSubState();\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n\n    if (\n      eventState !== EventStateEnum.GRAPHIC_RESIZE ||\n      graphicEditEventSubState !== GraphicEditEventSubStateEnum.RELEASED ||\n      eventTargetGraphicModel === undefined\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private setUpGraphicModelResizeContext(\n    ctx: AppContext,\n    selectionContainer: SelectionContainer,\n    graphicEditInfoContainer: GraphicEditInfoContainer,\n    isSelectedGraphicModel: boolean\n  ): void {\n    collectEditingTargetGraphicModelList(\n      selectionContainer,\n      graphicEditInfoContainer,\n      isSelectedGraphicModel,\n      undefined\n    );\n    collectEditingDependentGraphicModelList(graphicEditInfoContainer);\n    collectEditPreviewLayerGraphicModelList(graphicEditInfoContainer);\n    graphicEditInfoContainer.setIsBeingEditedToAllEditingDependentGraphicModels(true);\n    const eventTargetGraphicModel = graphicEditInfoContainer.getEventTargetGraphicModel();\n    ctx.getEditableContext().getProxyLayerInfoContainer().enableAppAreaProxyLayer(\n      eventTargetGraphicModel,\n      {\n        cursorType: 'move',\n      },\n      true,\n      false\n    );\n  }\n\n  private calculateAppliableMouseDelta(\n    event: MouseEvent,\n    graphicEditInfoContainer: GraphicEditInfoContainer,\n    eventTargetGraphicModel: GraphicModel,\n    zoomRatio: number\n  ): IPoint {\n    const editingStartedRenderCoordinate =\n      graphicEditInfoContainer.getEditingStartedRenderCoordinate();\n\n    const currentMouseRenderCoordinate = convertClientCoordinateToRenderCoordinate(\n      { x: event.getClientX(), y: event.getClientY() },\n      zoomRatio\n    );\n\n    const editingStartedPositonBasedOnGraphicModel = applyGraphicModelTransformToRenderCoordinate(\n      graphicEditInfoContainer,\n      eventTargetGraphicModel,\n      editingStartedRenderCoordinate,\n      false\n    );\n\n    const currentMousePositonBasedOnGraphicModel = applyGraphicModelTransformToRenderCoordinate(\n      graphicEditInfoContainer,\n      eventTargetGraphicModel,\n      currentMouseRenderCoordinate,\n      false\n    );\n\n    return {\n      x: currentMousePositonBasedOnGraphicModel.x - editingStartedPositonBasedOnGraphicModel.x,\n      y: currentMousePositonBasedOnGraphicModel.y - editingStartedPositonBasedOnGraphicModel.y,\n    };\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport EventHandlerFactory from 'store/manager/event/EventHandlerFactory';\nimport EventHandler from 'store/manager/event/handler/EventHandler';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\nimport { EventConstructorMap, EventMap } from 'types/store/event/EventTypes';\nimport GraphicInsertEventHandler from './handler/graphic/GraphicInsertEventHandler';\nimport GraphicEventHandler from './handler/graphic/GraphicEventHandler';\nimport GraphicSelectionEventHandler from './handler/graphic/GraphicSelectionEventHandler';\nimport GraphicMoveEventHandler from './handler/graphic/GraphicMoveEventHandler';\nimport GraphicRotateEventHandler from './handler/graphic/GraphicRotateEventHandler';\nimport GraphicResizeEventHandler from './handler/graphic/GraphicResizeEventHandler';\n\n/**\n * EventState 에 따라 어떤 event handler 들이 순서대로 동작하는 지를 관리합니다.\n */\nexport default class EventMapper {\n  /**\n   * eventHandler를 생성 하는 factory\n   */\n  private readonly eventHandlerFactory: EventHandlerFactory;\n\n  /**\n   * EventState에 따라 eventHandlerList를 관리하는 map\n   */\n  private eventMap: EventMap;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.eventHandlerFactory = new EventHandlerFactory();\n    this.eventMap = new Map();\n    this.init();\n  }\n\n  /**\n   * EventConstructorMap정보를 기준으로 eventMap을 구성합니다.\n   */\n  @boundMethod\n  private init(): void {\n    const eventConstructorMap = this.createEventConstructorMap();\n    eventConstructorMap.forEach((eventHandlerConstructorList, eventState) => {\n      this.eventMap.set(\n        eventState,\n        eventHandlerConstructorList.map(eventHandlerConstructor => {\n          return this.eventHandlerFactory.getTargetEventHandler(eventHandlerConstructor);\n        })\n      );\n    });\n  }\n\n  /**\n   * EventMap을 구성할 생성자 정보를 가지고 있는 map 을 구성합니다.\n   *\n   * @returns EventMap을 구성할 생성자 정보를 가지고 있는 map\n   */\n  protected createEventConstructorMap(): EventConstructorMap {\n    return new Map([\n      [EventStateEnum.IDLE, [GraphicEventHandler]],\n      [EventStateEnum.GRAPHIC_INSERT, [GraphicInsertEventHandler]],\n      [EventStateEnum.GRAPHIC_MOVE, [GraphicSelectionEventHandler, GraphicMoveEventHandler]],\n      [EventStateEnum.GRAPHIC_RESIZE, [GraphicResizeEventHandler]],\n      [EventStateEnum.GRAPHIC_ROTATE, [GraphicRotateEventHandler]],\n    ]);\n  }\n\n  /**\n   * eventState에 맞는 eventHandlerList를 반환합니다.\n   *\n   * @param eventState 현재 app의 eventState\n   * @returns eventState에 맞는 eventHandlerList\n   */\n  @boundMethod\n  public get(eventState: EventStateEnum): Nullable<EventHandler[]> {\n    return this.eventMap.get(eventState);\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport EventMapper from 'store/manager/event/EventMapper';\nimport KeyEvent from 'store/manager/event/wrapper/KeyEvent';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\nimport WheelEvent from 'store/manager/event/wrapper/WheelEvent';\n\n/**\n * event를 처리하는 manager입니다\n * 각 event 별로 처리하는 함수를 가지고 있습니다.\n * 각 함수 내부에서는 event와 state에 맞는 event handler를 가져와서 실행합니다.\n */\nexport default class EventManager {\n  /**\n   * state 에 따른 event handler list 를 보관하는 자료구조 입니다.\n   */\n  private readonly eventMap: EventMapper;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.eventMap = new EventMapper();\n  }\n\n  /**\n   * MouseDown event를 해석합니다.\n   *\n   * @param event mouse event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onMouseDown(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onMouseDown(event, ctx));\n  }\n\n  /**\n   * MouseUp event를 해석합니다.\n   *\n   * @param event mouse event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onMouseUp(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onMouseUp(event, ctx));\n  }\n\n  /**\n   * MouseMove event를 해석합니다.\n   *\n   * @param event mouse event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onMouseMove(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onMouseMove(event, ctx));\n  }\n\n  /**\n   * MouseDrag event를 해석합니다.\n   *\n   * @param event mouse event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onDrag(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onDrag(event, ctx));\n  }\n\n  /**\n   * MouseWheel event를 해석합니다.\n   *\n   * @param event wheel event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onWheel(event: WheelEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onWheel(event, ctx));\n  }\n\n  /**\n   * KeyDown event를 해석합니다.\n   *\n   * @param event key event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onKeyDown(event: KeyEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onKeyDown(event, ctx));\n  }\n\n  /**\n   * KeyUp event를 해석합니다.\n   *\n   * @param event key event\n   * @param ctx 현재 app의 정보를 담고 있는 AppContext\n   */\n  @boundMethod\n  public onKeyUp(event: KeyEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onKeyUp(event, ctx));\n  }\n\n  @boundMethod\n  public onAppAreaMouseDown(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onAppAreaMouseDown(event, ctx));\n  }\n\n  @boundMethod\n  public onAppAreaMouseUp(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onAppAreaMouseUp(event, ctx));\n  }\n\n  @boundMethod\n  public onAppAreaMouseMove(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onAppAreaMouseMove(event, ctx));\n  }\n\n  @boundMethod\n  public onAppAreaDrag(event: MouseEvent, ctx: AppContext): void {\n    this.eventMap\n      .get(ctx.getEditableContext().getEventState())\n      ?.some(handler => handler.onAppAreaDrag(event, ctx));\n  }\n}\n","import AppContext from 'store/context/AppContext';\n\n/**\n * 사용자의 Selection 상태를 보여주기 위한 Object들을 관리하는 Class입니다.\n */\nexport default class SelectionManager {\n  /**\n   * 생성자\n   */\n  public constructor() {\n    // need implementation\n  }\n\n  /**\n   * AppContext에 eventState와 selection을 새롭게 설정합니다.\n   *\n   * @param ctx 변경이 필요한 AppContext\n   */\n  public updateSelection(ctx: AppContext): void {\n    const editableContext = ctx.getEditableContext();\n    const commandProps = editableContext.getCommandProps();\n\n    if (commandProps !== undefined) {\n      const { newEventState, newSelectionContainer } = commandProps;\n      if (newEventState !== undefined) {\n        editableContext.setEventState(newEventState);\n      }\n      if (newSelectionContainer !== undefined) {\n        editableContext.setSelectionContainer(newSelectionContainer);\n      }\n      editableContext.getGraphicEditInfoContainer().requestRerenderSelectionLayer(ctx);\n    }\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport AppContext from 'store/context/AppContext';\nimport CommandManager from 'store/manager/command/CommandManager';\nimport EventManager from 'store/manager/event/EventManager';\nimport KeyEvent from 'store/manager/event/wrapper/KeyEvent';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\nimport WheelEvent from 'store/manager/event/wrapper/WheelEvent';\nimport SelectionManager from 'store/manager/selection/SelectionManager';\nimport { IManagerExcutionOptions } from 'types/store/AppStoreTypes';\nimport { ICommandProps } from 'types/store/command/CommandTypes';\n\n/**\n * App의 상태를 관리하는 class 입니다.\n * 상태 정보를 담고있는 AppContext를 가지고 있으며,\n * context를 변경할 수 있는 manager를 가지고 있습니다.\n * event 가 발생하면 AppStore의 event 처리 함수를 호출하여 context를 변경합니다.\n */\nexport default class AppStore {\n  /**\n   * app의 전반적인 정보를 담고있는 인스턴스 입니다.\n   */\n  private readonly ctx: AppContext;\n\n  /**\n   * Event handling 을 담당하는 인스턴스 입니다.\n   */\n  private readonly eventManager: EventManager;\n\n  /**\n   * Command handling 을 담당하는 인스턴스 입니다.\n   */\n  private readonly commandManager: CommandManager;\n\n  /**\n   * selection update 를 담당하는 인스턴스 입니다.\n   */\n  private readonly selectionManager: SelectionManager;\n\n  /**\n   * 생성자\n   */\n  public constructor() {\n    this.ctx = new AppContext({\n      readOnlyContextInitProp: { handleCommandEventFunction: this.handleCommandEvent },\n      editableContextInitProp: {},\n    });\n    this.commandManager = new CommandManager();\n    this.eventManager = new EventManager();\n    this.selectionManager = new SelectionManager();\n  }\n\n  /**\n   * AppContext를 반환합니다.\n   *\n   * @returns app의 정보를 담고 있는 context\n   */\n  @boundMethod\n  public getAppContext(): AppContext {\n    return this.ctx;\n  }\n\n  /**\n   * Event 시작 전 휘발성이 있는 context 를 초기화 합니다.\n   */\n  @boundMethod\n  private initExecutionProps(commandProps?: ICommandProps): void {\n    const editableContext = this.ctx.getEditableContext();\n    editableContext.setCommandProps(commandProps);\n    editableContext.setCommandController(undefined);\n  }\n\n  /**\n   * event 처리를 하는 함수입니다..\n   * Event -> Command -> Selection 순으로 처리합니다.\n   *\n   * @param param0.eventType - 실행할 이벤트의 타입\n   * @param param0.event - 실행할 이벤트 객체\n   * @param param0.commandProps - 명령 실행에 필요한 속성\n   */\n  @boundMethod\n  private executeAllManagers<T extends keyof EventManager>({\n    eventType,\n    event,\n    commandProps,\n  }: IManagerExcutionOptions<T>): void {\n    this.initExecutionProps(commandProps);\n\n    if (eventType && event) {\n      const eventHandler = this.eventManager[eventType] as (\n        event: Parameters<EventManager[T]>[0],\n        ctx: AppContext\n      ) => void;\n      if (typeof eventHandler === 'function') {\n        eventHandler(event as Parameters<EventManager[T]>[0], this.ctx);\n      }\n    }\n\n    this.commandManager.execute(this.ctx);\n    this.selectionManager.updateSelection(this.ctx);\n\n    this.getAppContext().getEditableContext().flushRerenderTriggerList();\n  }\n\n  /**\n   * event의 해석 없이 command의 실행을 하는 함수입니다.\n   *\n   * @param commandProps 실행 할 command의 정보를 담은 prop\n   */\n  @boundMethod\n  public handleCommandEvent(commandProps: ICommandProps): void {\n    this.executeAllManagers({ commandProps });\n  }\n\n  /**\n   * MouseDown event를 처리하는 함수입니다.\n   *\n   * @param event MouseEvent\n   */\n  @boundMethod\n  public handleMouseDown(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onMouseDown' });\n  }\n\n  /**\n   * MouseUp event를 처리하는 함수입니다.\n   *\n   * @param event MouseEvent\n   */\n  @boundMethod\n  public handleMouseUp(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onMouseUp' });\n  }\n\n  /**\n   * MouseMove event를 처리하는 함수입니다.\n   *\n   * @param event MouseEvent\n   */\n  @boundMethod\n  public handleMouseMove(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onMouseMove' });\n  }\n\n  /**\n   * MouseDrag event를 처리하는 함수입니다.\n   *\n   * @param event MouseEvent\n   */\n  @boundMethod\n  public handleDrag(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onDrag' });\n  }\n\n  /**\n   * MouseWheel event를 처리하는 함수입니다.\n   *\n   * @param event WheelEvent\n   */\n  @boundMethod\n  public handleWheel(event: WheelEvent): void {\n    this.executeAllManagers({ event, eventType: 'onWheel' });\n  }\n\n  /**\n   * KeyDown event를 처리하는 함수입니다.\n   *\n   * @param event KeyEvent\n   */\n  @boundMethod\n  public handleKeyDown(event: KeyEvent): void {\n    this.executeAllManagers({ event, eventType: 'onKeyDown' });\n  }\n\n  /**\n   * KeyUp event를 처리하는 함수입니다.\n   *\n   * @param event KeyEvent\n   */\n  @boundMethod\n  public handleKeyUp(event: KeyEvent): void {\n    this.executeAllManagers({ event, eventType: 'onKeyUp' });\n  }\n\n  @boundMethod\n  public handleAppAreaMouseDown(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onAppAreaMouseDown' });\n  }\n\n  @boundMethod\n  public handleAppAreaMouseUp(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onAppAreaMouseUp' });\n  }\n\n  @boundMethod\n  public handleAppAreaMouseMove(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onAppAreaMouseMove' });\n  }\n\n  @boundMethod\n  public handleAppAreaDrag(event: MouseEvent): void {\n    this.executeAllManagers({ event, eventType: 'onAppAreaDrag' });\n  }\n}\n","import { createContext } from 'react';\nimport AppStore from 'store/AppStore';\n\n/**\n * AppStore의 instance를 사용할 수 있도록 하는 context 입니다.\n */\nexport const AppStoreContext = createContext<AppStore>(new AppStore());\nconst AppStoreProvider = AppStoreContext.Provider;\n\nexport default AppStoreProvider;\n","import { useContext } from 'react';\nimport AppStore from 'store/AppStore';\nimport { AppStoreContext } from 'store/AppStoreProvider';\n\n/**\n * AppStore 를 반환합니다.\n *\n * @returns AppStore\n */\nconst useAppStore = (): AppStore => useContext(AppStoreContext);\n\nexport default useAppStore;\n","import i18next, { i18n as I18n } from 'i18next';\nimport Backend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\n/**\n * i18n 관련 초기화 함수입니다.\n *\n * @returns i18next instance\n */\nconst i18nInit = (): I18n => {\n  if (i18next.isInitialized === true) {\n    return i18next;\n  }\n\n  i18next\n    .use(Backend((lng: string, ns: string) => import(`resource/${lng}/${ns}`)))\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n      fallbackLng: 'ko',\n      load: 'languageOnly',\n      keySeparator: false,\n      nsSeparator: false,\n      interpolation: {\n        escapeValue: false,\n      },\n      defaultNS: 'ResourceData.json',\n      ns: ['ResourceData.json'],\n      fallbackNS: ['ResourceData.json'],\n      react: {\n        useSuspense: true,\n        nsMode: 'fallback',\n      },\n    });\n\n  return i18next;\n};\n\nexport default i18nInit;\n","import getControl from 'component/frame/control/getControl';\nimport useAppStore from 'hook/store/useAppStore';\nimport React from 'react';\nimport { IWithControlHandlerComponentProps } from 'types/component/frame/contolhandler/WithControlHandlerTypes';\n\n/**\n * Control을 감싸 추가적인 기능을 부여하는 HOC 입니다.\n *\n * @param param0 IWithControlHandlerComponentProps control의 정보\n */\nconst WithControlHandlerComponent = ({\n  controlInfo,\n}: IWithControlHandlerComponentProps): React.JSX.Element => {\n  const appStore = useAppStore();\n  const editableContext = appStore.getAppContext().getEditableContext();\n  const uiContainer = editableContext.getUIContainer();\n  const controlHandlerContainer = uiContainer.getControlHandlerContainer();\n\n  const Control = getControl(controlInfo.type);\n\n  const handledControlProps = controlInfo.attr.commandId\n    ? controlHandlerContainer.getHandledControlProps(controlInfo, appStore)\n    : undefined;\n  const subControlInfos = handledControlProps?.subControlInfos ?? controlInfo.subControlInfos;\n  const children = handledControlProps?.children;\n  const eventhandler = { ...(handledControlProps?.eventhandler ?? controlInfo.eventhandler) };\n\n  return (\n    <Control\n      attr={{\n        ...controlInfo.attr,\n        ...handledControlProps?.attr,\n      }}\n      subControlInfos={subControlInfos}\n      eventhandler={eventhandler}\n    >\n      {children}\n    </Control>\n  );\n};\n\nexport default WithControlHandlerComponent;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./ArrowButton.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { IArrowButtonProps } from 'types/component/frame/control/button/ArrowButtonTypes';\nimport IconButtonComponent from 'component/frame/control/button/IconButtonComponent';\n\nimport styles from 'scss/component/frame/control/button/ArrowButton.module.scss';\n\n/**\n * 화살표 모양의 이미지를 포함하는 button을 생성합니다.\n *\n * @param param0 IArrowButtonProps ArrowButton 정보\n */\nconst ArrowButtonComponent = ({ attr, eventhandler }: IArrowButtonProps): React.JSX.Element => {\n  return (\n    <IconButtonComponent\n      img={ResourceEnum.IMG_ARROW_DOWN}\n      width={attr?.width}\n      height={attr?.height}\n      className={classNames({\n        [styles.container]: true,\n        [styles[attr?.arrowType ?? '']]: attr?.arrowType,\n        [styles.disabled]: attr?.disabled,\n        [`${attr?.className}`]: attr?.className,\n      })}\n      disabled={attr?.disabled}\n      onClick={eventhandler?.onClick}\n      onMouseEnter={eventhandler?.onMouseEnter}\n      onMouseLeave={eventhandler?.onMouseLeave}\n    />\n  );\n};\n\nexport default React.memo(ArrowButtonComponent);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { IControlProps } from 'types/component/frame/control/ControlTypes';\nimport IconButtonComponent from 'component/frame/control/button/IconButtonComponent';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\n\nimport styles from 'scss/component/frame/control/button/ArrowButton.module.scss';\n\n/**\n * RibbonGallery의 dropdown 확장 버튼을 생성하는 component 입니다.\n *\n * @param param0 IControlProps control 관련 정보\n */\nconst MoreItemsGalleryArrowButtonComponent = ({\n  attr,\n  eventhandler,\n}: IControlProps): React.JSX.Element => {\n  return (\n    <IconButtonComponent\n      className={classNames({\n        [styles.container]: true,\n        [styles.more]: true,\n        [styles.disabled]: attr?.disabled,\n        [`${attr?.className}`]: attr?.className,\n      })}\n      img={ResourceEnum.IMG_RIBBON_GALLERY_MORE_BUTTON}\n      width=\"7px\"\n      height=\"9px\"\n      disabled={attr.disabled}\n      onClick={eventhandler?.onClick}\n      onMouseEnter={eventhandler?.onMouseEnter}\n      onMouseLeave={eventhandler?.onMouseLeave}\n    />\n  );\n};\n\nexport default MoreItemsGalleryArrowButtonComponent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport DropdownMenuFactoryComponent from 'component/frame/control/dropdown/menu/DropdownMenuFactoryComponent';\nimport { IDropdownMenuItemGroupProps } from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\n\nimport styles from 'scss/component/frame/control/dropdown/menu/DropdownMenuItemGroup.module.scss';\n\n/**\n * 하위에 여러개의 menu item을 가지는 group 형태의 component 입니다.\n *\n * @param param0 IDropdownMenuItemGroupProps group 정보\n */\nconst DropdownMenuItemGroupComponent = ({\n  dropdownMenuItemGroupInfo,\n  closeAllMenu,\n}: IDropdownMenuItemGroupProps): React.JSX.Element => {\n  const { className, subType, dropdownMenuSubItemInfos, onMouseLeave, onClick, closeOnClick } =\n    dropdownMenuItemGroupInfo;\n\n  return (\n    <div\n      className={classNames({\n        [styles.container]: true,\n        [styles[subType ?? '']]: subType,\n        [`${className}`]: className,\n      })}\n      onMouseLeave={onMouseLeave}\n      onClick={() => {\n        if (closeOnClick) {\n          closeAllMenu();\n        }\n        if (onClick) {\n          onClick();\n        }\n      }}\n      aria-hidden\n    >\n      {dropdownMenuSubItemInfos.map((dropdownMenuSubItemInfo, index) => {\n        return (\n          <DropdownMenuFactoryComponent\n            dropdownMenuSubItemInfo={dropdownMenuSubItemInfo}\n            closeAllMenu={closeAllMenu}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`menu_${dropdownMenuSubItemInfo.type}_${index}`}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DropdownMenuItemGroupComponent;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DropdownMenuItem.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport { IDropdownMenuItemProps } from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\nimport IconComponent from 'component/frame/control/button/IconComponent';\nimport { ReactKeyEnum } from 'types/resource/ReactKeyEnum';\n\nimport styles from 'scss/component/frame/control/dropdown/menu/DropdownMenuItem.module.scss';\n\n/**\n * Dropdown에서 사용하는 menu item을 생성하는 component 입니다.\n * DropdownMenuItemFactoryComponent 에서 호출합니다.\n *\n * @param param0 IDropdownMenuItemProps menu item 정보\n */\nconst DropdownMenuItemComponent = ({\n  dropdownMenuItemInfo,\n  closeAllMenu,\n}: IDropdownMenuItemProps): React.JSX.Element => {\n  switch (dropdownMenuItemInfo.subType) {\n    case 'a1':\n      return (\n        <IconComponent\n          attr={{\n            reactKey: ReactKeyEnum.INVALID,\n            className: styles.content,\n            img: dropdownMenuItemInfo.img,\n            width: dropdownMenuItemInfo.imgWidth,\n            height: dropdownMenuItemInfo.imgHeight,\n          }}\n        >\n          {[dropdownMenuItemInfo.children]}\n        </IconComponent>\n      );\n    default:\n      return <>{dropdownMenuItemInfo.children}</>;\n  }\n};\n\n/**\n * subType에 따른 여러 종류의 menu item을 생성하는 factory component 입니다.\n *\n * @param param0 IDropdownMenuItemProps menu item 정보\n */\nconst DropdownMenuItemFactoryComponent = ({\n  dropdownMenuItemInfo,\n  closeAllMenu,\n}: IDropdownMenuItemProps): React.JSX.Element => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  return (\n    <div\n      role=\"menuitem\"\n      tabIndex={-1}\n      className={classNames({\n        [styles.container]: true,\n        [styles.disabled]: dropdownMenuItemInfo.disabled,\n        [styles.selected]: dropdownMenuItemInfo.selected,\n        [styles[dropdownMenuItemInfo.subType]]: true,\n        [`${dropdownMenuItemInfo.className}`]: dropdownMenuItemInfo.className,\n      })}\n      ref={ref}\n      style={dropdownMenuItemInfo.style}\n      onClick={() => {\n        closeAllMenu();\n\n        dropdownMenuItemInfo.onClick?.();\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter') {\n          ref.current?.click();\n        }\n      }}\n    >\n      <DropdownMenuItemComponent\n        dropdownMenuItemInfo={dropdownMenuItemInfo}\n        closeAllMenu={closeAllMenu}\n      />\n    </div>\n  );\n};\n\nexport default DropdownMenuItemFactoryComponent;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DropdownMenuSeparator.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport { IDropdownMenuSeparatorProps } from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\n\nimport styles from 'scss/component/frame/control/dropdown/menu/DropdownMenuSeparator.module.scss';\n\n/**\n * Dropdown 내부의 separator를 생성하는 component 입니다.\n *\n * @param param0 IDropdownMenuSeparatorProps separator 정보\n */\nconst DropdownMenuSeparatorComponent = ({\n  dropdownMenuSeparatorInfo,\n}: IDropdownMenuSeparatorProps): React.JSX.Element => {\n  return (\n    <div>\n      <div\n        className={classNames({\n          [styles.line]: true,\n          [styles[dropdownMenuSeparatorInfo.subType ?? '']]: dropdownMenuSeparatorInfo.subType,\n        })}\n      />\n    </div>\n  );\n};\n\nexport default DropdownMenuSeparatorComponent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { ILabelProps } from 'types/component/frame/control/label/LabelTypes';\nimport useTextRes from 'hook/resource/useTextRes';\n\n/**\n * 주어진 resourceId를 기준으로 label을 생성합니다.\n */\nconst LabelComponent = ({ attr, eventhandler, children }: ILabelProps): React.JSX.Element => {\n  const label = useTextRes(attr?.label);\n  return (\n    <label\n      className={classNames({\n        [`${attr?.className}`]: attr?.className,\n      })}\n      onMouseEnter={eventhandler?.onMouseEnter}\n      htmlFor={attr?.htmlFor}\n    >\n      {label}\n      {children}\n    </label>\n  );\n};\n\nexport default LabelComponent;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./DropdownMenuTitle.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport { IDropdownMenuTitleProps } from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\nimport LabelComponent from 'component/frame/control/label/LabelComponent';\nimport { ReactKeyEnum } from 'types/resource/ReactKeyEnum';\n\nimport styles from 'scss/component/frame/control/dropdown/menu/DropdownMenuTitle.module.scss';\n\n/**\n * DropdownMenu 내부의 title을 생성하는 component 입니다.\n *\n * @param param0 IDropdownMenuTitleProps title 정보\n */\nconst DropdownMenuTitleComponent = ({\n  dropdownMenuTitleInfo,\n}: IDropdownMenuTitleProps): React.JSX.Element => {\n  return (\n    <div\n      className={classNames({\n        [styles.container]: true,\n        [`${dropdownMenuTitleInfo.className}`]: dropdownMenuTitleInfo.className,\n      })}\n    >\n      <LabelComponent\n        attr={{\n          reactKey: ReactKeyEnum.INVALID,\n          label: dropdownMenuTitleInfo.label,\n          className: classNames(styles.content),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DropdownMenuTitleComponent;\n","import React from 'react';\nimport { IDropdownMenuFactoryProps } from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\nimport DropdownMenuItemGroupComponent from 'component/frame/control/dropdown/menu/DropdownMenuItemGroupComponent';\nimport DropdownMenuItemFactoryComponent from 'component/frame/control/dropdown/menu/DropdownMenuItemFactoryComponent';\nimport DropdownMenuSeparatorComponent from 'component/frame/control/dropdown/menu/DropdownMenuSeparatorComponent';\nimport DropdownMenuTitleComponent from 'component/frame/control/dropdown/menu/DropdownMenuTitleComponent';\n\n/**\n * DropdownMenu 하위 요소를 type 별로 구분하여 생성하는 factory component 입니다.\n *\n * @param param0 IDropdownMenuFactoryProps menu control 정보\n */\nconst DropdownMenuFactoryComponent = ({\n  dropdownMenuSubItemInfo,\n  closeAllMenu,\n}: IDropdownMenuFactoryProps): React.JSX.Element => {\n  switch (dropdownMenuSubItemInfo.type) {\n    case 'title':\n      return <DropdownMenuTitleComponent dropdownMenuTitleInfo={dropdownMenuSubItemInfo} />;\n    case 'group':\n      return (\n        <DropdownMenuItemGroupComponent\n          dropdownMenuItemGroupInfo={dropdownMenuSubItemInfo}\n          closeAllMenu={closeAllMenu}\n        />\n      );\n    case 'separator':\n      return <DropdownMenuSeparatorComponent dropdownMenuSeparatorInfo={dropdownMenuSubItemInfo} />;\n    default:\n      return (\n        <DropdownMenuItemFactoryComponent\n          dropdownMenuItemInfo={dropdownMenuSubItemInfo}\n          closeAllMenu={closeAllMenu}\n        />\n      );\n  }\n};\n\nexport default DropdownMenuFactoryComponent;\n","import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { IDropdownMenuProps } from 'types/component/frame/control/dropdown/menu/DropdownMenuTypes';\nimport DropdownMenuFactoryComponent from 'component/frame/control/dropdown/menu/DropdownMenuFactoryComponent';\n\nimport styles from 'scss/component/frame/control/dropdown/menu/DropdownMenu.module.scss';\n\n/**\n * DropdownMenu를 생성하는 component 입니다.\n *\n * @param IDropdownMenuProps DropdownMenu 정보\n */\nconst DropdownMenuComponent = forwardRef<HTMLDivElement, IDropdownMenuProps>(\n  ({ dropdownMenuInfo, closeAllMenu }: IDropdownMenuProps, ref): React.JSX.Element => {\n    return (\n      <div\n        ref={ref}\n        tabIndex={-1}\n        className={classNames({\n          [styles.container]: true,\n          [styles[dropdownMenuInfo.subType ?? '']]: dropdownMenuInfo.subType,\n          [`${dropdownMenuInfo.className}`]: dropdownMenuInfo.className,\n        })}\n        role=\"menu\"\n      >\n        {dropdownMenuInfo.dropdownMenuSubItemInfos.map((dropdownMenuSubItemInfo, index: number) => {\n          return (\n            <DropdownMenuFactoryComponent\n              dropdownMenuSubItemInfo={dropdownMenuSubItemInfo}\n              closeAllMenu={closeAllMenu}\n              // eslint-disable-next-line react/no-array-index-key\n              key={`menu_${dropdownMenuSubItemInfo.type}_${index}`}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nexport default DropdownMenuComponent;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./RibbonGallery.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./RibbonGroupLabelArea.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport { IControlProps } from 'types/component/frame/control/ControlTypes';\nimport useTextRes from 'hook/resource/useTextRes';\n\nimport styles from 'scss/component/frame/ribbon/group/RibbonGroupLabelArea.module.scss';\n\n/**\n * RibbonGroup 하단의 설명을 표시하는 label 입니다.\n *\n * @param param0 controlProps, RibbonGroup의 정보\n */\nconst RibbonGroupLabelAreaComponent = ({ attr }: IControlProps): React.JSX.Element => {\n  return (\n    <div className={styles.container}>\n      <span>{useTextRes(attr?.label)}</span>\n    </div>\n  );\n};\n\nexport default RibbonGroupLabelAreaComponent;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./RibbonGroup.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import RibbonGalleryComponent from 'component/frame/control/gallery/RibbonGalleryComponent';\nimport RibbonGalleryItemComponent from 'component/frame/control/gallery/RibbonGalleryItemComponent';\nimport RibbonLabelComponent from 'component/frame/control/label/RibbonLabelComponent';\nimport RibbonGroupComponent from 'component/frame/ribbon/group/RibbonGroupComponent';\nimport { ControlTypeEnum } from 'types/component/frame/control/ControlTypeEnum';\nimport { ControlType } from 'types/component/frame/control/ControlTypes';\n\n/**\n * ControlType에 따른 Control을 관리하는 map 입니다.\n */\nconst controlMap: Map<ControlTypeEnum, ControlType> = new Map([\n  [ControlTypeEnum.RIBBON_GROUP, RibbonGroupComponent],\n  [ControlTypeEnum.RIBBON_GALLERY, RibbonGalleryComponent],\n  [ControlTypeEnum.RIBBON_GALLERY_ITEM, RibbonGalleryItemComponent],\n  [ControlTypeEnum.RIBBON_LABEL, RibbonLabelComponent],\n]);\n\n/**\n * controlType에 해당하는 control을 반환합니다.\n *\n * @param controlType 원하는 control을 상징하는 ControlTypeEnum\n * @returns controlType에 해당하는 control\n */\nconst getControl = (controlType: ControlTypeEnum): ControlType => {\n  return controlMap.get(controlType) as ControlType;\n};\n\nexport default getControl;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { IControlInfo, IControlProps } from 'types/component/frame/control/ControlTypes';\nimport WithControlHandlerComponent from 'component/frame/controlhandler/WithControlHandlerComponent';\nimport RibbonGroupLabelAreaComponent from 'component/frame/ribbon/group/RibbonGroupLabelAreaComponent';\n\nimport styles from 'scss/component/frame/ribbon/group/RibbonGroup.module.scss';\n\n/**\n * Ribbon 내부에 실질적인 control들을 자식으로 가지면 공통된 style을 부여하는 component 입니다.\n *\n * @param param0 controlProps, RibbonGroup의 정보\n */\nconst RibbonGroupComponent = ({ attr, subControlInfos }: IControlProps): React.JSX.Element => {\n  return (\n    <div className={styles.container}>\n      <div\n        className={classNames({\n          [styles[attr?.subType ?? '']]: attr?.subType,\n          [`${attr?.className}`]: attr?.className,\n        })}\n      >\n        {subControlInfos !== undefined &&\n          subControlInfos.map((controlInfo: IControlInfo) => {\n            return (\n              <div\n                key={attr.reactKey}\n                className={classNames({\n                  [styles.item]: true,\n                  [styles[controlInfo.attr.subType ?? '']]: controlInfo.attr.subType,\n                })}\n              >\n                <WithControlHandlerComponent controlInfo={controlInfo} />\n              </div>\n            );\n          })}\n      </div>\n      <RibbonGroupLabelAreaComponent attr={attr} />\n    </div>\n  );\n};\nexport default RibbonGroupComponent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { IControlInfo } from 'types/component/frame/control/ControlTypes';\nimport { IRibbonGalleryProps } from 'types/component/frame/control/gallery/RibbonGalleryTypes';\nimport useDropdownMenu from 'hook/component/frame/control/dropdown/useDropdownMenu';\nimport WithControlHandlerComponent from 'component/frame/controlhandler/WithControlHandlerComponent';\nimport ArrowButtonComponent from 'component/frame/control/button/ArrowButtonComponent';\nimport MoreItemsGalleryArrowButtonComponent from 'component/frame/control/button/MoreItemsGalleryArrowButtonComponent';\nimport DropdownMenuComponent from 'component/frame/control/dropdown/menu/DropdownMenuComponent';\nimport { ReactKeyEnum } from 'types/resource/ReactKeyEnum';\n\nimport styles from 'scss/component/frame/control/gallery/RibbonGallery.module.scss';\n\n/**\n * Ribbon 내부의 Gallery를 생성하는 component 입니다.\n *\n * @param param0 IRibbonGalleryProps Gallery 정보\n */\nconst RibbonGalleryComponent = ({\n  attr,\n  subControlInfos,\n  children,\n  eventhandler,\n}: IRibbonGalleryProps): React.JSX.Element => {\n  const { isOpen, targetRef, menuRef, toggleMenu, closeMenu } = useDropdownMenu();\n\n  return (\n    <>\n      <div\n        role=\"group\"\n        className={classNames({\n          [styles.container]: true,\n          [styles[attr?.subType ?? '']]: attr?.subType,\n          [`${attr?.className}`]: attr?.className,\n        })}\n        ref={targetRef}\n      >\n        {children}\n        <div\n          className={classNames({\n            [styles.content]: true,\n            [styles[attr?.subType ?? '']]: attr?.subType,\n          })}\n        >\n          {subControlInfos !== undefined &&\n            subControlInfos.map((controlInfo: IControlInfo) => {\n              return (\n                <WithControlHandlerComponent\n                  controlInfo={controlInfo}\n                  key={controlInfo.attr.reactKey}\n                />\n              );\n            })}\n        </div>\n        <div className={classNames({ [styles['arrow-container']]: true })}>\n          <ArrowButtonComponent\n            attr={{\n              reactKey: ReactKeyEnum.INVALID,\n              className: classNames({ [styles.arrow]: true, [styles.up]: true }),\n              arrowType: 'up',\n              width: '8px',\n              height: '8px',\n              disabled: attr?.disableUpButton,\n            }}\n            eventhandler={{\n              onClick: eventhandler?.onArrowUpButtonClick,\n              onMouseLeave: eventhandler?.onMouseLeave,\n            }}\n          />\n          <ArrowButtonComponent\n            attr={{\n              reactKey: ReactKeyEnum.INVALID,\n              className: classNames({ [styles.arrow]: true, [styles.down]: true }),\n              arrowType: 'down',\n              width: '8px',\n              height: '8px',\n              disabled: attr?.disableDownButton,\n            }}\n            eventhandler={{\n              onClick: eventhandler?.onArrowDownButtonClick,\n              onMouseLeave: eventhandler?.onMouseLeave,\n            }}\n          />\n          <MoreItemsGalleryArrowButtonComponent\n            attr={{\n              reactKey: ReactKeyEnum.INVALID,\n              className: classNames({ [styles.arrow]: true, [styles.more]: true }),\n              disabled: attr?.disableMoreButton,\n            }}\n            eventhandler={{\n              onClick: e => {\n                toggleMenu();\n                if (eventhandler?.onClick) {\n                  eventhandler?.onClick(e);\n                }\n              },\n              onMouseLeave: eventhandler?.onMouseLeave,\n            }}\n          />\n        </div>\n      </div>\n      {isOpen && attr?.dropdownMenuInfo && (\n        <DropdownMenuComponent\n          closeAllMenu={closeMenu}\n          dropdownMenuInfo={attr?.dropdownMenuInfo}\n          ref={menuRef}\n        />\n      )}\n    </>\n  );\n};\n\nexport default RibbonGalleryComponent;\n","import React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\n\n/**\n * useDropdownMenu의 hook으로서의 type 정의입니다.\n *\n * input ->\\\n * null\n *\n * output ->\\\n * targetRef: dropdownMenu가 부착 될 HTML 요소의 ref 입니다.\\\n * menuRef: dropdownMenu의 ref 입니다. 생성하는 dropdownMenu의 HTML 요소에 적용해야 합니다.\\\n * isOpen: dropdownMenu가 현지 열려있는지 여부입니다.\\\n * openMenu: dropdownMenu를 엽니다.\\\n * closeMenu: dropdownMenu를 닫습니다.\\\n * toggleMenu: dropdownMenu를 toggle 합니다.\n */\ntype Hook = () => {\n  isOpen: boolean;\n  toggleMenu: () => void;\n  openMenu: () => void;\n  closeMenu: () => void;\n  targetRef: React.MutableRefObject<HTMLDivElement | null>;\n  menuRef: React.RefObject<HTMLDivElement>;\n};\n\n/**\n * dropdown이 페이지를 넘어가게 되는 경우 scroll을 표시하기 위한 계산 값입니다.\n */\nconst SCROLLBAR_WIDTH = 16;\nconst DROPDOWN_MARGIN = 10;\n\n/**\n * dropdownMenu의 표시 동작과 관련 된 연산을 하는 hook 입니다.\n * dropdown이 표시 될 위치와 표시 여부를 처리합니다.\n *\n * @returns\n * targetRef: dropdownMenu가 부착 될 HTML 요소의 ref 입니다.\\\n * menuRef: dropdownMenu의 ref 입니다. 생성하는 dropdownMenu의 HTML 요소에 적용해야 합니다.\\\n * isOpen: dropdownMenu가 현지 열려있는지 여부입니다.\\\n * openMenu: dropdownMenu를 엽니다.\\\n * closeMenu: dropdownMenu를 닫습니다.\\\n * toggleMenu: dropdownMenu를 toggle 합니다.\n */\nconst useDropdownMenu: Hook = () => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const targetRef = useRef<HTMLDivElement | null>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  /**\n   * DropdownMenu, DropdownButton 외 영역 클릭 시 Menu 를 닫음\n   */\n  const closeOnClickOutside = useCallback((e: MouseEvent) => {\n    const eventTarget = e.target;\n    // eslint-disable-next-line no-restricted-syntax\n    if (eventTarget instanceof Element && menuRef.current?.contains(eventTarget)) {\n      return;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    if (eventTarget instanceof HTMLInputElement && targetRef.current?.contains(eventTarget)) {\n      return;\n    }\n    e.stopPropagation();\n    setIsOpen(false);\n  }, []);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('click', closeOnClickOutside, true);\n    } else {\n      document.removeEventListener('click', closeOnClickOutside, true);\n    }\n    return () => {\n      document.removeEventListener('click', closeOnClickOutside, true);\n    };\n  }, [isOpen]);\n\n  const openMenu = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const closeMenu = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const toggleMenu = useCallback(() => {\n    if (isOpen) {\n      closeMenu();\n    } else {\n      openMenu();\n    }\n  }, [isOpen]);\n\n  useLayoutEffect(() => {\n    if (!targetRef.current || !menuRef.current) {\n      return;\n    }\n\n    menuRef.current.style.height = 'auto';\n\n    const {\n      left: targetLeft,\n      bottom: targetBottom,\n      width: targetWidth,\n    } = targetRef.current.getBoundingClientRect();\n    const { width: menuWidth, height: menuHeight } = menuRef.current.getBoundingClientRect();\n\n    const top = targetBottom;\n    let left = targetLeft;\n    const bottom = top + menuHeight;\n    let right = left + menuWidth;\n\n    // 기본으로는 undefined 이기 때문에\n    // 별도로 width, height 를 설정하지 않으면 style로도 적용이 안됨\n    let width;\n    let height;\n\n    const containerHeight = window.innerHeight || document.documentElement.clientHeight;\n    const containerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n    // dropdownMenu 크기가 윈도우 아래로 넘어갈 경우\n    if (bottom > containerHeight) {\n      const overflow = bottom - containerHeight;\n      // height 를 줄여 바닥에서 조금 떨어지게 설정\n      height = menuHeight - overflow - DROPDOWN_MARGIN;\n      right += SCROLLBAR_WIDTH;\n      // scroll bar 너비만큼 실제 크기를 늘려서 dropdownMenu의 레이아웃 보정\n      width = menuWidth + SCROLLBAR_WIDTH;\n    }\n\n    // 운도우 우측으로 넘어가는 경우에 대한 처리\n    // 부모 control의 우측 하단 기준으로 위치 조정\n    if (right >= containerWidth) {\n      left = left - menuWidth + targetWidth;\n    }\n\n    menuRef.current.style.top = `${top}px`;\n    menuRef.current.style.left = `${left}px`;\n    menuRef.current.style.height = `${height}px`;\n    menuRef.current.style.width = `${width}px`;\n  }, [isOpen, targetRef.current]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    function handleResize() {\n      setIsOpen(false);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [isOpen]);\n\n  return {\n    targetRef,\n    menuRef,\n    isOpen,\n    openMenu,\n    toggleMenu,\n    closeMenu,\n  };\n};\n\nexport default useDropdownMenu;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./RibbonGroupWrapper.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import getControl from 'component/frame/control/getControl';\nimport React from 'react';\nimport { RibbonData } from 'resource/ribbon/RibbonData';\nimport { IControlInfo } from 'types/component/frame/control/ControlTypes';\n\nimport styles from 'scss/component/frame/ribbon/group/RibbonGroupWrapper.module.scss';\n\n/**\n * RibbonComponent 바로 아래의 Component 입니다, 여러개의 RibbonGroup을 render 합니다.\n */\nconst RibbonGroupWrapperComponent = (): React.JSX.Element => {\n  return (\n    <div className={styles.container}>\n      {RibbonData.map((controlInfo: IControlInfo) => {\n        const Control = getControl(controlInfo.type);\n        return (\n          <Control\n            key={controlInfo.attr.reactKey}\n            attr={controlInfo.attr}\n            subControlInfos={controlInfo.subControlInfos}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RibbonGroupWrapperComponent;\n","import RibbonGroupWrapperComponent from 'component/frame/ribbon/group/RibbonGroupWrapperComponent';\nimport useAppStore from 'hook/store/useAppStore';\nimport React from 'react';\n\n/**\n * main page의 Ribbon 구성요소의 최 상단입니다.\n */\nconst RibbonComponent = (): React.JSX.Element => {\n  const appStore = useAppStore();\n  return (\n    <div\n      id=\"ribbon\"\n      role=\"toolbar\"\n      onMouseDown={() => {\n        appStore.getAppContext().getEditableContext().setMouseLButtonPressed(false);\n      }}\n    >\n      <RibbonGroupWrapperComponent />\n    </div>\n  );\n};\n\nexport default RibbonComponent;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./WorkArea.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./Content.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useState } from 'react';\n\n/**\n * useReRender 의 type을 정의합니다.\n */\ntype UseRerenderHook = () => {\n  triggerRerender: () => void;\n};\n\n/**\n * useRerender 를 반환합니다.\n *\n * @returns Rerender를 trigger 할 수 있는 함수를 반환합니다.\n */\nconst useRerender: UseRerenderHook = () => {\n  const [, setValue] = useState<number>(0);\n\n  return {\n    triggerRerender: () => {\n      setValue(prev => prev + 1);\n    },\n  };\n};\n\nexport default useRerender;\n","export const EditViewSizeTrackerId = 'EditViewSizeTracker';\n","import { useEffect, useRef } from 'react';\n\ninterface UseResizeObserverProps<T extends HTMLElement> {\n  targetRef: Nullable<React.RefObject<T>>;\n  callback: (entries: ResizeObserverEntry) => void;\n}\n\nconst useResizeObserver = <T extends HTMLElement>({\n  targetRef,\n  callback,\n}: UseResizeObserverProps<T>): void => {\n  const observerRef = useRef<ResizeObserver>();\n\n  useEffect(() => {\n    observerRef.current = new ResizeObserver(entries => {\n      entries.some(entry => {\n        if (targetRef !== undefined && entry.target === targetRef.current) {\n          callback(entry);\n          return true;\n        }\n        return false;\n      });\n    });\n\n    if (targetRef !== undefined && targetRef.current) {\n      observerRef.current.observe(targetRef.current);\n    }\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, []);\n};\n\nexport default useResizeObserver;\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport TreeNodeFactoryComponent from 'component/node/factory/TreeNodeFactoryComponent';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\n\ntype Hook = (props: TreeNodeComponentProps) => {\n  renderedChildren: React.JSX.Element;\n};\n\nconst useRenderChildren: Hook = (props: TreeNodeComponentProps) => {\n  const rerenderChildrenRef = useRef<number>(0);\n\n  const { model, zoomRatio } = props;\n\n  useEffect(() => {\n    model.setRerenderChildrenRef(rerenderChildrenRef);\n\n    return () => {\n      model.setRerenderChildrenRef(undefined);\n    };\n  }, []);\n\n  const renderedChildren = (\n    <>\n      {model.mapChild(child => {\n        return (\n          <TreeNodeFactoryComponent key={`tree_node_${child.getId()}`} {...props} model={child} />\n        );\n      })}\n    </>\n  );\n\n  // const renderedChildren = useMemo(() => {\n  //   return (\n  //     <>\n  //       {model.mapChild(child => {\n  //         return (\n  //           <TreeNodeFactoryComponent key={`tree_node_${child.getId()}`} {...props} model={child} />\n  //         );\n  //       })}\n  //     </>\n  //   );\n  // }, [rerenderChildrenRef.current, zoomRatio]);\n\n  return { renderedChildren };\n};\n\nexport default useRenderChildren;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./Slide.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useEffect } from 'react';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport useRerender from 'hook/store/useRerender';\n\ntype Hook = (props: TreeNodeComponentProps) => void;\n\nconst useTreeNodeRerender: Hook = (props: TreeNodeComponentProps) => {\n  const { triggerRerender } = useRerender();\n\n  const { model, isEditPreviewLayer } = props;\n\n  useEffect(() => {\n    if (isEditPreviewLayer === false) {\n      model.setRerenderTrigger(triggerRerender);\n    }\n\n    return () => {\n      if (isEditPreviewLayer === false) {\n        model.setRerenderTrigger(undefined);\n      }\n    };\n  }, []);\n};\n\nexport default useTreeNodeRerender;\n","import React from 'react';\nimport SlideModel from 'model/node/slide/SlideModel';\nimport classNames from 'classnames';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\n\nimport styles from 'scss/component/node/slide/Slide.module.scss';\n\nconst SlideBackgroundComponent = React.forwardRef(\n  (props: TreeNodeComponentProps, ref: React.ForwardedRef<SVGSVGElement>): React.JSX.Element => {\n    const { model, zoomRatio } = props;\n    const slideModel = model as SlideModel;\n\n    const originalSize = slideModel.getSize();\n    const width = originalSize.width * zoomRatio;\n    const height = originalSize.height * zoomRatio;\n\n    const fillInfo = slideModel.getFillInfo();\n    const fill = fillInfo === undefined ? '#FFFFFF' : fillInfo.getFill()?.getFillString();\n\n    return (\n      <div aria-hidden className={classNames(styles.slide_background)}>\n        <svg\n          ref={ref}\n          style={{\n            width,\n            height,\n          }}\n        >\n          <rect\n            style={{\n              fill,\n              width,\n              height,\n              strokeWidth: 1,\n              stroke: '#000',\n            }}\n          />\n        </svg>\n      </div>\n    );\n  }\n);\n\nexport default SlideBackgroundComponent;\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport React from 'react';\n\n/**\n * EventHandler 에서 처리할 Event type 의 base class 입니다.\n * React 와의 의존성을 제거하기 위한 class 로, React event 의 wrapper 역할을 합니다.\n * 모든 event class 는 BaseEvent 를 상속하여 구현합니다.\n * 대부분의 메소드가 HTML 동작과 동일합니다.\n * HTML 동작 관련 [문서](https://www.w3schools.com/jsref/dom_obj_event.asp) 를 참고하세요.\n */\nexport default abstract class BaseEvent {\n  /**\n   * Event를 발생시킨 target\n   */\n  private readonly eventTargetModel: TreeNode;\n\n  /**\n   * 생성자\n   *\n   * @param eventTargetModel event가 발생 한 TreeNode 입니다.\n   */\n  public constructor(eventTargetModel: TreeNode) {\n    this.eventTargetModel = eventTargetModel;\n  }\n\n  /**\n   * event로 인하여 발생하는 기본 동작을 중지합니다.\n   */\n  @boundMethod\n  public preventDefault(): void {\n    this.getEvent().preventDefault();\n  }\n\n  /**\n   * event의 전파를 중지합니다.\n   */\n  @boundMethod\n  public stopPropagation(): void {\n    this.getEvent().stopPropagation();\n  }\n\n  /**\n   * event의 html target을 반환합니다.\n   *\n   * @returns event의 html target\n   */\n  @boundMethod\n  public getTarget(): EventTarget {\n    return this.getEvent().target;\n  }\n\n  /**\n   * event의 현재 target을 반환합니다.\n   *\n   * @returns event의 현재 target\n   */\n  @boundMethod\n  public getCurrentTarget(): EventTarget {\n    return this.getEvent().currentTarget;\n  }\n\n  /**\n   * native event를 반환합니다.\n   *\n   * @returns native event\n   */\n  @boundMethod\n  public getNativeEvent(): Event {\n    return this.getEvent().nativeEvent;\n  }\n\n  /**\n   * event 가 발생한 TreeNode를 반환합니다.\n   *\n   * @returns event 가 발생한 TreeNode\n   */\n  @boundMethod\n  public getEventTargetModel(): TreeNode {\n    return this.eventTargetModel;\n  }\n\n  /**\n   * event instance를 반환합니다.\n   * BaseEvent 의 메소드를 구현하기 위하여 사용합니다.\n   * event instance는 각 상속 구현 한 class 에서 관리합니다.\n   *\n   * @returns React event\n   */\n  protected abstract getEvent(): React.SyntheticEvent<HTMLElement | SVGElement>;\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport React from 'react';\nimport BaseEvent from 'store/manager/event/wrapper/BaseEvent';\n\n/**\n * EventHandler 에서 사용하는 mouse event type 입니다.\n * React event 의 wrapper 입니다.\n */\nexport default class MouseEvent extends BaseEvent {\n  /**\n   * 실제로 발생 한 react mouse event\n   */\n  private readonly event: React.MouseEvent<HTMLElement | SVGElement>;\n\n  /**\n   * 생성자\n   *\n   * @param event react mouse event 입니다.\n   * @param targetModel event가 발생한 TreeNode\n   */\n  public constructor(\n    event: React.MouseEvent<HTMLElement | SVGElement>,\n    eventTargetModel: TreeNode\n  ) {\n    super(eventTargetModel);\n    this.event = event;\n  }\n\n  /**\n   * event의 screenX 좌표를 반환합니다.\n   *\n   * @returns event.screenX\n   */\n  @boundMethod\n  public getScreenX(): number {\n    return this.event.screenX;\n  }\n\n  /**\n   * event의 screenY 좌표를 반환합니다.\n   *\n   * @returns event.screenY\n   */\n  @boundMethod\n  public getScreenY(): number {\n    return this.event.screenY;\n  }\n\n  /**\n   * event의 clientX 좌표를 반환합니다.\n   *\n   * @returns event.clientX\n   */\n  @boundMethod\n  public getClientX(): number {\n    return this.event.clientX;\n  }\n\n  /**\n   * event의 clientY 좌표를 반환합니다.\n   *\n   * @returns event.clientY\n   */\n  @boundMethod\n  public getClientY(): number {\n    return this.event.clientY;\n  }\n\n  /**\n   * mouse 왼쪽 버튼이 눌려있는지 반환합니다.\n   *\n   * @returns mouse 왼쪽 버튼이 눌려있는 경우 true\n   */\n  @boundMethod\n  public isLButton(): boolean {\n    return this.event.button === 0;\n  }\n\n  /**\n   * mouse 오른쪽 버튼이 눌려있는지 반환합니다.\n   *\n   * @returns mouse 오른쪽 버튼이 눌려있는 경우 true\n   */\n  @boundMethod\n  public isRButton(): boolean {\n    return this.event.button === 2;\n  }\n\n  /**\n   * Mac 에서는 option, 나머지 플랫폼에서는 alt 를 나타내른는 alt key 가 눌린 상태인지 확인합니다.\n   *\n   * @returns alt key 가 눌린 경우 true\n   */\n  @boundMethod\n  public isAltDown(): boolean {\n    return this.event.altKey;\n  }\n\n  /**\n   * Mac 에서는 control, 나머지 플랫폼에서는 ctrl 을 나타내는 ctrl key 가 눌린 상태인지 확인합니다.\n   *\n   * @returns ctrl key 가 눌린 경우 true\n   */\n  @boundMethod\n  public isCtrlDown(): boolean {\n    return this.event.ctrlKey;\n  }\n\n  /**\n   * shift 키가 눌려있는 상태인지 확인합니다.\n   *\n   * @returns shift 키가 눌려있는 경우 true\n   */\n  @boundMethod\n  public isShiftDown(): boolean {\n    return this.event.shiftKey;\n  }\n\n  /**\n   * Mac 에서는 command, Windows 에서는 windows 키를 나타내는 meta key 가 눌린 상태인지 확인합니다.\n   * @returns meta key 가 눌린 경우 true\n   */\n  @boundMethod\n  public isMetaDown(): boolean {\n    return this.event.metaKey;\n  }\n\n  /**\n   * react event를 반환합니다.\n   *\n   * @returns this.event\n   */\n  @boundMethod\n  public getEvent(): React.MouseEvent<HTMLElement | SVGElement> {\n    return this.event;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport React from 'react';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\n\n/**\n * EventHandler 에서 사용하는 wheel event type 입니다. Mouse event 를 상속받습니다.\n * React event 의 wrapper 입니다.\n * Mac 에서 shift + wheel 하면 가로 스크롤이 됩니다.\n */\nexport default class WheelEvent extends MouseEvent {\n  /**\n   * 생성자\n   *\n   * @param event react wheel event 입니다.\n   * @param targetModel event가 발생한 TreeNode\n   */\n  // eslint-disable-next-line no-useless-constructor\n  public constructor(event: React.WheelEvent<HTMLElement>, eventTargetModel: TreeNode) {\n    super(event, eventTargetModel);\n  }\n\n  /**\n   * xoffset을 반환합니다.\n   *\n   * @returns wheel event의 deltaX\n   */\n  @boundMethod\n  public getXOffset(): number {\n    return (this.getEvent() as React.WheelEvent<HTMLElement>).deltaX;\n  }\n\n  /**\n   * yoffset을 반환합니다.\n   *\n   * @returns wheel event의 deltaY\n   */\n  @boundMethod\n  public getYOffset(): number {\n    return (this.getEvent() as React.WheelEvent<HTMLElement>).deltaY;\n  }\n}\n","import { boundMethod } from 'autobind-decorator';\nimport TreeNode from 'model/node/TreeNode';\nimport React from 'react';\nimport BaseEvent from 'store/manager/event/wrapper/BaseEvent';\nimport isMac from 'util/event/isMac';\n\n/**\n * EventHandler 에서 사용하는 keyboard event type 입니다.\n * React event 의 wrapper 입니다.\n */\nexport default class KeyEvent extends BaseEvent {\n  /**\n   * 실제로 발생 한 react key event\n   */\n  private readonly event: React.KeyboardEvent<HTMLElement>;\n\n  /**\n   * 생성자\n   *\n   * @param event react key event 입니다.\n   * @param targetModel event가 발생한 TreeNode\n   */\n  public constructor(event: React.KeyboardEvent<HTMLElement>, eventTargetModel: TreeNode) {\n    super(eventTargetModel);\n    this.event = event;\n  }\n\n  /**\n   * Mac 에서는 option, 나머지 플랫폼에서는 alt 를 나타내는 alt key 가 눌린 상태인지 확인합니다.\n   *\n   * @returns alt key 가 눌린 경우 true\n   */\n  @boundMethod\n  public isAltDown(): boolean {\n    return this.event.altKey;\n  }\n\n  /**\n   * Mac 에서는 control, 나머지 플랫폼에서는 ctrl 을 나타내는 ctrl key 가 눌린 상태인지 확인합니다.\n   *\n   * @returns ctrl key 가 눌린 경우 true\n   */\n  @boundMethod\n  public isCtrlDown(): boolean {\n    return this.event.ctrlKey;\n  }\n\n  /**\n   * shift 키가 눌려있는 상태인지 확인합니다.\n   *\n   * @returns shift 키가 눌려있는 경우 true\n   */\n  @boundMethod\n  public isShiftDown(): boolean {\n    return this.event.shiftKey;\n  }\n\n  /**\n   * Mac 에서는 command, Windows 에서는 windows 키를 나타내는 meta key 가 눌린 상태인지 확인합니다.\n   *\n   * @returns meta key 가 눌린 경우 true\n   */\n  @boundMethod\n  public isMetaDown(): boolean {\n    return this.event.metaKey;\n  }\n\n  /**\n   * Modifier 가 눌린 상태인지 확인합니다.\n   * Mac 에서 modifier 는 command, 나머지에서는 ctrl 이 modifier 입니다.\n   *\n   * @returns modifier 가 눌린 경우 true\n   */\n  @boundMethod\n  public isModifierDown(): boolean {\n    return isMac()\n      ? this.event.metaKey && !this.event.altKey\n      : this.event.ctrlKey && !this.event.altKey;\n  }\n\n  /**\n   * CapsLock이 활성화 되어있는 상태인지 확인합니다.\n   *\n   * @returns CapsLock이 활성화 되어있으면 true\n   */\n  @boundMethod\n  public isCapsLockDown(): boolean {\n    return this.event.getModifierState('CapsLock');\n  }\n\n  /**\n   * ScrollLock이 활성화 되어 있는 상태인지 확인합니다.\n   *\n   * @returns ScrollLock이 활성화 되어있으면 true\n   */\n  @boundMethod\n  public isScrollLockDown(): boolean {\n    return this.event.getModifierState('ScrollLock');\n  }\n\n  /**\n   * NumLock이 활성화 되어 있는 상태인지 확인합니다.\n   *\n   * @returns NumLock이 활성화 되어있으면 true\n   */\n  @boundMethod\n  public isNumLockDown(): boolean {\n    return this.event.getModifierState('NumLock');\n  }\n\n  /**\n   * event의 key를 반환합니다.\n   *\n   * @returns event.key\n   */\n  @boundMethod\n  public getKey(): string {\n    return this.event.key;\n  }\n\n  /**\n   * event의 code 를 반환합니다. (Key code 는 deprecated 입니다.)\n   *\n   * @returns key의 code를 나타내는 string\n   */\n  @boundMethod\n  public getCode(): string {\n    return this.event.nativeEvent.code;\n  }\n\n  /**\n   * react event를 반환합니다.\n   *\n   * @returns this.event\n   */\n  @boundMethod\n  protected getEvent(): React.SyntheticEvent<HTMLElement> {\n    return this.event;\n  }\n\n  /**\n   * 한글 등의 문자를 조합중인지 반환합니다.\n   *\n   * @returns 한글 등의 문자를 조합중인지의 여부\n   */\n  public getIsComposing(): boolean {\n    return (this.getNativeEvent() as KeyboardEvent).isComposing;\n  }\n}\n","/**\n * Mac 환경인지 확인합니다.\n * Mac 에서 modifier 는 ctrl 이 아닌 command 키이기 때문이기에 확인하는 로직이 필요합니다.\n *\n * @returns Mac 인 경우 true\n */\nexport default function isMac(): boolean {\n  return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n}\n","import React, { useCallback, useMemo } from 'react';\nimport { throttle } from 'lodash';\nimport TreeNode from 'model/node/TreeNode';\nimport useAppStore from 'hook/store/useAppStore';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\nimport WheelEvent from 'store/manager/event/wrapper/WheelEvent';\nimport KeyEvent from 'store/manager/event/wrapper/KeyEvent';\n\n/**\n * event 처리 옵션\n */\nexport type EventListenerOption = {\n  eventDelay?: number;\n  useDrag?: boolean;\n};\n\n/**\n * Mouse Event 관련 EventListener  함수의 형태입니다.\n */\ntype MouseHandlerType = (e: React.MouseEvent<HTMLElement | SVGElement>) => void;\n/**\n * Mouse Wheel Event 관련 EventListener  함수의 형태입니다.\n */\ntype WheelHandlerType = (e: React.WheelEvent<HTMLElement>) => void;\n/**\n * Key Event 관련 EventListener  함수의 형태입니다.\n */\ntype KeyHandlerType = (e: React.KeyboardEvent<HTMLElement>) => void;\n\n/**\n * EventListener 를 생성하기 위한 정의입니다.\n */\ntype Hook = (\n  node: TreeNode,\n  option?: EventListenerOption\n) => {\n  handleMouseDown: MouseHandlerType;\n  handleMouseUp: MouseHandlerType;\n  handleMouseMove: MouseHandlerType;\n  handleDrag: MouseHandlerType;\n  handleWheel: WheelHandlerType;\n  handleKeyDown: KeyHandlerType;\n  handleKeyUp: KeyHandlerType;\n};\n\n/**\n * 각 component에 event가 발생하였을 때, event를 처리할 수 있는 함수를 반환하는 hook입니다.\n * react event를 wrapping 하고, appStore의 event 처리 함수를 호출하는 역할을 합니다.\n *\n * @param treeNode event가 발생 한 treeNode\n * @param option event 처리 옵션\n * @returns event를 처리할 수 있는 함수 목록\n */\nconst useEventListener: Hook = (eventTargetModel: TreeNode, option?: EventListenerOption) => {\n  const eventDelay = option?.eventDelay || 0;\n  const isDragEnabled = option?.useDrag !== false;\n\n  const appStore = useAppStore();\n\n  const handleMouseDown: MouseHandlerType = useCallback(\n    e => {\n      const event = new MouseEvent(e, eventTargetModel);\n      appStore.handleMouseDown(event);\n    },\n    [eventTargetModel]\n  );\n\n  const handleMouseUp: MouseHandlerType = useCallback(\n    e => {\n      const event = new MouseEvent(e, eventTargetModel);\n      appStore.handleMouseUp(event);\n\n      if (e.button === 2) {\n        // need implement\n        // 필요한 경우 context menu 보여주기\n      }\n    },\n    [eventTargetModel]\n  );\n\n  const handleMouseMove: MouseHandlerType = useMemo((): MouseHandlerType => {\n    const throttled = throttle((e, dragged) => {\n      const event = new MouseEvent(e, eventTargetModel);\n      if (dragged) {\n        appStore.handleDrag(event);\n      } else {\n        appStore.handleMouseMove(event);\n      }\n    }, eventDelay);\n    return e => {\n      e.persist();\n      return throttled(\n        e,\n        isDragEnabled && appStore.getAppContext().getEditableContext().isMouseLButtonPressed()\n      );\n    };\n  }, [eventTargetModel]);\n\n  const handleDrag: MouseHandlerType = useMemo((): MouseHandlerType => {\n    const throttled = throttle((e, dragged) => {\n      if (!dragged) {\n        return;\n      }\n      const event = new MouseEvent(e, eventTargetModel);\n      appStore.handleDrag(event);\n    }, eventDelay);\n    return e => {\n      e.persist();\n      return throttled(\n        e,\n        isDragEnabled && appStore.getAppContext().getEditableContext().isMouseLButtonPressed()\n      );\n    };\n  }, [eventTargetModel]);\n\n  const handleWheel: WheelHandlerType = useCallback(\n    e => {\n      const event = new WheelEvent(e, eventTargetModel);\n      appStore.handleWheel(event);\n    },\n    [eventTargetModel]\n  );\n\n  const handleKeyDown: KeyHandlerType = useCallback(\n    e => {\n      const event = new KeyEvent(e, eventTargetModel);\n      appStore.handleKeyDown(event);\n    },\n    [eventTargetModel]\n  );\n\n  const handleKeyUp: KeyHandlerType = useCallback(\n    e => {\n      const event = new KeyEvent(e, eventTargetModel);\n      appStore.handleKeyUp(event);\n    },\n    [eventTargetModel]\n  );\n\n  return {\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseMove,\n    handleDrag,\n    handleWheel,\n    handleKeyDown,\n    handleKeyUp,\n  };\n};\n\nexport default useEventListener;\n","import React, { PropsWithChildren, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\n\nimport styles from 'scss/component/node/slide/Slide.module.scss';\nimport useEventListener from 'hook/event/useEventListener';\n\nconst SlideEventComponent = (\n  props: PropsWithChildren<TreeNodeComponentProps>\n): React.JSX.Element => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { model, children } = props;\n  const {\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseMove,\n    handleWheel,\n    handleKeyDown,\n    handleKeyUp,\n  } = useEventListener(model);\n\n  useEffect(() => {\n    ref.current?.focus();\n  }, []);\n\n  return (\n    <div\n      ref={ref}\n      role=\"none\"\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={0}\n      className={classNames(styles.event)}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseMove={handleMouseMove}\n      onWheel={handleWheel}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      onBlur={() => {\n        ref.current?.focus();\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default SlideEventComponent;\n","import { IGeometryParam, IPath } from 'types/model/node/graphic/GraphicTypes';\nimport PathBuilder from './PathBuilder';\n\nclass EventRectBuilder extends PathBuilder {\n  public build(param: IGeometryParam): IPath[] {\n    // common\n    const l = param.x;\n    const r = param.x + param.width;\n    const b = param.y + param.height;\n    const t = param.y;\n\n    // pathLst\n    this.pathList = [];\n    let drawing = ``;\n    const fill = ``;\n    const stroke = ``;\n\n    drawing += this.makeMove(l, t);\n    drawing += this.makeLine(r, t);\n    drawing += this.makeLine(r, b);\n    drawing += this.makeLine(l, b);\n    drawing += `Z`;\n    this.pathList.push({ d: drawing, fill, stroke });\n\n    return this.pathList;\n  }\n}\nexport default EventRectBuilder;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./GraphicSelection.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport useGraphicSelectionComponentEventListener from 'hook/component/node/slide/selectionlayer/graphic/useGraphicSelectionComponentEventListener';\nimport {\n  GraphicSelectionComponentProps,\n  ROTATION_HANDLE_EVENT_SIZE,\n  ROTATION_HANDLE_LINE_LENGTH,\n  ROTATION_HANDLE_SIZE,\n  SELECTION_DEFAULT_MARGIN,\n  SELECTION_GROUP_EXTRA_MARGIN,\n  SELECTION_HANDLE_SIZE,\n} from 'types/component/node/slide/selectionlayer/graphic/GraphicSelectionComponentTypes';\nimport useGraphicSelectionComponent from 'hook/component/node/slide/selectionlayer/graphic/useGraphicSelectionComponent';\nimport { GraphicTypeEnum } from 'types/model/node/graphic/GraphicTypeEnum';\nimport { IPoint } from 'types/common/geometry/GeometryTypes';\n\nimport styles from 'scss/component/node/slide/selectionlayer/graphic/GraphicSelection.module.scss';\nimport classNames from 'classnames';\nimport {\n  CLASSNAME_GRAPHIC_CURSOR_MOVE_HOVER,\n  CLASSNAME_GRAPHIC_CURSOR_ROTATE_HOVER,\n} from 'types/common/cursor/CursorTypes';\nimport { GraphicEditingHandleProps } from 'types/store/container/edit/GraphicEditingHandleTypes';\nimport { getGraphicEditingHandleInfo } from 'util/node/slide/selectionlayer/graphic/GraphicSelectionComponentUtil';\n\nconst GraphicSelectionComponent = (props: GraphicSelectionComponentProps): React.JSX.Element => {\n  const { graphicModel, isDirectlySelected } = props;\n  const needMargin = graphicModel.getGraphicType() === GraphicTypeEnum.GROUP;\n  const pathMargin = needMargin === true ? SELECTION_GROUP_EXTRA_MARGIN : 0;\n\n  const {\n    position,\n    size,\n    rotation,\n    rotationTransform,\n    flipTransform,\n    editingHandleList,\n    pathList,\n  } = useGraphicSelectionComponent(graphicModel, pathMargin);\n\n  const {\n    handleMouseDownForMove,\n    handleMouseDownForResize,\n    handleMouseDownForRotation,\n    handleMouseUp,\n  } = useGraphicSelectionComponentEventListener(graphicModel);\n\n  const strokeDasharray = isDirectlySelected === true ? '1,0' : '1,1';\n\n  const selectionHandleSize = SELECTION_HANDLE_SIZE;\n  const selectionHandleTransform = -selectionHandleSize / 2;\n\n  const rotatationHandleSize = ROTATION_HANDLE_SIZE;\n  const rotationHandleLineLength = ROTATION_HANDLE_LINE_LENGTH;\n  const rotatationHandleEventSize = ROTATION_HANDLE_EVENT_SIZE;\n\n  let margin = SELECTION_DEFAULT_MARGIN;\n  const rotationHandlePosition: IPoint = {\n    x: size.width / 2 - rotatationHandleSize / 2,\n    y: -(rotationHandleLineLength + rotatationHandleSize),\n  };\n  const rotationEventRectPosition: IPoint = {\n    x: size.width / 2 - rotatationHandleEventSize / 2,\n    y: -(rotationHandleLineLength + rotatationHandleSize / 2 + rotatationHandleEventSize / 2),\n  };\n  const rotationHandleLinePosition: IPoint = {\n    x: size.width / 2,\n    y: -rotationHandleLineLength,\n  };\n\n  if (needMargin) {\n    margin += SELECTION_GROUP_EXTRA_MARGIN + 1;\n    rotationHandlePosition.x += SELECTION_GROUP_EXTRA_MARGIN / 2;\n    rotationHandlePosition.y -= SELECTION_GROUP_EXTRA_MARGIN;\n    rotationEventRectPosition.x += SELECTION_GROUP_EXTRA_MARGIN / 2;\n    rotationEventRectPosition.y -= SELECTION_GROUP_EXTRA_MARGIN;\n    rotationHandleLinePosition.x += SELECTION_GROUP_EXTRA_MARGIN / 2;\n    rotationHandleLinePosition.y -= SELECTION_GROUP_EXTRA_MARGIN;\n  }\n\n  const selectionOutlinePath = pathList.at(0)?.d ?? '';\n\n  const graphicSelectionCoordinateStyle: React.CSSProperties = {};\n  graphicSelectionCoordinateStyle.left = `${position.x}px`;\n  graphicSelectionCoordinateStyle.top = `${position.y}px`;\n\n  return (\n    <div\n      className={classNames(styles.container)}\n      style={{\n        top: `${position.y}px`,\n        left: `${position.x}px`,\n      }}\n    >\n      <svg // rotate handle\n        className={classNames(styles.rotate_handle_svg)}\n        style={{\n          left: `${-margin}px`,\n          top: `${-margin}px`,\n          width: `${size.width + margin * 2}px`,\n          height: `${size.height + margin * 2}px`,\n          transform: `${rotationTransform} ${flipTransform}`,\n        }}\n      >\n        <g\n          className={classNames(styles.rotate_handle_event_g)}\n          transform={`matrix(1,0,0,1,${margin},${margin})`}\n          onMouseDown={handleMouseDownForRotation}\n          onMouseUp={handleMouseUp}\n        >\n          <rect\n            className={classNames(\n              CLASSNAME_GRAPHIC_CURSOR_ROTATE_HOVER,\n              styles.rotate_handle_event_rect\n            )}\n            width={`${rotatationHandleEventSize}px`}\n            height={`${rotatationHandleEventSize}px`}\n            transform={`matrix(1,0,0,1,${rotationEventRectPosition.x},${rotationEventRectPosition.y})`}\n          />\n        </g>\n        <g\n          className={classNames(styles.rotate_handle_g)}\n          transform={`matrix(1,0,0,1,${margin},${margin})`}\n        >\n          <rect\n            className={classNames(styles.rotate_handle_rect)}\n            width={`${rotatationHandleSize}px`}\n            height={`${rotatationHandleSize}px`}\n            transform={`matrix(1,0,0,1,${rotationHandlePosition.x},${rotationHandlePosition.y})`}\n          />\n          <line\n            className={classNames(styles.rotate_handle_line)}\n            x1={`${rotationHandleLinePosition.x}`}\n            y1={`${rotationHandleLinePosition.y}`}\n            x2={`${rotationHandleLinePosition.x}`}\n            y2={`${rotationHandleLinePosition.y + rotationHandleLineLength}`}\n          />\n        </g>\n      </svg>\n      <svg // resize handles\n        className={classNames(styles.resize_handle_svg)}\n        style={{\n          left: `${-margin}px`,\n          top: `${-margin}px`,\n          width: `${size.width + margin * 2}px`,\n          height: `${size.height + margin * 2}px`,\n          transform: `${rotationTransform}`,\n        }}\n      >\n        <g\n          className={classNames(styles.resize_handle_outline_g)}\n          transform={`matrix(1,0,0,1,${margin},${margin})`}\n        >\n          <path\n            className={classNames(styles.resize_handle_outline)}\n            d={selectionOutlinePath}\n            strokeDasharray={strokeDasharray}\n          />\n          <path\n            className={classNames(\n              CLASSNAME_GRAPHIC_CURSOR_MOVE_HOVER,\n              styles.resize_handle_outline_event\n            )}\n            d={selectionOutlinePath}\n            onMouseDown={handleMouseDownForMove}\n          />\n          {editingHandleList.map(item => {\n            const handleProps: GraphicEditingHandleProps = {\n              handle: item,\n              margin: pathMargin,\n              objectWidth: size.width,\n              objectHeight: size.height,\n              objectRotation: rotation,\n            };\n\n            const handleInfo = getGraphicEditingHandleInfo(handleProps);\n            const { left } = handleInfo.position;\n            const { top } = handleInfo.position;\n            const { cursor } = handleInfo;\n\n            return (\n              <g\n                key={item}\n                className={classNames(styles.resize_handle_g)}\n                transform={`matrix(1,0,0,1,${left},${top})`}\n                style={{ cursor }}\n                onMouseDown={e => {\n                  handleMouseDownForResize?.(e, item, cursor);\n                }}\n              >\n                <rect\n                  className={classNames(styles.resize_handle_rect)}\n                  style={{\n                    height: `${selectionHandleSize}px`,\n                    width: `${selectionHandleSize}px`,\n                  }}\n                  transform={`matrix(1,0,0,1,${selectionHandleTransform},${selectionHandleTransform})`}\n                />\n              </g>\n            );\n          })}\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default GraphicSelectionComponent;\n","import GraphicModel from 'model/node/graphic/GraphicModel';\n\nexport interface GraphicSelectionComponentProps {\n  graphicModel: GraphicModel;\n  isDirectlySelected: boolean;\n}\n\nexport const SELECTION_DEFAULT_MARGIN = 30;\nexport const SELECTION_GROUP_EXTRA_MARGIN = 6;\n\nexport const ROTATION_HANDLE_SIZE = 5;\nexport const ROTATION_HANDLE_LINE_LENGTH = 15;\nexport const ROTATION_HANDLE_EVENT_SIZE = 10;\n\nexport const SELECTION_HANDLE_SIZE = 7;\n","import GraphicModel from 'model/node/graphic/GraphicModel';\nimport EventRectBuilder from 'model/node/graphic/info/path/EventRectBuilder';\nimport { IPoint, ISize } from 'types/common/geometry/GeometryTypes';\nimport { IPath } from 'types/model/node/graphic/GraphicTypes';\nimport { GraphicEditingHandleEnum } from 'types/store/container/edit/GraphicEditingHandleEnum';\nimport {\n  getNoneEditingDisplayedFlipV,\n  getNoneEditingDisplayedPosition,\n  getNoneEditingDisplayedRotation,\n  getNoneEditingDisplayedSize,\n} from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\n\ntype Hook = (\n  graphicModel: GraphicModel,\n  margin: number\n) => {\n  position: IPoint;\n  size: ISize;\n  rotation: number;\n  rotationTransform: string;\n  flipTransform: string;\n  editingHandleList: GraphicEditingHandleEnum[];\n  pathList: IPath[];\n};\n\nconst useGraphicSelectionComponent: Hook = (graphicModel: GraphicModel, pathMargin: number) => {\n  const eventPathbuilder = new EventRectBuilder();\n\n  const position = getNoneEditingDisplayedPosition(graphicModel);\n  const size = getNoneEditingDisplayedSize(graphicModel);\n  const rotation = getNoneEditingDisplayedRotation(graphicModel);\n  const pathList = eventPathbuilder.build({\n    x: 0 - pathMargin,\n    y: 0 - pathMargin,\n    width: size.width + 2 * pathMargin,\n    height: size.height + 2 * pathMargin,\n  });\n  const rotationTransform = `rotate(${rotation}deg)`;\n  const flipTransform = getNoneEditingDisplayedFlipV(graphicModel) === true ? 'scale(1, -1)' : '';\n  const editingHandleList = [\n    GraphicEditingHandleEnum.LEFT_TOP,\n    GraphicEditingHandleEnum.TOP,\n    GraphicEditingHandleEnum.RIGHT_TOP,\n    GraphicEditingHandleEnum.LEFT,\n    GraphicEditingHandleEnum.RIGHT,\n    GraphicEditingHandleEnum.LEFT_BOTTOM,\n    GraphicEditingHandleEnum.BOTTOM,\n    GraphicEditingHandleEnum.RIGHT_BOTTOM,\n  ];\n\n  return {\n    position,\n    size,\n    rotation,\n    rotationTransform,\n    flipTransform,\n    editingHandleList,\n    pathList,\n  };\n};\n\nexport default useGraphicSelectionComponent;\n","import useEventListener from 'hook/event/useEventListener';\nimport useAppStore from 'hook/store/useAppStore';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { CursorType } from 'types/common/cursor/CursorTypes';\nimport {\n  EditingHandleMouseHandlerType,\n  GraphicMouseEvent,\n  GraphicMouseHandlerType,\n} from 'types/hook/graphic/GraphicEventHookTypes';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { GraphicEditEventSubStateEnum } from 'types/store/container/edit/GraphicEditEventSubStateEnum';\nimport { GraphicEditingHandleEnum } from 'types/store/container/edit/GraphicEditingHandleEnum';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\n\ntype Hook = (graphicModel: GraphicModel) => {\n  handleMouseDownForMove: GraphicMouseHandlerType;\n  handleMouseDownForResize: EditingHandleMouseHandlerType;\n  handleMouseDownForRotation: GraphicMouseHandlerType;\n  handleMouseUp: GraphicMouseHandlerType;\n};\n\nconst useGraphicSelectionComponentEventListener: Hook = (graphicModel: GraphicModel) => {\n  const appStore = useAppStore();\n  const editableContext = appStore.getAppContext().getEditableContext();\n  const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n  const { handleMouseDown, handleMouseUp } = useEventListener(graphicModel);\n\n  const handleMouseDownForMove = (e: GraphicMouseEvent) => {\n    if (editableContext.getEventState() === EventStateEnum.IDLE) {\n      editableContext.setEventState(EventStateEnum.GRAPHIC_MOVE);\n      graphicEditInfoContainer.setEventTargetGraphicModel(graphicModel);\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.READY);\n      graphicEditInfoContainer.setCursorInfo({ cursorType: 'move' });\n    }\n    handleMouseDown(e);\n  };\n\n  const handleMouseDownForResize = (\n    e: GraphicMouseEvent,\n    editingHandle: GraphicEditingHandleEnum,\n    cursor: string\n  ) => {\n    if (editableContext.getEventState() === EventStateEnum.IDLE) {\n      editableContext.setEventState(EventStateEnum.GRAPHIC_RESIZE);\n      graphicEditInfoContainer.setEventTargetGraphicModel(graphicModel);\n      graphicEditInfoContainer.setGraphicEditingHandle(editingHandle);\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.READY);\n      graphicEditInfoContainer.setCursorInfo({ cursorType: cursor as CursorType });\n    }\n    handleMouseDown(e);\n  };\n\n  const handleMouseDownForRotation = (e: GraphicMouseEvent) => {\n    if (editableContext.getEventState() === EventStateEnum.IDLE) {\n      editableContext.setEventState(EventStateEnum.GRAPHIC_ROTATE);\n      graphicEditInfoContainer.setEventTargetGraphicModel(graphicModel);\n      graphicEditInfoContainer.setGraphicEditingHandle(GraphicEditingHandleEnum.ROTATE);\n      graphicEditInfoContainer.setGraphicEditEventSubState(GraphicEditEventSubStateEnum.READY);\n      graphicEditInfoContainer.setCursorInfo({\n        cursorType: 'img',\n        img: ResourceEnum.IMG_CURSOR_ROTATE,\n        position: {\n          x: 15,\n          y: 15,\n        },\n      });\n    }\n    handleMouseDown(e);\n  };\n\n  return {\n    handleMouseDownForMove,\n    handleMouseDownForResize,\n    handleMouseDownForRotation,\n    handleMouseUp,\n  };\n};\n\nexport default useGraphicSelectionComponentEventListener;\n","import { GraphicEditingHandleEnum } from 'types/store/container/edit/GraphicEditingHandleEnum';\nimport {\n  GraphicEditingHandleInfo,\n  GraphicEditingHandleProps,\n} from 'types/store/container/edit/GraphicEditingHandleTypes';\nimport { degreeMod360 } from 'util/coordinate/CoordinateUtil';\n\nexport function getGraphicEditingHandleInfo(\n  props: GraphicEditingHandleProps\n): GraphicEditingHandleInfo {\n  const { margin } = props;\n  const { handle } = props;\n  const width = props.objectWidth;\n  const height = props.objectHeight;\n  const rotation = props.objectRotation;\n\n  let top = margin ? -margin + 1 : 0;\n  let left = margin ? -margin + 1 : 0;\n\n  let resizeAngle = 0;\n\n  if (handle === GraphicEditingHandleEnum.LEFT_TOP) {\n    resizeAngle = 315;\n  } else if (handle === GraphicEditingHandleEnum.TOP) {\n    resizeAngle = 0;\n    left = (width + margin) / 2;\n  } else if (handle === GraphicEditingHandleEnum.RIGHT_TOP) {\n    resizeAngle = 45;\n    left = width + margin;\n  } else if (handle === GraphicEditingHandleEnum.LEFT) {\n    resizeAngle = 270;\n    top = (height + margin) / 2;\n  } else if (handle === GraphicEditingHandleEnum.RIGHT) {\n    resizeAngle = 90;\n    left = width + margin;\n    top = (height + margin) / 2;\n  } else if (handle === GraphicEditingHandleEnum.LEFT_BOTTOM) {\n    resizeAngle = 225;\n    top = height + margin;\n  } else if (handle === GraphicEditingHandleEnum.BOTTOM) {\n    resizeAngle = 180;\n    top = height + margin;\n    left = (width + margin) / 2;\n  } else if (handle === GraphicEditingHandleEnum.RIGHT_BOTTOM) {\n    resizeAngle = 135;\n    top = height + margin;\n    left = width + margin;\n  }\n\n  resizeAngle += rotation;\n  resizeAngle = degreeMod360(resizeAngle);\n\n  const cursor = getCursorType(resizeAngle);\n\n  const handleInfo: GraphicEditingHandleInfo = {\n    cursor,\n    position: { left, top },\n  };\n  return handleInfo;\n}\n\nfunction getCursorType(resizeAngle: number): string {\n  let cursor = '';\n\n  // ns ㅣ\n  // nesw /\n  // ew ㅡ\n  // nwse \\\n\n  if (resizeAngle >= 22.5 && resizeAngle < 67.5) {\n    cursor = 'nesw';\n  } else if (resizeAngle >= 67.5 && resizeAngle < 112.5) {\n    cursor = 'ew';\n  } else if (resizeAngle >= 112.5 && resizeAngle < 157.5) {\n    cursor = 'nwse';\n  } else if (resizeAngle >= 157.5 && resizeAngle < 202.5) {\n    cursor = 'ns';\n  } else if (resizeAngle >= 202.5 && resizeAngle < 247.5) {\n    cursor = 'nesw';\n  } else if (resizeAngle >= 247.5 && resizeAngle < 292.5) {\n    cursor = 'ew';\n  } else if (resizeAngle >= 292.5 && resizeAngle < 337.5) {\n    cursor = 'nwse';\n  } else {\n    // in case of resizeAngle >= 337.5 || resizeAngle < 22.5\n    cursor = 'ns';\n  }\n\n  const result = `${cursor}-resize`;\n  return result;\n}\n","import useAppStore from 'hook/store/useAppStore';\nimport useRerender from 'hook/store/useRerender';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport React, { useLayoutEffect } from 'react';\nimport { getRootGroup, isGroupChild } from 'util/node/graphic/GraphicModelTreeNodeUtil';\nimport GraphicSelectionComponent from './graphic/GraphicSelectionComponent';\n\nconst SelectionLayerComponent = (): React.JSX.Element => {\n  const { triggerRerender } = useRerender();\n  const appStore = useAppStore();\n\n  const graphicEditInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getGraphicEditInfoContainer();\n\n  useLayoutEffect(() => {\n    graphicEditInfoContainer.setSelectionLayerRerenderTrigger(triggerRerender);\n\n    return () => {\n      graphicEditInfoContainer.setSelectionLayerRerenderTrigger(undefined);\n    };\n  });\n\n  if (graphicEditInfoContainer.isEditingActivated() === true) {\n    return <></>;\n  }\n\n  const selectionContainer = appStore.getAppContext().getEditableContext().getSelectionContainer();\n  const selectedGraphicModels = selectionContainer\n    .getGraphicModelSelectionContainer()\n    .getSelectedGraphicModels();\n\n  let extraSelectionTarget: Nullable<GraphicModel>;\n\n  selectedGraphicModels.some(graphicModel => {\n    if (isGroupChild(graphicModel) === true) {\n      extraSelectionTarget = getRootGroup(graphicModel);\n    }\n    return true;\n  });\n\n  return (\n    <>\n      {extraSelectionTarget !== undefined && (\n        <GraphicSelectionComponent graphicModel={extraSelectionTarget} isDirectlySelected={false} />\n      )}\n      {selectedGraphicModels.map(graphicModel => {\n        return (\n          <GraphicSelectionComponent\n            key={graphicModel.getId()}\n            graphicModel={graphicModel}\n            isDirectlySelected\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default SelectionLayerComponent;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./EditPreviewLayer.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import useAppStore from 'hook/store/useAppStore';\nimport useRerender from 'hook/store/useRerender';\nimport React, { useLayoutEffect } from 'react';\nimport styles from 'scss/component/node/slide/EditPreviewLayer.module.scss';\nimport classNames from 'classnames';\nimport TreeNodeFactoryComponent from '../../factory/TreeNodeFactoryComponent';\n\nconst EditPreviewlayerComponent = (): React.JSX.Element => {\n  const { triggerRerender } = useRerender();\n  const appStore = useAppStore();\n\n  const graphicEditInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getGraphicEditInfoContainer();\n\n  useLayoutEffect(() => {\n    graphicEditInfoContainer.setEditPreviewLayerRerenderTrigger(triggerRerender);\n\n    return () => {\n      graphicEditInfoContainer.setEditPreviewLayerRerenderTrigger(undefined);\n    };\n  });\n\n  const viewModeContainer = appStore.getAppContext().getEditableContext().getViewModeContainer();\n  const zoomRatio = viewModeContainer.getZoomRatio();\n  const isEditPreivewLayerActivated = graphicEditInfoContainer.isEditingActivated();\n\n  return (\n    <div className={classNames(styles.conatiner)}>\n      {isEditPreivewLayerActivated &&\n        graphicEditInfoContainer.getEditPreviewLayerGraphicModelList().map(treeNode => {\n          return (\n            <TreeNodeFactoryComponent\n              key={treeNode.getId()}\n              model={treeNode}\n              zoomRatio={zoomRatio}\n              isEditPreviewLayer\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nexport default EditPreviewlayerComponent;\n","import * as math from 'mathjs';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport GraphicEditInfoContainer from 'store/container/edit/GraphicEditInfoContainer';\nimport { IPoint, IResizeRatio, ISize } from 'types/common/geometry/GeometryTypes';\nimport { rotatePointAroundPivot } from 'util/coordinate/CoordinateUtil';\nimport {\n  getDisplayedCenterCoordinate,\n  getDisplayedFlipH,\n  getDisplayedFlipV,\n  getDisplayedPosition,\n  getDisplayedRotation,\n  getDisplayedSize,\n} from '../coordinate/GraphicModelCoordinateUtil';\nimport { getParentGroup } from '../GraphicModelTreeNodeUtil';\n\nexport function getGraphicWrapperCoordinateStyle(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): React.CSSProperties {\n  const coordinateStyle: React.CSSProperties = {};\n\n  const { size, transformMatrix } = calculateDisplayedTransformMatrix(\n    graphicEditInfoContainer,\n    graphicModel,\n    isEditPreviewLayer\n  );\n\n  coordinateStyle.transform = matrixToStyleString(transformMatrix);\n\n  coordinateStyle.left = '0px';\n  coordinateStyle.top = '0px';\n  coordinateStyle.width = `${size.width}px`;\n  coordinateStyle.height = `${size.height}px`;\n\n  return coordinateStyle;\n}\n\nfunction calculateDisplayedTransformMatrix(\n  graphicEditInfoContainer: GraphicEditInfoContainer,\n  graphicModel: GraphicModel,\n  isEditPreviewLayer: boolean\n): { size: ISize; transformMatrix: math.Matrix } {\n  let transformMatrix: math.Matrix;\n\n  const targetPosition = getDisplayedPosition(\n    graphicEditInfoContainer,\n    graphicModel,\n    isEditPreviewLayer\n  );\n  const targetSize = getDisplayedSize(graphicEditInfoContainer, graphicModel, isEditPreviewLayer);\n  const targetFlipH = getDisplayedFlipH(graphicEditInfoContainer, graphicModel, isEditPreviewLayer);\n  const targetFlipV = getDisplayedFlipV(graphicEditInfoContainer, graphicModel, isEditPreviewLayer);\n  const targetScale: IResizeRatio = {\n    widthRatio: targetFlipH ? -1 : 1,\n    heightRatio: targetFlipV ? -1 : 1,\n  };\n  const targetRotation = getDisplayedRotation(\n    graphicEditInfoContainer,\n    graphicModel,\n    isEditPreviewLayer\n  );\n\n  if (isEditPreviewLayer === true) {\n    const targetMatrix = getTransformMatrix(targetPosition, targetScale, targetRotation);\n    transformMatrix = targetMatrix;\n  } else {\n    const parentModel = getParentGroup(graphicModel);\n    if (parentModel === undefined) {\n      const targetMatrix = getTransformMatrix(targetPosition, targetScale, targetRotation);\n      transformMatrix = targetMatrix;\n    } else {\n      const parentGroupSize = getDisplayedSize(\n        graphicEditInfoContainer,\n        parentModel,\n        isEditPreviewLayer\n      );\n      const parentGroupFlipH = getDisplayedFlipH(\n        graphicEditInfoContainer,\n        parentModel,\n        isEditPreviewLayer\n      );\n      const parentGroupFlipV = getDisplayedFlipV(\n        graphicEditInfoContainer,\n        parentModel,\n        isEditPreviewLayer\n      );\n      const parentGroupScale: IResizeRatio = {\n        widthRatio: parentGroupFlipH ? -1 : 1,\n        heightRatio: parentGroupFlipV ? -1 : 1,\n      };\n      const parentGroupRotation = getDisplayedRotation(\n        graphicEditInfoContainer,\n        parentModel,\n        isEditPreviewLayer\n      );\n\n      const parentGroupCenter = getDisplayedCenterCoordinate(\n        graphicEditInfoContainer,\n        parentModel,\n        isEditPreviewLayer\n      );\n      const targetCenter = getDisplayedCenterCoordinate(\n        graphicEditInfoContainer,\n        graphicModel,\n        isEditPreviewLayer\n      );\n\n      const lacalizedTargetCenter = rotatePointAroundPivot(\n        targetCenter,\n        parentGroupCenter,\n        -parentGroupRotation\n      );\n\n      const distanceVector: IPoint = {\n        x: lacalizedTargetCenter.x - parentGroupCenter.x,\n        y: lacalizedTargetCenter.y - parentGroupCenter.y,\n      };\n\n      const scale: IResizeRatio = {\n        widthRatio: graphicModel.getCoordinateInfo().getFlipH() === true ? -1 : 1,\n        heightRatio: graphicModel.getCoordinateInfo().getFlipV() === true ? -1 : 1,\n      };\n\n      const translation: IPoint = {\n        x:\n          parentGroupSize.width / 2 -\n          targetSize.width / 2 +\n          distanceVector.x * parentGroupScale.widthRatio,\n        y:\n          parentGroupSize.height / 2 -\n          targetSize.height / 2 +\n          distanceVector.y * parentGroupScale.heightRatio,\n      };\n\n      transformMatrix = getTransformMatrix(\n        translation,\n        scale,\n        graphicModel.getCoordinateInfo().getRotation()\n      );\n    }\n  }\n\n  return { size: targetSize, transformMatrix };\n}\n\nfunction getTransformMatrix(translate: IPoint, scale: IResizeRatio, rotation: number): math.Matrix {\n  const cos = math.cos(math.unit(rotation, 'deg'));\n  const sin = math.sin(math.unit(rotation, 'deg'));\n  const rotationMatrix = math.matrix([\n    [cos, -sin, 0],\n    [sin, cos, 0],\n    [0, 0, 1],\n  ]);\n  const translationMatrix = math.matrix([\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1],\n  ]);\n  const scaleMatrix = math.matrix([\n    [scale.widthRatio, 0, 0],\n    [0, scale.heightRatio, 0],\n    [0, 0, 1],\n  ]);\n\n  return math.multiply(translationMatrix, math.multiply(rotationMatrix, scaleMatrix));\n}\n\nfunction matrixToStyleString(matrix: math.Matrix): string {\n  const a = matrix.get([0, 0]);\n  const b = matrix.get([1, 0]);\n  const c = matrix.get([0, 1]);\n  const d = matrix.get([1, 1]);\n  const tx = matrix.get([0, 2]);\n  const ty = matrix.get([1, 2]);\n  return `matrix(${a}, ${b}, ${c}, ${d}, ${tx}, ${ty})`;\n}\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./GraphicWrapper.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import useGraphicComponentEventListener from 'hook/component/node/graphic/useGraphicComponentEventListener';\nimport useAppStore from 'hook/store/useAppStore';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport React from 'react';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport { IPath } from 'types/model/node/graphic/GraphicTypes';\nimport {\n  getEventSVG,\n  getRenderSVG,\n  makeFillGetterFunction,\n  makeStrokeFillGetterFunction,\n} from 'util/node/graphic/component/GraphicComponentUtil';\nimport { getDisplayedSize } from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\n\nconst GraphicComponent = (props: TreeNodeComponentProps): React.JSX.Element => {\n  const { model, zoomRatio, isEditPreviewLayer } = props;\n  const graphicModel = model as GraphicModel;\n\n  const appStore = useAppStore();\n  const graphicEditInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getGraphicEditInfoContainer();\n\n  const size = getDisplayedSize(graphicEditInfoContainer, graphicModel, isEditPreviewLayer);\n\n  const pathInfo = graphicModel.getPathInfo();\n\n  const pathList =\n    pathInfo !== undefined\n      ? pathInfo.getPath({\n          x: 0,\n          y: 0,\n          width: size.width,\n          height: size.height,\n        })\n      : [];\n\n  const { handleMouseDown } = useGraphicComponentEventListener(graphicModel);\n\n  const hasFill = graphicModel.getFillInfo()?.getFill()?.getFillString() !== 'transparent';\n  const pointerEvents = hasFill ? 'all' : 'stroke';\n\n  const extraEventWidth = 15;\n  const cursor = 'move';\n\n  const eventSVG = getEventSVG(\n    size,\n    pathList,\n    graphicModel.getStrokeInfo()?.getWidth() ?? 1,\n    extraEventWidth,\n    pointerEvents,\n    cursor,\n    handleMouseDown\n  );\n\n  const fillType = graphicModel.getFillInfo()?.getFillType();\n  const defaultFill = graphicModel.getFillInfo()?.getFill()?.getFillString() ?? '';\n  const getFillFunction = makeFillGetterFunction(fillType, defaultFill);\n\n  const strokeFillType = graphicModel.getStrokeInfo()?.getFill()?.getType();\n  const defaultStrokeFill = graphicModel.getStrokeInfo()?.getFill()?.getFillString() ?? '';\n  const getStrokeFillFunction = makeStrokeFillGetterFunction(strokeFillType, defaultStrokeFill);\n\n  const renderSVG = getRenderSVG(\n    size,\n    pathList,\n    graphicModel.getStrokeInfo()?.getWidth(),\n    getFillFunction,\n    getStrokeFillFunction,\n    isEditPreviewLayer\n  );\n\n  return (\n    <>\n      {renderSVG}\n      {eventSVG}\n    </>\n  );\n};\n\nexport default GraphicComponent;\n","import useAppStore from 'hook/store/useAppStore';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\nimport {\n  GraphicMouseEvent,\n  GraphicMouseHandlerType,\n} from 'types/hook/graphic/GraphicEventHookTypes';\nimport { EventStateEnum } from 'types/store/event/EventStateEnum';\n\nexport type Hook = (graphicModel: GraphicModel) => {\n  handleMouseDown: GraphicMouseHandlerType;\n};\n\nconst useGraphicComponentEventListener: Hook = (graphicModel: GraphicModel) => {\n  const appStore = useAppStore();\n  const editableContext = appStore.getAppContext().getEditableContext();\n  const graphicEditInfoContainer = editableContext.getGraphicEditInfoContainer();\n\n  const handleMouseDown = (e: GraphicMouseEvent) => {\n    if (editableContext.getEventState() === EventStateEnum.IDLE) {\n      editableContext.setEventState(EventStateEnum.GRAPHIC_MOVE);\n      graphicEditInfoContainer.setEventTargetGraphicModel(graphicModel);\n    }\n\n    const event = new MouseEvent(e, graphicModel);\n    appStore.handleMouseDown(event);\n  };\n\n  return {\n    handleMouseDown,\n  };\n};\n\nexport default useGraphicComponentEventListener;\n","import React from 'react';\nimport { IPath } from 'types/model/node/graphic/GraphicTypes';\nimport { FillTypeEnum } from 'types/model/node/graphic/FillTypeEnum';\nimport { ISize } from 'types/common/geometry/GeometryTypes';\nimport { GraphicMouseHandlerType } from 'types/hook/graphic/GraphicEventHookTypes';\n\nexport function makeFillGetterFunction(\n  fillType: Nullable<FillTypeEnum>,\n  defaultFill: string\n): (fill: string) => string {\n  const getFillFunction = (fill: string) => {\n    let fillColor = 'none';\n    if (fill !== 'none') {\n      fillColor = defaultFill;\n    }\n    return fillColor;\n  };\n\n  return getFillFunction;\n}\n\nexport function makeStrokeFillGetterFunction(\n  strokeFillType: Nullable<FillTypeEnum>,\n  defaultStrokeFill: string\n): (fill: string) => string {\n  const getStrokeFunction = (stroke: string) => {\n    let strokeColor = 'none';\n    if (stroke === 'default') {\n      strokeColor = defaultStrokeFill;\n    }\n    return strokeColor;\n  };\n\n  return getStrokeFunction;\n}\n\nexport function getEventSVG(\n  size: ISize,\n  pathList: IPath[],\n  strokeWidth: number,\n  extraEventWidth: number,\n  pointerEvents: string,\n  cursor: string,\n  handleMouseDown: GraphicMouseHandlerType\n): React.JSX.Element {\n  const eventPathStrokeWidth = (strokeWidth < 1 ? 1 : strokeWidth) + extraEventWidth;\n\n  return (\n    <svg\n      style={{\n        pointerEvents: 'none',\n        position: 'absolute',\n        overflow: 'visible',\n        top: 0,\n        left: 0,\n        width: `${size.width}`,\n        height: `${size.height}`,\n      }}\n    >\n      <g>\n        {pathList.map((path, index) => {\n          return (\n            <path\n              // eslint-disable-next-line react/no-array-index-key\n              key={`event_path_${index}`}\n              visibility=\"hidden\"\n              pointerEvents={pointerEvents}\n              style={{\n                stroke: `transparent`,\n                cursor,\n              }}\n              d={path.d}\n              strokeWidth={eventPathStrokeWidth}\n              onMouseDown={handleMouseDown}\n            />\n          );\n        })}\n      </g>\n    </svg>\n  );\n}\n\nexport function getRenderSVG(\n  size: ISize,\n  pathList: IPath[],\n  strokeWidth: Nullable<number>,\n  getFillFunction: (fill: string) => string,\n  getStrokeFillFunction: (fill: string) => string,\n  isEditPreviewLayer: boolean\n): React.JSX.Element {\n  const getFill = (path: IPath) => {\n    const resultFill = getFillFunction(path.fill);\n    if (resultFill === '') {\n      return 'transparent';\n    }\n    return resultFill;\n  };\n\n  const gList = pathList.map((path, index) => (\n    <path\n      key={`clippath_path_${index.toString()}`}\n      style={{\n        fill: getFill(path),\n        stroke: getStrokeFillFunction(path.stroke),\n        strokeWidth: `${strokeWidth}`,\n        strokeDasharray: '',\n      }}\n      d={path.d}\n    />\n  ));\n\n  return (\n    <svg\n      style={{\n        pointerEvents: 'none',\n        top: 0,\n        left: 0,\n        width: size.width > 1 ? size.width : 1,\n        height: size.height > 1 ? size.height : 1,\n        overflow: 'visible',\n        position: 'absolute',\n        opacity: isEditPreviewLayer ? 0.6 : undefined,\n      }}\n    >\n      <g>{gList}</g>\n    </svg>\n  );\n}\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./GraphicChildWrapper.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import useAppStore from 'hook/store/useAppStore';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport React from 'react';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport { getDisplayedSize } from 'util/node/graphic/coordinate/GraphicModelCoordinateUtil';\nimport styles from 'scss/component/node/graphic/GraphicChildWrapper.module.scss';\nimport classNames from 'classnames';\nimport useRenderChildren from 'hook/component/node/useRenderChildren';\n\nconst GraphicChildWrapperComponent = (props: TreeNodeComponentProps): React.JSX.Element => {\n  const { model, zoomRatio, isEditPreviewLayer } = props;\n  const graphicModel = model as GraphicModel;\n\n  const { renderedChildren } = useRenderChildren(props);\n\n  const appStore = useAppStore();\n  const graphicEditInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getGraphicEditInfoContainer();\n\n  const size = getDisplayedSize(graphicEditInfoContainer, graphicModel, isEditPreviewLayer);\n\n  return (\n    <div\n      className={classNames(styles.container)}\n      style={{ width: `${size.width}px`, height: `${size.height}px` }}\n    >\n      {renderedChildren}\n    </div>\n  );\n};\n\nexport default GraphicChildWrapperComponent;\n","import SlideModel from 'model/node/slide/SlideModel';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { TreeNodeComponentMapType } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport SlideComponent from '../slide/SlideComponent';\nimport GraphicWrapperComponent from '../graphic/GraphicWrapperComponent';\n\nexport const TreeNodeComponentMap: TreeNodeComponentMapType = new Map([\n  [SlideModel.getUniqueKey(), SlideComponent],\n  [GraphicModel.getUniqueKey(), GraphicWrapperComponent],\n]);\n","import useSlideSize from 'hook/component/node/slide/useSlideSize';\nimport useRenderChildren from 'hook/component/node/useRenderChildren';\nimport React from 'react';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\n\nimport styles from 'scss/component/node/slide/Slide.module.scss';\nimport classNames from 'classnames';\nimport useTreeNodeRerender from 'hook/component/node/useTreeNodeRerender';\nimport { MouseEventCoordinateReferenceId } from 'types/component/node/slide/SlideComponentTypes';\nimport SlideBackgroundComponent from './SlideBackgroundComponent';\nimport SlideEventComponent from './SlideEventComponent';\nimport SelectionLayerComponent from './selectionlayer/SelectionLayerComponent';\nimport EditPreviewlayerComponent from './editpreviewlayer/EditPreviewLayerComponent';\n\nconst SlideComponent = (props: TreeNodeComponentProps): React.JSX.Element => {\n  useTreeNodeRerender(props);\n  const { renderedChildren } = useRenderChildren(props);\n  const { contentsWrapperRef, contentsRef, slideBackgroundRef } = useSlideSize(props);\n\n  return (\n    <div className={classNames(styles.container)}>\n      <div ref={contentsWrapperRef} className={classNames(styles.contents_wrapper)}>\n        <SlideEventComponent {...props}>\n          <div\n            id={MouseEventCoordinateReferenceId}\n            ref={contentsRef}\n            className={classNames(styles.slide_background_wrapper)}\n          >\n            <SlideBackgroundComponent ref={slideBackgroundRef} {...props} />\n            {renderedChildren}\n            <EditPreviewlayerComponent />\n            <SelectionLayerComponent />\n          </div>\n        </SlideEventComponent>\n      </div>\n    </div>\n  );\n};\n\nexport default SlideComponent;\n","import { MutableRefObject, useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport useResizeObserver from 'hook/event/useResizeObserver';\nimport { IRect } from 'types/common/geometry/GeometryTypes';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport {\n  EditViewScollBarSize,\n  SlideComponentBasicMargin,\n} from 'types/component/node/slide/SlideComponentTypes';\nimport SlideModel from 'model/node/slide/SlideModel';\nimport { EditViewSizeTrackerId } from 'types/component/frame/workarea/edit/EditViewTypes';\nimport useAppStore from 'hook/store/useAppStore';\n\ntype Hook = (props: TreeNodeComponentProps) => {\n  contentsWrapperRef: React.RefObject<HTMLDivElement>;\n  contentsRef: React.RefObject<HTMLDivElement>;\n  slideBackgroundRef: React.RefObject<SVGSVGElement>;\n};\n\nconst useSlideSize: Hook = (props: TreeNodeComponentProps) => {\n  const appStore = useAppStore();\n\n  const isFitZoom = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getViewModeContainer()\n    .getIsFitZoom();\n  const { model } = props;\n  const slideModel = model as SlideModel;\n\n  const calculateContentsSizeRef = useRef<number>(0);\n\n  useEffect(() => {\n    slideModel.setCalculateContentsSizeRef(calculateContentsSizeRef);\n\n    return () => {\n      slideModel.setCalculateContentsSizeRef(undefined);\n    };\n  }, []);\n\n  const editViewSizeTrackerRef = useRef<HTMLElement>(null);\n  const contentsWrapperRef = useRef<HTMLDivElement>(null);\n  const contentsRef = useRef<HTMLDivElement>(null);\n  const slideBackgroundRef = useRef<SVGSVGElement>(null);\n\n  const editViewRectRef = useRef<IRect>({\n    left: Number.MAX_SAFE_INTEGER,\n    top: Number.MAX_SAFE_INTEGER,\n    right: Number.MIN_SAFE_INTEGER,\n    bottom: Number.MIN_SAFE_INTEGER,\n    width: 0,\n    height: 0,\n  });\n  const contentsBoundingRectRef = useRef<IRect>({\n    left: Number.MAX_SAFE_INTEGER,\n    top: Number.MAX_SAFE_INTEGER,\n    right: Number.MIN_SAFE_INTEGER,\n    bottom: Number.MIN_SAFE_INTEGER,\n    width: 0,\n    height: 0,\n  });\n  const slideBackgroundRectRef = useRef<IRect>({\n    left: Number.MAX_SAFE_INTEGER,\n    top: Number.MAX_SAFE_INTEGER,\n    right: Number.MIN_SAFE_INTEGER,\n    bottom: Number.MIN_SAFE_INTEGER,\n    width: 0,\n    height: 0,\n  });\n\n  const slideOffsetTopRef = useRef<number>(0);\n  const slideOffsetLeftRef = useRef<number>(0);\n\n  const setRectInfo = useCallback(\n    (rectInfoRef: React.MutableRefObject<IRect>, domRect: DOMRect): void => {\n      const rectInfo = rectInfoRef.current;\n      rectInfo.left = domRect.left;\n      rectInfo.top = domRect.top;\n      rectInfo.right = domRect.right;\n      rectInfo.bottom = domRect.bottom;\n      rectInfo.width = domRect.width;\n      rectInfo.height = domRect.height;\n    },\n    []\n  );\n\n  useLayoutEffect(() => {\n    const editViewSizeTracker = document.getElementById(EditViewSizeTrackerId);\n    if (editViewSizeTracker !== null) {\n      (editViewSizeTrackerRef as MutableRefObject<HTMLElement>).current = editViewSizeTracker;\n      setRectInfo(editViewRectRef, editViewSizeTracker.getBoundingClientRect());\n    }\n  }, []);\n\n  const getContentsBoundingRect = useCallback((element: Element) => {\n    const { children } = element;\n    for (let i = 0; i < children.length; i += 1) {\n      const child = children.item(i);\n      if (child !== null) {\n        getContentsBoundingRect(child);\n      }\n    }\n    const elementRect = element.getBoundingClientRect();\n    const contentsBoundingRect = contentsBoundingRectRef.current;\n    contentsBoundingRect.left = Math.min(contentsBoundingRect.left, elementRect.left);\n    contentsBoundingRect.top = Math.min(contentsBoundingRect.top, elementRect.top);\n    contentsBoundingRect.right = Math.max(contentsBoundingRect.right, elementRect.right);\n    contentsBoundingRect.bottom = Math.max(contentsBoundingRect.bottom, elementRect.bottom);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (contentsRef.current !== null && slideBackgroundRef.current !== null) {\n      const contentsBoundingRect = contentsBoundingRectRef.current;\n\n      contentsBoundingRect.top = Number.MAX_SAFE_INTEGER;\n      contentsBoundingRect.left = Number.MAX_SAFE_INTEGER;\n      contentsBoundingRect.bottom = Number.MIN_SAFE_INTEGER;\n      contentsBoundingRect.right = Number.MIN_SAFE_INTEGER;\n      contentsBoundingRect.width = 0;\n      contentsBoundingRect.height = 0;\n\n      getContentsBoundingRect(contentsRef.current);\n      contentsBoundingRect.width = contentsBoundingRect.right - contentsBoundingRect.left;\n      contentsBoundingRect.height = contentsBoundingRect.bottom - contentsBoundingRect.top;\n\n      setRectInfo(slideBackgroundRectRef, slideBackgroundRef.current.getBoundingClientRect());\n    }\n  }, [calculateContentsSizeRef.current]);\n\n  const updateSlideSize = useCallback((updateScrollBar: boolean) => {\n    if (contentsWrapperRef.current !== null && contentsRef.current !== null) {\n      const editViewRect = editViewRectRef.current;\n      const containerRect = { ...editViewRect };\n      const contentsBoundingRect = contentsBoundingRectRef.current;\n      const slideBackgroundRect = slideBackgroundRectRef.current;\n\n      let slideWrapperWidth = 0;\n      let slideWrapperHeight = 0;\n      let slideOffsetTop = 0;\n      let slideOffsetLeft = 0;\n      let editViewScrollTop = 0;\n      let editViewScrollLeft = 0;\n\n      const contentsOutsideTop = slideBackgroundRect.top - contentsBoundingRect.top;\n      const contentsOutsideLeft = slideBackgroundRect.left - contentsBoundingRect.left;\n      const contentsOutsideBottom = contentsBoundingRect.bottom - slideBackgroundRect.bottom;\n      const contentsOutsideRight = contentsBoundingRect.right - slideBackgroundRect.right;\n\n      containerRect.width -= 2 * SlideComponentBasicMargin;\n      containerRect.height -= 2 * SlideComponentBasicMargin;\n\n      if (containerRect.width < contentsBoundingRect.width) {\n        containerRect.height -= EditViewScollBarSize;\n        if (containerRect.height < contentsBoundingRect.height) {\n          containerRect.width -= EditViewScollBarSize;\n        }\n      } else if (containerRect.height < contentsBoundingRect.height) {\n        containerRect.width -= EditViewScollBarSize;\n        if (containerRect.width < contentsBoundingRect.width) {\n          containerRect.height -= EditViewScollBarSize;\n        }\n      }\n\n      const availableWidth = (containerRect.width - slideBackgroundRect.width) / 2;\n      const availableHeight = (containerRect.height - slideBackgroundRect.height) / 2;\n\n      let isScrollNeeded = false;\n\n      if (containerRect.width < contentsBoundingRect.width) {\n        slideWrapperWidth = contentsBoundingRect.width + SlideComponentBasicMargin * 2;\n        slideOffsetLeft = contentsOutsideLeft + SlideComponentBasicMargin;\n        if (contentsOutsideLeft <= availableWidth) {\n          // scroll to 0\n        } else if (contentsOutsideRight <= availableWidth) {\n          isScrollNeeded = true;\n          editViewScrollLeft = slideWrapperWidth;\n        } else {\n          isScrollNeeded = true;\n          editViewScrollLeft =\n            slideOffsetLeft + slideBackgroundRect.width / 2 - containerRect.width / 2;\n        }\n      } else {\n        slideWrapperWidth = Math.max(\n          containerRect.width,\n          contentsBoundingRect.width + SlideComponentBasicMargin * 2\n        );\n        if (contentsOutsideLeft <= availableWidth && contentsOutsideRight <= availableWidth) {\n          slideOffsetLeft = SlideComponentBasicMargin + availableWidth;\n        } else if (contentsOutsideLeft <= availableWidth) {\n          slideOffsetLeft =\n            SlideComponentBasicMargin + availableWidth - (contentsOutsideRight - availableWidth);\n        } else if (contentsOutsideRight <= availableWidth) {\n          slideOffsetLeft = SlideComponentBasicMargin + contentsOutsideLeft;\n        }\n      }\n\n      if (containerRect.height < contentsBoundingRect.height) {\n        slideWrapperHeight = contentsBoundingRect.height + SlideComponentBasicMargin * 2;\n        slideOffsetTop = contentsOutsideTop + SlideComponentBasicMargin;\n        if (contentsOutsideTop <= availableHeight) {\n          // scroll to 0\n        } else if (contentsOutsideBottom <= availableHeight) {\n          isScrollNeeded = true;\n          editViewScrollTop = slideWrapperHeight;\n        } else {\n          isScrollNeeded = true;\n          editViewScrollTop =\n            slideOffsetTop + slideBackgroundRect.height / 2 - containerRect.height / 2;\n        }\n      } else {\n        slideWrapperHeight = Math.max(\n          containerRect.height,\n          contentsBoundingRect.height + SlideComponentBasicMargin * 2\n        );\n        if (contentsOutsideTop <= availableHeight && contentsOutsideBottom <= availableHeight) {\n          slideOffsetTop = SlideComponentBasicMargin + availableHeight;\n        } else if (contentsOutsideTop <= availableHeight) {\n          slideOffsetTop =\n            SlideComponentBasicMargin + availableHeight - (contentsOutsideBottom - availableHeight);\n        } else if (contentsOutsideBottom <= availableHeight) {\n          slideOffsetTop = SlideComponentBasicMargin + contentsOutsideTop;\n        }\n      }\n\n      const diffTop = slideOffsetTop - slideOffsetTopRef.current;\n      const diffLeft = slideOffsetLeft - slideOffsetLeftRef.current;\n\n      slideBackgroundRect.top += diffTop;\n      slideBackgroundRect.left += diffLeft;\n      slideBackgroundRect.bottom += diffTop;\n      slideBackgroundRect.right += diffLeft;\n\n      contentsBoundingRect.top += diffTop;\n      contentsBoundingRect.left += diffLeft;\n      contentsBoundingRect.bottom += diffTop;\n      contentsBoundingRect.right += diffLeft;\n\n      contentsWrapperRef.current.style.cssText = `width:${slideWrapperWidth}px; height:${slideWrapperHeight}px;`;\n      contentsRef.current.style.cssText = `top:${slideOffsetTop}px; left:${slideOffsetLeft}px;`;\n\n      slideOffsetTopRef.current = slideOffsetTop;\n      slideOffsetLeftRef.current = slideOffsetLeft;\n\n      if (updateScrollBar === true && isScrollNeeded === true) {\n        const editViewHTMLElement = document.getElementById(EditViewSizeTrackerId);\n        if (editViewHTMLElement !== null) {\n          setTimeout(() => {\n            editViewHTMLElement.scrollTo({\n              top: editViewScrollTop,\n              left: editViewScrollLeft,\n              behavior: 'smooth',\n            });\n          }, 0);\n        }\n      }\n    }\n  }, []);\n\n  useResizeObserver({\n    targetRef: editViewSizeTrackerRef,\n    callback: entry => {\n      if (editViewSizeTrackerRef.current !== null) {\n        setRectInfo(editViewRectRef, entry.target.getBoundingClientRect());\n\n        // offset 보존\n        // 임시 image 로 표시 (timer)\n        // dom-to-image / html2canvas\n        // viewModeContainer.setZoomRatio(1);\n        // viewModeContainer.rerenderEditView();\n        if (isFitZoom === true) {\n          updateSlideSize(false);\n        } else {\n          updateSlideSize(false);\n        }\n      }\n    },\n  });\n\n  useLayoutEffect(() => {\n    updateSlideSize(true);\n  }, [calculateContentsSizeRef.current]);\n\n  return {\n    contentsWrapperRef,\n    contentsRef,\n    slideBackgroundRef,\n  };\n};\n\nexport default useSlideSize;\n","import React from 'react';\nimport classNames from 'classnames';\nimport useAppStore from 'hook/store/useAppStore';\nimport GraphicModel from 'model/node/graphic/GraphicModel';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport { getGraphicWrapperCoordinateStyle } from 'util/node/graphic/component/GraphicWrapperComponentUtil';\n\nimport styles from 'scss/component/node/graphic/GraphicWrapper.module.scss';\nimport useTreeNodeRerender from 'hook/component/node/useTreeNodeRerender';\nimport GraphicComponent from './GraphicComponent';\nimport GraphicChildWrapperComponent from './GraphicChildWrapperComponent';\n\nconst GraphicWrapperComponent = (props: TreeNodeComponentProps): React.JSX.Element => {\n  useTreeNodeRerender(props);\n  const { model, zoomRatio, isEditPreviewLayer } = props;\n  const graphicModel = model as GraphicModel;\n  const isBeingEdited = graphicModel.getIsBeingEdited();\n\n  const appStore = useAppStore();\n  const graphicEditInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getGraphicEditInfoContainer();\n\n  const isVisible = isEditPreviewLayer === true || isBeingEdited === false;\n\n  if (isVisible === false) {\n    return <></>;\n  }\n\n  const coordinateStyle = getGraphicWrapperCoordinateStyle(\n    graphicEditInfoContainer,\n    graphicModel,\n    isEditPreviewLayer\n  );\n\n  return (\n    <div\n      className={classNames(styles.container)}\n      style={{\n        ...coordinateStyle,\n        pointerEvents: 'none',\n      }}\n    >\n      <GraphicComponent {...props} />\n      <GraphicChildWrapperComponent {...props} />\n    </div>\n  );\n};\n\nexport default GraphicWrapperComponent;\n","import React from 'react';\nimport { TreeNodeComponentProps } from 'types/component/node/factory/TreeNodeFactoryComponentTypes';\nimport { identify } from 'util/id/Identifiable';\nimport { TreeNodeComponentMap } from './TreeNodeComponentMap';\n\nconst TreeNodeFactoryComponent = (props: TreeNodeComponentProps): React.JSX.Element => {\n  const { model } = props;\n  const TargetComponent = TreeNodeComponentMap.get(identify(model.constructor));\n\n  return <>{TargetComponent && <TargetComponent {...props} />}</>;\n};\n\nexport default TreeNodeFactoryComponent;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./EditView.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useLayoutEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport useAppStore from 'hook/store/useAppStore';\nimport useRerender from 'hook/store/useRerender';\nimport { EditViewSizeTrackerId } from 'types/component/frame/workarea/edit/EditViewTypes';\nimport TreeNodeFactoryComponent from 'component/node/factory/TreeNodeFactoryComponent';\n\nimport styles from 'scss/component/frame/workarea/edit/EditView.module.scss';\n\nconst EditViewComponent = (): React.JSX.Element => {\n  const { triggerRerender } = useRerender();\n  const ref = useRef<HTMLDivElement>(null);\n  const appStore = useAppStore();\n  const viewModeContainer = appStore.getAppContext().getEditableContext().getViewModeContainer();\n  const zoomRatio = viewModeContainer.getZoomRatio();\n\n  useLayoutEffect(() => {\n    if (ref.current !== null) {\n      viewModeContainer.setEditViewSizeTrackerRef(ref);\n      viewModeContainer.setRerenderEditViewFunction(triggerRerender);\n    }\n  }, []);\n\n  const treeNodeRoot = appStore.getAppContext().getEditableContext().getTreeNodeRoot();\n\n  return (\n    <div className={classNames(styles.container)}>\n      <div id={EditViewSizeTrackerId} className={classNames(styles.size_tracker)} />\n      <div ref={ref} className={classNames(styles.contents)}>\n        <TreeNodeFactoryComponent\n          model={treeNodeRoot}\n          zoomRatio={zoomRatio}\n          isEditPreviewLayer={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EditViewComponent;\n","import useResizeObserver from 'hook/event/useResizeObserver';\nimport useAppStore from 'hook/store/useAppStore';\nimport { useLayoutEffect, useRef } from 'react';\nimport { CursorType, ICursorInfo } from 'types/common/cursor/CursorTypes';\n\ninterface UseCompositeViewDividerProps {\n  compositeViewRef: React.RefObject<HTMLDivElement>;\n  firstChildRef: React.RefObject<HTMLDivElement>;\n  dividerViewRef: React.RefObject<HTMLDivElement>;\n  dividerControllerRef: React.RefObject<HTMLDivElement>;\n  ratio: number;\n  flexDirection: 'row' | 'column';\n}\n\ntype HOOK = ({\n  compositeViewRef,\n  firstChildRef,\n  dividerViewRef,\n  dividerControllerRef,\n  ratio,\n  flexDirection,\n}: UseCompositeViewDividerProps) => {\n  firstChildCssStyle: React.CSSProperties;\n  handleMouseDownCapture: (e: React.MouseEvent<Element>) => void;\n};\n\nconst useCompositeViewDivider: HOOK = ({\n  compositeViewRef,\n  firstChildRef,\n  dividerViewRef,\n  dividerControllerRef,\n  ratio,\n  flexDirection,\n}: UseCompositeViewDividerProps) => {\n  const appStore = useAppStore();\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n\n  const mouseCoordinateRef = useRef<number>(0);\n  const initialSizeRef = useRef<number>(0);\n  const compositeViewSizeRef = useRef<number>(0);\n\n  const firstChildCssStyle =\n    flexDirection === 'row' ? { width: `${ratio}%` } : { height: `${ratio}%` };\n\n  const setRatio =\n    flexDirection === 'row'\n      ? (newRatio: number): void => {\n          const firstChild = firstChildRef.current;\n          if (firstChild !== null) {\n            firstChild.style.width = `${newRatio}%`;\n          }\n        }\n      : (newRatio: number): void => {\n          const firstChild = firstChildRef.current;\n          if (firstChild !== null) {\n            firstChild.style.height = `${newRatio}%`;\n          }\n        };\n\n  const updateDivider =\n    flexDirection === 'row'\n      ? () => {\n          if (dividerViewRef.current !== null && dividerControllerRef.current !== null) {\n            const dividerControllerDivElement = dividerControllerRef.current;\n            const dividerControllerWidth = 10 / window.devicePixelRatio;\n            const dividerViewRect = dividerViewRef.current.getBoundingClientRect();\n\n            const dividerControllerStyle = `left:${\n              dividerViewRect.left - (dividerControllerWidth - dividerViewRect.width) / 2\n            }px; width:${dividerControllerWidth}px; height:${dividerViewRect.height}px;`;\n            dividerControllerDivElement.style.cssText = dividerControllerStyle;\n          }\n        }\n      : () => {\n          if (dividerViewRef.current !== null && dividerControllerRef.current !== null) {\n            const dividerControllerDivElement = dividerControllerRef.current;\n            const dividerControllerHeight = 10 / window.devicePixelRatio;\n            const dividerViewRect = dividerViewRef.current.getBoundingClientRect();\n\n            const dividerControllerStyle = `top:${\n              dividerViewRect.top - (dividerControllerHeight - dividerViewRect.height) / 2\n            }px; width:${dividerViewRect.width}px; height:${dividerControllerHeight}px;`;\n            dividerControllerDivElement.style.cssText = dividerControllerStyle;\n          }\n        };\n\n  useResizeObserver({ targetRef: firstChildRef, callback: updateDivider });\n\n  const getMouseCoordinate =\n    flexDirection === 'row'\n      ? (e: React.MouseEvent<Element> | MouseEvent): number => {\n          return e.clientX;\n        }\n      : (e: React.MouseEvent<Element> | MouseEvent): number => {\n          return e.clientY;\n        };\n\n  const setMouseCoordinate =\n    flexDirection === 'row'\n      ? (e: React.MouseEvent<Element>): void => {\n          mouseCoordinateRef.current = e.clientX;\n        }\n      : (e: React.MouseEvent<Element>): void => {\n          mouseCoordinateRef.current = e.clientY;\n        };\n\n  const getFirstChildSize =\n    flexDirection === 'row'\n      ? (): number => {\n          return firstChildRef.current?.getBoundingClientRect().width ?? 0;\n        }\n      : (): number => {\n          return firstChildRef.current?.getBoundingClientRect().height ?? 0;\n        };\n\n  const setInitialSize =\n    flexDirection === 'row'\n      ? (): void => {\n          initialSizeRef.current = getFirstChildSize();\n        }\n      : (): void => {\n          initialSizeRef.current = getFirstChildSize();\n        };\n\n  const getCompositeViewSize =\n    flexDirection === 'row'\n      ? (): number => {\n          return compositeViewRef.current?.getBoundingClientRect().width ?? 0;\n        }\n      : (): number => {\n          return compositeViewRef.current?.getBoundingClientRect().height ?? 0;\n        };\n\n  const setCompositeViewSize =\n    flexDirection === 'row'\n      ? (): void => {\n          compositeViewSizeRef.current = getCompositeViewSize();\n        }\n      : (): void => {\n          compositeViewSizeRef.current = getCompositeViewSize();\n        };\n\n  const cursorInfo: ICursorInfo =\n    flexDirection === 'row'\n      ? { cursorType: CursorType.ew_resize }\n      : { cursorType: CursorType.ns_resize };\n\n  const handleMouseMoveCapture = (e: MouseEvent): void => {\n    const currentMouseCoordinate = getMouseCoordinate(e);\n    const newSize = Math.max(\n      initialSizeRef.current - mouseCoordinateRef.current + currentMouseCoordinate,\n      100\n    );\n    const newRatio = Math.min((newSize / compositeViewSizeRef.current) * 100, 100);\n    setRatio(newRatio);\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  function handleMouseDownCapture(e: React.MouseEvent<Element>): void {\n    proxyLayerInfoContainer.enableAppAreaProxyLayer(undefined, cursorInfo, false, false);\n    mouseCoordinateRef.current = getMouseCoordinate(e);\n    setMouseCoordinate(e);\n    setInitialSize();\n    setCompositeViewSize();\n    window.addEventListener('mousemove', handleMouseMoveCapture, true);\n    window.addEventListener('mouseup', handleMouseUpCapture, true);\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n  }\n\n  function handleMouseUpCapture(e: MouseEvent): void {\n    proxyLayerInfoContainer.disableAppAreaProxyLayer();\n    window.removeEventListener('mousemove', handleMouseMoveCapture, true);\n    window.removeEventListener('mouseup', handleMouseUpCapture, true);\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  return { firstChildCssStyle, handleMouseDownCapture };\n};\n\nexport default useCompositeViewDivider;\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./CompositeView.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useRef } from 'react';\nimport { ICompositeViewProps } from 'types/component/frame/workarea/composite/CompositeViewTypes';\nimport classNames from 'classnames';\nimport useCompositeViewDivider from 'hook/component/frame/workarea/composite/useCompositeViewDivider';\n\nimport styles from 'scss/component/frame/workarea/composite/CompositeView.module.scss';\n\nconst CompositeViewComponent = ({\n  firstChild,\n  secondChild,\n  ratio,\n  flexDirection,\n}: ICompositeViewProps): React.JSX.Element => {\n  const compositeViewRef = useRef<HTMLDivElement>(null);\n  const firstChildRef = useRef<HTMLDivElement>(null);\n  const dividerViewRef = useRef<HTMLDivElement>(null);\n  const dividerControllerRef = useRef<HTMLDivElement>(null);\n\n  const { firstChildCssStyle, handleMouseDownCapture } = useCompositeViewDivider({\n    compositeViewRef,\n    firstChildRef,\n    dividerViewRef,\n    dividerControllerRef,\n    ratio,\n    flexDirection,\n  });\n\n  return (\n    <div\n      ref={compositeViewRef}\n      className={classNames({ [styles.container]: true }, { [styles[flexDirection]]: true })}\n    >\n      <div\n        className={classNames({ [styles.child]: true }, { [styles[flexDirection]]: true })}\n        ref={firstChildRef}\n        style={firstChildCssStyle}\n      >\n        {firstChild}\n      </div>\n      <div\n        role=\"grid\"\n        tabIndex={-1}\n        ref={dividerViewRef}\n        className={classNames({ [styles.divider_view]: true }, { [styles[flexDirection]]: true })}\n      />\n      <div\n        role=\"grid\"\n        tabIndex={-1}\n        ref={dividerControllerRef}\n        className={classNames(\n          { [styles.divider_controller]: true },\n          { [styles[flexDirection]]: true }\n        )}\n        onMouseDownCapture={handleMouseDownCapture}\n      />\n      <div\n        className={classNames(\n          { [styles.child]: true },\n          { [styles.second]: true },\n          { [styles[flexDirection]]: true }\n        )}\n      >\n        {secondChild}\n      </div>\n    </div>\n  );\n};\n\nexport default CompositeViewComponent;\n","import React from 'react';\n\nconst ListViewComponent = (): React.JSX.Element => {\n  return <span>this is list view</span>;\n};\n\nexport default ListViewComponent;\n","import React from 'react';\n\nconst NoteViewComponent = (): React.JSX.Element => {\n  return <span>this is note view</span>;\n};\n\nexport default NoteViewComponent;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from 'scss/component/frame/workarea/content/Content.module.scss';\nimport EditViewComponent from '../edit/EditViewComponent';\nimport CompositeViewComponent from '../composite/CompositeViewComponent';\nimport ListViewComponent from '../list/ListViewComponent';\nimport NoteViewComponent from '../note/NoteViewComponent';\n\nconst ContentComponent = (): React.JSX.Element => {\n  const editCompositeViewComponent: React.JSX.Element = (\n    <div className={classNames(styles.edit)}>\n      <CompositeViewComponent\n        firstChild={<EditViewComponent />}\n        secondChild={<NoteViewComponent />}\n        ratio={85}\n        flexDirection=\"column\"\n      />\n    </div>\n  );\n\n  const listCompositeViewComponent: React.JSX.Element = (\n    <div className={classNames(styles.list)}>\n      <CompositeViewComponent\n        firstChild={<ListViewComponent />}\n        secondChild={editCompositeViewComponent}\n        ratio={10}\n        flexDirection=\"row\"\n      />\n    </div>\n  );\n\n  return <div className={classNames(styles.container)}>{listCompositeViewComponent}</div>;\n};\n\nexport default React.memo(ContentComponent);\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./ToolPaneWrapper.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./ToolPaneDock.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../node_modules/sass-loader/dist/cjs.js!./ToolPaneDockButton.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport ButtonBaseComponent from 'component/frame/control/button/base/ButtonBaseComponent';\nimport ButtonBaseIconComponent from 'component/frame/control/button/base/ButtonBaseIconComponent';\n\nimport styles from 'scss/component/frame/workarea/toolpane/ToolPaneDockButton.module.scss';\nimport { ToolPaneDockButtonProps } from 'types/component/frame/workarea/toolpane/ToolPaneDockButtonTypes';\n\nconst ToolPaneDockButtonComponent = ({\n  img,\n  selected,\n  disabled,\n  onClick,\n}: ToolPaneDockButtonProps): React.JSX.Element => {\n  return (\n    <ButtonBaseComponent\n      className={styles.button}\n      selected={selected}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <ButtonBaseIconComponent img={img} width=\"24px\" height=\"24px\" />\n    </ButtonBaseComponent>\n  );\n};\n\nexport default ToolPaneDockButtonComponent;\n","import useAppStore from 'hook/store/useAppStore';\nimport React from 'react';\nimport {\n  BasicToolPane,\n  ToolPaneType,\n} from 'types/store/container/ui/toolpane/ToolPaneContainerTypes';\nimport styles from 'scss/component/frame/workarea/toolpane/ToolPaneDock.module.scss';\nimport ToolPaneDockButtonComponent from './ToolPaneDockButtonComponent';\n\nconst ToolPaneDockComponent = (): React.JSX.Element => {\n  const appStore = useAppStore();\n  const toolPaneContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getUIContainer()\n    .getToolPaneContainer();\n\n  const isToolPaneOpened = toolPaneContainer.getIsToolPaneOpened();\n  const toolPaneInfoList = toolPaneContainer.getToolPaneInfoList();\n  const selectedToolPaneId = toolPaneContainer.getSelectedToolPaneId();\n\n  const renderToolPaneDockComponent = (type: ToolPaneType) => {\n    return toolPaneInfoList\n      ?.filter(([, toolPaneInfo]) => {\n        return toolPaneInfo?.type === type;\n      })\n      .map(([toolPaneId, toolPaneInfo]) => {\n        if (toolPaneInfo === undefined) {\n          return <></>;\n        }\n\n        const selected = toolPaneId === selectedToolPaneId && isToolPaneOpened;\n\n        return (\n          <ToolPaneDockButtonComponent\n            img={toolPaneInfo.img}\n            disabled={toolPaneInfo.disabled}\n            selected={selected}\n            onClick={() => {\n              toolPaneContainer.onToolPaneDockButtonClicked(toolPaneId);\n            }}\n            key={`TOOLPANE_DOCK_BUTTON_${toolPaneId}`}\n          />\n        );\n      });\n  };\n\n  return (\n    <div className={styles.container} role=\"toolbar\">\n      {renderToolPaneDockComponent(BasicToolPane)}\n    </div>\n  );\n};\n\nexport default ToolPaneDockComponent;\n","import useAppStore from 'hook/store/useAppStore';\nimport useRerender from 'hook/store/useRerender';\nimport React, { forwardRef, useEffect } from 'react';\nimport styles from 'scss/component/frame/workarea/toolpane/ToolPaneWrapper.module.scss';\nimport ToolPaneDockComponent from './ToolPaneDockComponent';\n\nconst ToolPaneWrapperComponent = forwardRef<HTMLDivElement>((_, ref): React.JSX.Element => {\n  const { triggerRerender } = useRerender();\n  const appStore = useAppStore();\n  const toolPaneContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getUIContainer()\n    .getToolPaneContainer();\n\n  useEffect(() => {\n    toolPaneContainer.setRerenderToolPaneWrapperFunction(triggerRerender);\n  }, []);\n\n  const selectedToolPaneId = toolPaneContainer.getSelectedToolPaneId();\n  const selectedToolPaneInfo = toolPaneContainer.getToolPaneInfo(selectedToolPaneId);\n  const isToolPaneOpened = toolPaneContainer.getIsToolPaneOpened();\n\n  return (\n    <div\n      className={styles.container}\n      ref={ref}\n      role=\"toolbar\"\n      onMouseDownCapture={() => {\n        appStore.getAppContext().getEditableContext().setMouseLButtonPressed(false);\n      }}\n    >\n      <ToolPaneDockComponent />\n      {isToolPaneOpened && selectedToolPaneInfo?.content && selectedToolPaneInfo?.content()}\n    </div>\n  );\n});\n\nexport default ToolPaneWrapperComponent;\n","import classNames from 'classnames';\nimport React from 'react';\nimport styles from 'scss/component/frame/workarea/WorkArea.module.scss';\nimport ContentComponent from './content/ContentComponent';\nimport ToolPaneWrapperComponent from './toolpane/ToolPaneWrapperComponent';\n\n/**\n * WorkArea를 render 하는 component 입니다.\n */\nconst WorkAreaComponent = (): React.JSX.Element => {\n  return (\n    <div className={classNames(styles.container)}>\n      <ContentComponent />\n      <ToolPaneWrapperComponent />\n    </div>\n  );\n};\n\nexport default WorkAreaComponent;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./MainPage.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useEffect } from 'react';\n\ninterface UseRegisterEventHandlerProps<K extends keyof HTMLElementEventMap> {\n  eventType: K;\n  eventHandler: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void;\n  capture?: boolean;\n  allowRegister?: boolean;\n  targetElement?: HTMLElement;\n}\n\n/**\n * @param eventType 이벤트의 종류\n * @param eventHandler 이벤트 처리 함수\n * @param options.capture capture 사용 여부\n * @param options.allowRegister 이벤트 리스너 등록 여부\n * @param options.targetElement 이벤트 타겟, 기본값은 <div id='app_root'>\n */\nconst useRegisterEventHandler = <K extends keyof HTMLElementEventMap>({\n  eventType,\n  eventHandler,\n  capture,\n  allowRegister,\n  targetElement,\n}: UseRegisterEventHandlerProps<K>): void => {\n  useEffect(() => {\n    const target = targetElement || document.getElementById('app_root');\n\n    if (allowRegister === true) {\n      target?.addEventListener(eventType, eventHandler, capture);\n    } else {\n      target?.removeEventListener(eventType, eventHandler, capture);\n    }\n\n    return () => {\n      target?.removeEventListener(eventType, eventHandler, capture);\n    };\n  }, [allowRegister]);\n};\n\nexport default useRegisterEventHandler;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./AppAreaProxyLayer.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { useImageResourceToDataURLString } from 'hook/resource/useImgRes';\nimport { CursorType, ICursorInfo } from 'types/common/cursor/CursorTypes';\n\ntype Hook = (cursorInfo: Nullable<ICursorInfo>) => {\n  cursorStyle: Nullable<string>;\n};\n\nconst useCursorStyle: Hook = (cursorInfo: Nullable<ICursorInfo>) => {\n  const cursorImage = useImageResourceToDataURLString({\n    img: cursorInfo?.img,\n  });\n\n  const cursorPosition =\n    cursorInfo !== undefined &&\n    cursorInfo.cursorType === CursorType.img &&\n    cursorInfo.position !== undefined\n      ? `${cursorInfo.position.x} ${cursorInfo.position.y}`\n      : '';\n\n  const cursorStyle =\n    cursorInfo !== undefined && cursorInfo.cursorType === CursorType.img\n      ? `${cursorImage} ${cursorPosition}, ${cursorInfo.fallbackCursor ?? CursorType.auto}`\n      : cursorInfo?.cursorType;\n\n  return {\n    cursorStyle,\n  };\n};\n\nexport default useCursorStyle;\n","import useCursorStyle from 'hook/cursor/useCursorStyle';\nimport useAppStore from 'hook/store/useAppStore';\n\ntype Hook = () => {\n  appAreaCursorStyle?: string;\n};\n\nconst useAppAreaProxyCursorStyle: Hook = () => {\n  const appStore = useAppStore();\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n\n  const appAreaCursorInfo = proxyLayerInfoContainer.getAppAreaCursorInfo();\n\n  return {\n    appAreaCursorStyle: useCursorStyle(appAreaCursorInfo).cursorStyle,\n  };\n};\n\nexport default useAppAreaProxyCursorStyle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport useAppAreaProxyEventListener from 'hook/component/frame/mainpage/proxylayer/apparea/useAppAreaProxyEventListener';\n\nimport styles from 'scss/component/frame/mainpage/proxylayer/apparea/AppAreaProxyLayer.module.scss';\nimport useAppStore from 'hook/store/useAppStore';\nimport useAppAreaProxyCursorStyle from 'hook/component/frame/mainpage/proxylayer/apparea/useAppAreaProxyCursorStyle';\n\nconst AppAreaEventProxyComponent = (): React.JSX.Element => {\n  const appStore = useAppStore();\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n  const isEventProxyEnabled = proxyLayerInfoContainer.getIsAppAreaEventProxyEnabled();\n\n  const {\n    appAreaProxyLayerRef,\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseMove,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleMouseOut,\n    handleBlur,\n  } = useAppAreaProxyEventListener();\n\n  const { appAreaCursorStyle } = useAppAreaProxyCursorStyle();\n\n  return (\n    <div\n      aria-hidden\n      ref={appAreaProxyLayerRef}\n      className={classNames(styles.container)}\n      style={{\n        cursor: appAreaCursorStyle,\n      }}\n      onMouseDown={isEventProxyEnabled ? handleMouseDown : undefined}\n      onMouseUp={isEventProxyEnabled ? handleMouseUp : undefined}\n      onMouseMove={isEventProxyEnabled ? handleMouseMove : undefined}\n      onMouseEnter={isEventProxyEnabled ? handleMouseEnter : undefined}\n      onMouseLeave={isEventProxyEnabled ? handleMouseLeave : undefined}\n      onMouseOut={isEventProxyEnabled ? handleMouseOut : undefined}\n      onBlur={isEventProxyEnabled ? handleBlur : undefined}\n    />\n  );\n};\n\nexport default AppAreaEventProxyComponent;\n","import { EventListenerOption } from 'hook/event/useEventListener';\nimport useAppStore from 'hook/store/useAppStore';\nimport { throttle } from 'lodash';\nimport React, { useMemo, useRef } from 'react';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\n\ntype MouseHandlerType = (e: React.MouseEvent<HTMLElement | SVGElement>) => void;\ntype BlurHandlerType = (e: React.ChangeEvent<HTMLElement | SVGElement>) => void;\n\ntype ThrottledMouseHandlerType = MouseHandlerType & {\n  cancel?: () => void;\n};\n\ntype Hook = () => {\n  appAreaProxyLayerRef: React.RefObject<HTMLDivElement>;\n  handleMouseDown: MouseHandlerType;\n  handleMouseUp: MouseHandlerType;\n  handleMouseMove: MouseHandlerType;\n  handleMouseEnter: MouseHandlerType;\n  handleMouseLeave: MouseHandlerType;\n  handleMouseOut: MouseHandlerType;\n  handleBlur: BlurHandlerType;\n};\n\nconst useAppAreaProxyEventListener: Hook = (option?: EventListenerOption) => {\n  const appAreaProxyLayerRef = useRef<HTMLDivElement>(null);\n  const appStore = useAppStore();\n  const extendedEventLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n  const target = extendedEventLayerInfoContainer.getEventTarget();\n\n  const handleMouseDown: MouseHandlerType = e => {\n    if (target !== undefined) {\n      const event = new MouseEvent(e, target);\n      appStore.handleAppAreaMouseDown(event);\n    }\n  };\n\n  const handleMouseUp: MouseHandlerType = e => {\n    if (target !== undefined) {\n      const event = new MouseEvent(e, target);\n      appStore.handleAppAreaMouseUp(event);\n    }\n  };\n\n  const handleMouseMove: ThrottledMouseHandlerType = useMemo((): MouseHandlerType => {\n    const throttled = throttle((e, dragged) => {\n      if (target !== undefined) {\n        if (dragged) {\n          const event = new MouseEvent(e, target);\n          appStore.handleAppAreaDrag(event);\n        } else {\n          const event = new MouseEvent(e, target);\n          appStore.handleAppAreaMouseMove(event);\n        }\n      }\n    }, option?.eventDelay || 0);\n    return e => {\n      return throttled(e, appStore.getAppContext().getEditableContext().isMouseLButtonPressed());\n    };\n  }, []);\n\n  const handleMouseEnter: MouseHandlerType = e => {\n    window.removeEventListener('mouseup', onMouseUpCapture, true);\n    window.removeEventListener('mousemove', onMouseMoveCapture, true);\n  };\n\n  const handleMouseLeave: MouseHandlerType = e => {\n    window.addEventListener('mouseup', onMouseUpCapture, true);\n    window.addEventListener('mousemove', onMouseMoveCapture, true);\n  };\n\n  const handleMouseOut: MouseHandlerType = e => {\n    handleMouseMove.cancel?.();\n  };\n\n  const handleBlur: BlurHandlerType = e => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  function onMouseUpCapture(e: globalThis.MouseEvent): void {\n    window.removeEventListener('mouseup', onMouseUpCapture, true);\n    window.removeEventListener('mousemove', onMouseMoveCapture, true);\n    if (appAreaProxyLayerRef.current !== null) {\n      appAreaProxyLayerRef.current.dispatchEvent(e);\n    }\n  }\n\n  function onMouseMoveCapture(e: globalThis.MouseEvent): void {\n    if (appAreaProxyLayerRef.current !== null) {\n      appAreaProxyLayerRef.current.dispatchEvent(e);\n    }\n  }\n\n  return {\n    appAreaProxyLayerRef,\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseMove,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleMouseOut,\n    handleBlur,\n  };\n};\n\nexport default useAppAreaProxyEventListener;\n","import React from 'react';\nimport classNames from 'classnames';\nimport useAppAreaProxyCursorStyle from 'hook/component/frame/mainpage/proxylayer/apparea/useAppAreaProxyCursorStyle';\n\nimport styles from 'scss/component/frame/mainpage/proxylayer/apparea/AppAreaProxyLayer.module.scss';\n\nconst AppAreaEventBlockComponent = (): React.JSX.Element => {\n  const { appAreaCursorStyle } = useAppAreaProxyCursorStyle();\n\n  return (\n    <div\n      aria-hidden\n      className={classNames(styles.container, styles.block_event)}\n      style={{\n        cursor: appAreaCursorStyle,\n      }}\n    />\n  );\n};\n\nexport default AppAreaEventBlockComponent;\n","import React, { useLayoutEffect } from 'react';\nimport useAppStore from 'hook/store/useAppStore';\nimport useRerender from 'hook/store/useRerender';\nimport AppAreaEventProxyComponent from './AppAreaEventProxyComponent';\nimport AppAreaEventBlockComponent from './AppAreaEventBlockComponent';\n\nconst AppAreaProxyLayerComponent = (): React.JSX.Element => {\n  const appStore = useAppStore();\n  const { triggerRerender } = useRerender();\n\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n\n  useLayoutEffect(() => {\n    proxyLayerInfoContainer.setRerenderAppAreaProxyLayerFunction(triggerRerender);\n  }, []);\n\n  const isEnabled = proxyLayerInfoContainer.getIsAppAreaProxyLayerEnabled();\n  const isEventBlocked = proxyLayerInfoContainer.getIsAppAreaEventBlocked();\n\n  return (\n    <>\n      {isEnabled && (\n        <>{isEventBlocked ? <AppAreaEventBlockComponent /> : <AppAreaEventProxyComponent />}</>\n      )}\n    </>\n  );\n};\n\nexport default AppAreaProxyLayerComponent;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../../../../../node_modules/sass-loader/dist/cjs.js!./EditViewProxyLayer.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react';\nimport classNames from 'classnames';\nimport useEditViewProxyLayer from 'hook/component/frame/mainpage/proxylayer/editview/useEditViewProxyLayer';\nimport useEditViewProxyEventListener from 'hook/component/frame/mainpage/proxylayer/editview/useEditViewProxyEventListener';\nimport useAppStore from 'hook/store/useAppStore';\nimport useEditViewProxyCursorStyle from 'hook/component/frame/mainpage/proxylayer/editview/useEditViewProxyCursorStyle';\n\nimport styles from 'scss/component/frame/mainpage/proxylayer/editview/EditViewProxyLayer.module.scss';\n\nconst EditViewEventProxyComponent = (): React.JSX.Element => {\n  const appStore = useAppStore();\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n  const isEventProxyEnabled = proxyLayerInfoContainer.getIsEditViewEventProxyEnabled();\n\n  const { editViewProxyLayerRef, editViewRectInfo } = useEditViewProxyLayer();\n  const { handleMouseDown, handleMouseUp, handleMouseMove, handleMouseLeave } =\n    useEditViewProxyEventListener();\n  const { editViewCursorStyle } = useEditViewProxyCursorStyle();\n\n  return (\n    <div\n      aria-hidden\n      ref={editViewProxyLayerRef}\n      className={classNames(styles.container)}\n      style={{\n        left: `${editViewRectInfo.left}px`,\n        top: `${editViewRectInfo.top}px`,\n        width: `${editViewRectInfo.width}px`,\n        height: `${editViewRectInfo.height}px`,\n        cursor: editViewCursorStyle,\n      }}\n      onMouseDown={isEventProxyEnabled ? handleMouseDown : undefined}\n      onMouseUp={isEventProxyEnabled ? handleMouseUp : undefined}\n      onMouseMove={isEventProxyEnabled ? handleMouseMove : undefined}\n      onMouseLeave={isEventProxyEnabled ? handleMouseLeave : undefined}\n    />\n  );\n};\n\nexport default EditViewEventProxyComponent;\n","import useResizeObserver from 'hook/event/useResizeObserver';\nimport useAppStore from 'hook/store/useAppStore';\nimport { useRef } from 'react';\nimport { IRect } from 'types/common/geometry/GeometryTypes';\n\ntype Hook = () => {\n  editViewProxyLayerRef: React.RefObject<HTMLDivElement>;\n  editViewRectInfo: IRect;\n};\n\nconst useEditViewProxyLayer: Hook = () => {\n  const appStore = useAppStore();\n  const viewModeContainer = appStore.getAppContext().getEditableContext().getViewModeContainer();\n\n  const editViewSizeTrackerRef = viewModeContainer.getEditViewSizeTrackerRef();\n  const editViewBoundingClientRect = editViewSizeTrackerRef?.current?.getBoundingClientRect();\n\n  const editViewProxyLayerRef = useRef<HTMLDivElement>(null);\n\n  const resizeCallback = () => {\n    if (\n      editViewSizeTrackerRef !== undefined &&\n      editViewSizeTrackerRef.current !== null &&\n      editViewProxyLayerRef.current !== null\n    ) {\n      const rect = editViewSizeTrackerRef.current.getBoundingClientRect();\n      const editViewProxyLayerElement = editViewProxyLayerRef.current;\n      editViewProxyLayerElement.style.cssText = `${editViewProxyLayerElement.style.cssText}top:${rect.top}px;left:${rect.left}px;width:${rect.width}px;height:${rect.height}px;`;\n    }\n  };\n\n  useResizeObserver<HTMLDivElement>({\n    targetRef: editViewSizeTrackerRef,\n    callback: resizeCallback,\n  });\n\n  const editViewRectInfo = editViewBoundingClientRect\n    ? {\n        left: editViewBoundingClientRect.left,\n        top: editViewBoundingClientRect.top,\n        right: editViewBoundingClientRect.right,\n        bottom: editViewBoundingClientRect.bottom,\n        height: editViewBoundingClientRect.height,\n        width: editViewBoundingClientRect.width,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        height: 0,\n        width: 0,\n      };\n\n  return {\n    editViewProxyLayerRef,\n    editViewRectInfo,\n  };\n};\n\nexport default useEditViewProxyLayer;\n","import { EventListenerOption } from 'hook/event/useEventListener';\nimport useAppStore from 'hook/store/useAppStore';\nimport { throttle } from 'lodash';\nimport { useMemo } from 'react';\nimport MouseEvent from 'store/manager/event/wrapper/MouseEvent';\n\ntype MouseHandlerType = (e: React.MouseEvent<HTMLElement | SVGElement>) => void;\n\ntype ThrottledMouseHandlerType = MouseHandlerType & {\n  cancel?: () => void;\n};\n\ntype Hook = (option?: EventListenerOption) => {\n  handleMouseDown: MouseHandlerType;\n  handleMouseUp: MouseHandlerType;\n  handleMouseMove: MouseHandlerType;\n  handleMouseLeave: MouseHandlerType;\n};\n\nconst useEditViewProxyEventListener: Hook = (option?: EventListenerOption) => {\n  const appStore = useAppStore();\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n  const target = proxyLayerInfoContainer.getEventTarget();\n\n  const handleMouseDown: MouseHandlerType = e => {\n    if (target !== undefined) {\n      const event = new MouseEvent(e, target);\n      appStore.handleMouseDown(event);\n    }\n  };\n\n  const handleMouseUp: MouseHandlerType = e => {\n    if (target !== undefined) {\n      const event = new MouseEvent(e, target);\n      appStore.handleMouseUp(event);\n    }\n  };\n\n  const handleMouseMove: ThrottledMouseHandlerType = useMemo((): MouseHandlerType => {\n    const throttled = throttle((e, dragged) => {\n      if (target !== undefined) {\n        if (dragged) {\n          const event = new MouseEvent(e, target);\n          appStore.handleDrag(event);\n        } else {\n          const event = new MouseEvent(e, target);\n          appStore.handleMouseMove(event);\n        }\n      }\n    }, option?.eventDelay || 0);\n    return e => {\n      e.stopPropagation();\n      return throttled(e, appStore.getAppContext().getEditableContext().isMouseLButtonPressed());\n    };\n  }, []);\n\n  const handleMouseLeave: MouseHandlerType = e => {\n    handleMouseMove.cancel?.();\n  };\n\n  return {\n    handleMouseDown,\n    handleMouseUp,\n    handleMouseMove,\n    handleMouseLeave,\n  };\n};\n\nexport default useEditViewProxyEventListener;\n","import useCursorStyle from 'hook/cursor/useCursorStyle';\nimport useAppStore from 'hook/store/useAppStore';\n\ntype Hook = () => {\n  editViewCursorStyle?: string;\n};\n\nconst useEditViewProxyCursorStyle: Hook = () => {\n  const appStore = useAppStore();\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n\n  const editViewCursorInfo = proxyLayerInfoContainer.getEditViewCursorInfo();\n\n  return {\n    editViewCursorStyle: useCursorStyle(editViewCursorInfo).cursorStyle,\n  };\n};\n\nexport default useEditViewProxyCursorStyle;\n","import React, { useLayoutEffect } from 'react';\nimport useAppStore from 'hook/store/useAppStore';\nimport useRerender from 'hook/store/useRerender';\nimport EditViewEventProxyComponent from './EditViewEventProxyComponent';\n\nconst EditViewProxyLayerComponent = (): React.JSX.Element => {\n  const appStore = useAppStore();\n  const { triggerRerender } = useRerender();\n\n  const proxyLayerInfoContainer = appStore\n    .getAppContext()\n    .getEditableContext()\n    .getProxyLayerInfoContainer();\n\n  useLayoutEffect(() => {\n    proxyLayerInfoContainer.setRerenderEditViewProxyLayerFunction(triggerRerender);\n  }, []);\n\n  const isEnabled = proxyLayerInfoContainer.getIsEditViewProxyLayerEnabled();\n\n  return <>{isEnabled && <EditViewEventProxyComponent />}</>;\n};\n\nexport default EditViewProxyLayerComponent;\n","import React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18nInit from 'util/i18n/I18nInit';\nimport classNames from 'classnames';\nimport RibbonComponent from 'component/frame/ribbon/RibbonComponent';\nimport WorkAreaComponent from 'component/frame/workarea/WorkAreaComponent';\nimport styles from 'scss/component/frame/mainpage/MainPage.module.scss';\nimport useMousePressedTracker from 'hook/component/frame/mainpage/useMousePressedTracker';\nimport AppAreaProxyLayerComponent from './proxylayer/apparea/AppAreaProxyLayerComponent';\nimport EditViewProxyLayerComponent from './proxylayer/editview/EditViewProxyLayerComponent';\n\n/**\n * #root 아래에 있는 가장 최 상단 component 입니다.\n * i18n을 init 합니다.\n */\nconst MainPageComponent = (): React.JSX.Element => {\n  useMousePressedTracker();\n  const i18n = i18nInit();\n\n  return (\n    <I18nextProvider i18n={i18n}>\n      <div className={classNames(styles.container)}>\n        <RibbonComponent />\n        <WorkAreaComponent />\n      </div>\n      <AppAreaProxyLayerComponent />\n      <EditViewProxyLayerComponent />\n    </I18nextProvider>\n  );\n};\n\nexport default MainPageComponent;\n","import useRegisterEventHandler from 'hook/event/useRegisterEventListener';\nimport useAppStore from 'hook/store/useAppStore';\n\ntype Hook = () => void;\n\nconst useMousePressedTracker: Hook = () => {\n  const appStore = useAppStore();\n  const editableContext = appStore.getAppContext().getEditableContext();\n\n  function onMouseDown(e: globalThis.MouseEvent) {\n    if (e.buttons === 1) {\n      editableContext.setMouseLButtonPressed(true);\n    } else {\n      editableContext.setMouseLButtonPressed(false);\n    }\n  }\n\n  function onMouseUp() {\n    editableContext.setMouseLButtonPressed(false);\n  }\n\n  useRegisterEventHandler({\n    eventType: 'mousedown',\n    eventHandler: onMouseDown,\n    allowRegister: true,\n  });\n  useRegisterEventHandler({\n    eventType: 'mouseup',\n    eventHandler: onMouseUp,\n    allowRegister: true,\n    capture: true,\n  });\n};\n\nexport default useMousePressedTracker;\n","import { CursorType, ICursorInfo } from 'types/common/cursor/CursorTypes';\nimport { useImageResourceToDataURLString } from 'hook/resource/useImgRes';\n\ntype Hook = (cursorInfo: ICursorInfo) => {\n  cursorStyleString: Nullable<string>;\n};\n\nconst useCursorStyleComponent: Hook = (cursorInfo: ICursorInfo) => {\n  const imageURL = useImageResourceToDataURLString({\n    img: cursorInfo?.img,\n  });\n\n  const cursorPosition =\n    cursorInfo.cursorType === 'img' && cursorInfo.position !== undefined\n      ? `${cursorInfo.position.x} ${cursorInfo.position.y}`\n      : '';\n\n  const cursorStyle =\n    cursorInfo.cursorType === CursorType.img\n      ? `${imageURL} ${cursorPosition}, auto`\n      : cursorInfo.cursorType;\n\n  const cursorStyleString =\n    cursorStyle !== undefined ? `.${cursorInfo.className} { cursor: ${cursorStyle}}` : undefined;\n\n  return {\n    cursorStyleString,\n  };\n};\n\nexport default useCursorStyleComponent;\n","import useCursorStyleComponent from 'hook/component/frame/style/cursor/useCursorStyleComponent';\nimport React from 'react';\nimport { ICursorInfo } from 'types/common/cursor/CursorTypes';\n\ninterface Props {\n  cursorInfo: ICursorInfo;\n}\n\nconst CursorStyleComponent = ({ cursorInfo }: Props): React.JSX.Element => {\n  const { cursorStyleString } = useCursorStyleComponent(cursorInfo);\n  if (!cursorStyleString) {\n    return <></>;\n  }\n\n  return <style>{cursorStyleString}</style>;\n};\n\nexport default CursorStyleComponent;\n","import React from 'react';\nimport { PresetCursorInfoList } from 'resource/style/cursor/PresetCursorStyle';\nimport CursorStyleComponent from './CursorStyleComponent';\n\nconst CursorStyleWrapperComponent = (): React.JSX.Element => {\n  return (\n    <>\n      {PresetCursorInfoList.map(cursorInfo => {\n        return <CursorStyleComponent key={cursorInfo.className} cursorInfo={cursorInfo} />;\n      })}\n    </>\n  );\n};\n\nexport default CursorStyleWrapperComponent;\n","import React from 'react';\nimport styles from 'scss/component/frame/app/App.module.scss';\nimport classNames from 'classnames';\nimport useShortcut from 'hook/event/shortcut/useShortcut';\nimport MainPageComponent from '../mainpage/MainPageComponent';\nimport CursorStyleWrapperComponent from '../style/cursor/CursorStyleWrapperComponent';\n\n/**\n * main page를 rendering 하는 최상위 component 입니다.\n */\nconst AppComponent = (): React.JSX.Element => {\n  const { shortcutHandler, clearKeyHandler } = useShortcut();\n  return (\n    <div\n      id=\"app_root\"\n      role=\"none\"\n      className={classNames(styles.container)}\n      onKeyDownCapture={shortcutHandler}\n      onKeyUp={clearKeyHandler}\n    >\n      <CursorStyleWrapperComponent />\n      <MainPageComponent />\n    </div>\n  );\n};\n\nexport default AppComponent;\n","import useAppStore from 'hook/store/useAppStore';\n\ntype Hook = () => {\n  shortcutHandler: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  clearKeyHandler: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n};\n\nconst useShortcut: Hook = () => {\n  const appStore = useAppStore();\n  const shortcutContainer = appStore.getAppContext().getEditableContext().getShortcutContainer();\n\n  const shortcutHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const combinationString = shortcutContainer.getCombinationString(event);\n\n    if (combinationString === '') {\n      return;\n    }\n\n    const shortcutAction = shortcutContainer.getShortCutAction(combinationString);\n\n    if (shortcutAction !== undefined) {\n      event.preventDefault();\n      event.stopPropagation();\n      shortcutAction(appStore, event);\n    }\n  };\n\n  const clearKeyHandler = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (!event.ctrlKey && !event.shiftKey && !event.altKey && !event.metaKey) {\n      shortcutContainer.clearKeyList();\n    }\n    const key = shortcutContainer.getConvertedKey(event.code);\n    shortcutContainer.clearKey(key);\n  };\n\n  return {\n    shortcutHandler,\n    clearKeyHandler,\n  };\n};\n\nexport default useShortcut;\n","import AppComponent from 'component/frame/app/AppComponent';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport AppStore from 'store/AppStore';\nimport AppStoreProvider from 'store/AppStoreProvider';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLDivElement);\n\nroot.render(\n  <AppStoreProvider value={new AppStore()}>\n    <AppComponent />\n  </AppStoreProvider>\n);\n","/**\n * OOXML의 `a:ST_PresetColorVal`에 해당하는 RGB HEX 코드입니다.\n */\nexport const PresetColorMap: Map<string, string> = new Map([\n  ['aliceblue', '#f0f8ff'],\n  ['antiquewhite', '#faebd7'],\n  ['aqua', '#00ffff'],\n  ['aquamarine', '#7fffd4'],\n  ['azure', '#f0ffff'],\n  ['beige', '#f5f5dc'],\n  ['bisque', '#ffe4c4'],\n  ['black', '#000000'],\n  ['blanchedalmond', '#ffebcd'],\n  ['blue', '#0000ff'],\n  ['blueviolet', '#8a2be2'],\n  ['brown', '#a52a2a'],\n  ['burlywood', '#deb887'],\n  ['cadetblue', '#5f9ea0'],\n  ['chartreuse', '#7fff00'],\n  ['chocolate', '#d2691e'],\n  ['coral', '#ff7f50'],\n  ['cornflowerblue', '#6495ed'],\n  ['cornsilk', '#fff8dc'],\n  ['crimson', '#dc143c'],\n  ['cyan', '#00ffff'],\n  ['darkblue', '#00008b'],\n  ['darkcyan', '#008b8b'],\n  ['darkgoldenrod', '#b8860b'],\n  ['darkgray', '#a9a9a9'],\n  ['darkgreen', '#006400'],\n  ['darkgrey', '#a9a9a9'],\n  ['darkkhaki', '#bdb76b'],\n  ['darkmagenta', '#8b008b'],\n  ['darkolivegreen', '#556b2f'],\n  ['darkorange', '#ff8c00'],\n  ['darkorchid', '#9932cc'],\n  ['darkred', '#8b0000'],\n  ['darksalmon', '#e9967a'],\n  ['darkseagreen', '#8fbc8f'],\n  ['darkslateblue', '#483d8b'],\n  ['darkslategray', '#2f4f4f'],\n  ['darkslategrey', '#2f4f4f'],\n  ['darkturquoise', '#00ced1'],\n  ['darkviolet', '#9400d3'],\n  ['deeppink', '#ff1493'],\n  ['deepskyblue', '#00bfff'],\n  ['dimgray', '#696969'],\n  ['dimgrey', '#696969'],\n  ['dodgerblue', '#1e90ff'],\n  ['firebrick', '#b22222'],\n  ['floralwhite', '#fffaf0'],\n  ['forestgreen', '#228b22'],\n  ['fuchsia', '#ff00ff'],\n  ['gainsboro', '#dcdcdc'],\n  ['ghostwhite', '#f8f8ff'],\n  ['gold', '#ffd700'],\n  ['goldenrod', '#daa520'],\n  ['gray', '#808080'],\n  ['green', '#008000'],\n  ['greenyellow', '#adff2f'],\n  ['grey', '#808080'],\n  ['honeydew', '#f0fff0'],\n  ['hotpink', '#ff69b4'],\n  ['indianred', '#cd5c5c'],\n  ['indigo', '#4b0082'],\n  ['ivory', '#fffff0'],\n  ['khaki', '#f0e68c'],\n  ['lavender', '#e6e6fa'],\n  ['lavenderblush', '#fff0f5'],\n  ['lawngreen', '#7cfc00'],\n  ['lemonchiffon', '#fffacd'],\n  ['lightblue', '#add8e6'],\n  ['lightcoral', '#f08080'],\n  ['lightcyan', '#e0ffff'],\n  ['lightgoldenrodyellow', '#fafad2'],\n  ['lightgray', '#d3d3d3'],\n  ['lightgreen', '#90ee90'],\n  ['lightgrey', '#d3d3d3'],\n  ['lightpink', '#ffb6c1'],\n  ['lightsalmon', '#ffa07a'],\n  ['lightseagreen', '#20b2aa'],\n  ['lightskyblue', '#87cefa'],\n  ['lightslategray', '#778899'],\n  ['lightslategrey', '#778899'],\n  ['lightsteelblue', '#b0c4de'],\n  ['lightyellow', '#ffffe0'],\n  ['lime', '#00ff00'],\n  ['limegreen', '#32cd32'],\n  ['linen', '#faf0e6'],\n  ['magenta', '#ff00ff'],\n  ['maroon', '#800000'],\n  ['mediumaquamarine', '#66cdaa'],\n  ['mediumblue', '#0000cd'],\n  ['mediumorchid', '#ba55d3'],\n  ['mediumpurple', '#9370db'],\n  ['mediumseagreen', '#3cb371'],\n  ['mediumslateblue', '#7b68ee'],\n  ['mediumspringgreen', '#00fa9a'],\n  ['mediumturquoise', '#48d1cc'],\n  ['mediumvioletred', '#c71585'],\n  ['midnightblue', '#191970'],\n  ['mintcream', '#f5fffa'],\n  ['mistyrose', '#ffe4e1'],\n  ['moccasin', '#ffe4b5'],\n  ['navajowhite', '#ffdead'],\n  ['navy', '#000080'],\n  ['oldlace', '#fdf5e6'],\n  ['olive', '#808000'],\n  ['olivedrab', '#6b8e23'],\n  ['orange', '#ffa500'],\n  ['orangered', '#ff4500'],\n  ['orchid', '#da70d6'],\n  ['palegoldenrod', '#eee8aa'],\n  ['palegreen', '#98fb98'],\n  ['paleturquoise', '#afeeee'],\n  ['palevioletred', '#db7093'],\n  ['papayawhip', '#ffefd5'],\n  ['peachpuff', '#ffdab9'],\n  ['peru', '#cd853f'],\n  ['pink', '#ffc0cb'],\n  ['plum', '#dda0dd'],\n  ['powderblue', '#b0e0e6'],\n  ['purple', '#800080'],\n  ['rebeccapurple', '#663399'],\n  ['red', '#ff0000'],\n  ['rosybrown', '#bc8f8f'],\n  ['royalblue', '#4169e1'],\n  ['saddlebrown', '#8b4513'],\n  ['salmon', '#fa8072'],\n  ['sandybrown', '#f4a460'],\n  ['seagreen', '#2e8b57'],\n  ['seashell', '#fff5ee'],\n  ['sienna', '#a0522d'],\n  ['silver', '#c0c0c0'],\n  ['skyblue', '#87ceeb'],\n  ['slateblue', '#6a5acd'],\n  ['slategray', '#708090'],\n  ['slategrey', '#708090'],\n  ['snow', '#fffafa'],\n  ['springgreen', '#00ff7f'],\n  ['steelblue', '#4682b4'],\n  ['tan', '#d2b48c'],\n  ['teal', '#008080'],\n  ['thistle', '#d8bfd8'],\n  ['tomato', '#ff6347'],\n  ['transparent', '#fff0'],\n  ['turquoise', '#40e0d0'],\n  ['violet', '#ee82ee'],\n  ['wheat', '#f5deb3'],\n  ['white', '#ffffff'],\n  ['whitesmoke', '#f5f5f5'],\n  ['yellow', '#ffff00'],\n  ['yellowgreen', '#9acd32'],\n]);\n","import { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { IControlInfo } from 'types/component/frame/control/ControlTypes';\nimport { ToolTipEnum } from 'types/tooltip/ToolTipEnum';\nimport { CommandEnum } from 'types/store/command/CommandEnum';\nimport { ControlTypeEnum } from 'types/component/frame/control/ControlTypeEnum';\nimport { ReactKeyEnum } from 'types/resource/ReactKeyEnum';\nimport { ShapeTypeEnum } from 'types/model/node/graphic/ShapeTypeEnum';\nimport { ControlSubTypeEnum } from 'types/component/frame/control/ControlSubTypeEnum';\n\nexport const RibbonData: IControlInfo[] = new Array(\n  {\n    type: ControlTypeEnum.RIBBON_GROUP,\n    attr: {\n      reactKey: ReactKeyEnum.RIBBON_GROUP_INSERT_SHAPE,\n      subType: ControlSubTypeEnum.RG1,\n      label: ResourceEnum.TXT_GROUP_INSERT_SHAPE,\n    },\n    subControlInfos: [\n      {\n        type: ControlTypeEnum.RIBBON_GALLERY,\n        attr: {\n          reactKey: ReactKeyEnum.RIBBON_GALLERY_INSERT_SHAPE,\n          subType: ControlSubTypeEnum.GA1,\n          commandId: CommandEnum.SHAPE_INSERT_GALLERY,\n        },\n      },\n    ],\n  }\n  // {\n  //     type: ControlTypeEnum.GROUP,\n  //     attr: {\n  //         type: 'ANY',\n  //         label: ResourceEnum.DEFAULT,\n  //     },\n  //     items: [],\n  // }\n);\n\ninterface IShapeGalleryGroup {\n  reactKey: ReactKeyEnum;\n  label: ResourceEnum;\n  items: IShapeGalleryItem[];\n}\n\ninterface IShapeGalleryItem {\n  reactKey: ReactKeyEnum;\n  img: ResourceEnum;\n  shapeType: ShapeTypeEnum;\n  tooltipId?: ToolTipEnum;\n}\n\nexport const ShapeGalleryData: IShapeGalleryGroup[] = [\n  {\n    reactKey: ReactKeyEnum.RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT,\n    label: ResourceEnum.TXT_SHAPE_INSERT_GALLERY_RECT,\n    items: [\n      {\n        reactKey: ReactKeyEnum.RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT_ITEM_RECT,\n        img: ResourceEnum.IMG_INSERT_SHAPE_RECT,\n        shapeType: ShapeTypeEnum.RECT,\n      },\n      {\n        reactKey: ReactKeyEnum.RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT_ITEM_DIAGONAL_RECT,\n        img: ResourceEnum.IMG_INSERT_SHAPE_DIAGONAL_RECT,\n        shapeType: ShapeTypeEnum.DIAGONAL_RECT,\n      },\n    ],\n  },\n];\n","import {\n  CLASSNAME_GRAPHIC_CURSOR_MOVE_HOVER,\n  CLASSNAME_GRAPHIC_CURSOR_ROTATE_HOVER,\n  ICursorInfo,\n} from 'types/common/cursor/CursorTypes';\nimport { ResourceEnum } from 'types/resource/ResourceEnum';\n\nexport const PresetCursorInfoList: Array<ICursorInfo> = [\n  {\n    className: CLASSNAME_GRAPHIC_CURSOR_MOVE_HOVER,\n    cursorType: 'img',\n    img: ResourceEnum.IMG_CURSOR_MOVE_HOVER,\n    position: { x: 12, y: 12 },\n  },\n  {\n    className: CLASSNAME_GRAPHIC_CURSOR_ROTATE_HOVER,\n    cursorType: 'img',\n    img: ResourceEnum.IMG_CURSOR_ROTATE_HOVER,\n    position: { x: 12, y: 12 },\n  },\n];\n","import { ResourceEnum } from 'types/resource/ResourceEnum';\nimport { IPoint } from '../geometry/GeometryTypes';\n\nexport const CursorType = {\n  auto: 'auto',\n  default: 'default',\n  context_menu: 'context-menu',\n  help: 'help',\n  pointer: 'pointer',\n  progress: 'progress',\n  wait: 'wait',\n  cell: 'cell',\n  crosshair: 'crosshair',\n  text: 'text',\n  vertical_text: 'vertical-text',\n  alias: 'alias',\n  copy: 'copy',\n  move: 'move',\n  no_drop: 'no-drop',\n  not_allowed: 'not-allowed',\n  e_resize: 'e-resize',\n  n_resize: 'n-resize',\n  ne_resize: 'ne-resize',\n  nw_resize: 'nw-resize',\n  s_resize: 's-resize',\n  se_resize: 'se-resize',\n  sw_resize: 'sw-resize',\n  w_resize: 'w-resize',\n  ew_resize: 'ew-resize',\n  ns_resize: 'ns-resize',\n  nesw_resize: 'nesw-resize',\n  nwse_resize: 'nwse-resize',\n  col_resize: 'col-resize',\n  row_resize: 'row-resize',\n  all_scroll: 'all-scroll',\n  zoom_in: 'zoom-in',\n  zoom_out: 'zoom-out',\n  grab: 'grab',\n  grabbing: 'grabbing',\n  img: 'img',\n} as const;\nexport type CursorType = (typeof CursorType)[keyof typeof CursorType];\n\nexport interface ICursorInfo {\n  cursorType: CursorType;\n  className?: string;\n  img?: ResourceEnum;\n  fallbackCursor?: CursorType;\n  position?: IPoint;\n}\n\nexport const CLASSNAME_GRAPHIC_CURSOR_MOVE_HOVER = 'graphic_cursor_move_hover';\nexport const CLASSNAME_GRAPHIC_CURSOR_ROTATE_HOVER = 'graphic_cursor_rotate_hover';\n","/**\n * control의 SubType을 구분하기 위하여 사용합니다.\n * 각 control component에서 subtype에 따라 다른 형태의 component를 반환하거나\n * 독특한 style을 적용하기 위하여 사용합니다.\n */\nexport enum ControlSubTypeEnum {\n  INVALID = 'INVALID',\n  RG1 = 'rg1', // RibbonGroup 중 하나\n  GA1 = 'ga1', // RibbonGallery 중 하나\n  GI1 = 'gi1', // RibbonGalleryItem 중 하나\n}\n","/**\n * control의 종류를 구분하기 위한 enum 입니다.\n * IControlInfos에 포함되어 있고, getControl 함수 등에서 사용합니다.\n */\nexport enum ControlTypeEnum {\n  INVALID = 0,\n  RIBBON_GROUP, // top level\n  RIBBON_GALLERY,\n  RIBBON_GALLERY_ITEM,\n  RIBBON_LABEL,\n}\n","/**\n * 도형의 모양 관련 type을 설정하는 enum 입니다.\n */\nexport enum ShapeTypeEnum {\n  RECT = 'RECT',\n  DIAGONAL_RECT = 'DIAGONAL_RECT',\n  CUSTOM = 'CUSTOM',\n}\n","/**\n * react에서 list 형태의 children 구성 시 부여하는 enum 입니다.\n * ribbon control과 같이 형태, 갯수가 정적으로 고정 된 경우 부여합니다.\n * ReactKeyEnum을 제거하고, ribbon data를 구성하는 시점에\n * 동적으로 0부터의 숫자를 부여하는 방식(한번 부여하면 변경되지 않는)으로 변경 할 예정입니다.\n */\nexport enum ReactKeyEnum {\n  INVALID = 0,\n  RIBBON_GROUP_INSERT_SHAPE,\n  RIBBON_GALLERY_INSERT_SHAPE,\n  RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT,\n  RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT_ITEM_RECT,\n  RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT_ITEM_DIAGONAL_RECT,\n}\n","/**\n * resource 를 구분하기 위한 enum 입니다.\n * resoureId: value 가 json이 되어야 하기 때문에,\n * ResourceEnum은 string이 되어야 합니다.\n */\nexport enum ResourceEnum {\n  // txt\n  TXT_GROUP_INSERT_SHAPE = 'TXT_GROUP_INSERT_SHAPE',\n  TXT_SHAPE_INSERT_GALLERY_RECT = 'TXT_SHAPE_INSERT_GALLERY_RECT',\n  TXT_DUMMY_TOOLPANE_TITLE = 'TXT_DUMMY_TOOLPANE_TITLE',\n  TXT_DUMMIE_TOOLPANE_TITLE = 'TXT_DUMMIE_TOOLPANE_TITLE',\n  // tooltip\n  TIP_INSERT_SHAPE_RECT = 'TIP_INSERT_SHAPE_RECT',\n  TIP_INSERT_SHAPE_DIAGONAL_RECT = 'TIP_INSERT_SHAPE_DIAGONAL_RECT',\n  // img\n  IMG_INSERT_SHAPE_RECT = 'IMG_INSERT_SHAPE_RECT',\n  IMG_INSERT_SHAPE_DIAGONAL_RECT = 'IMG_INSERT_SHAPE_DIAGONAL_RECT',\n  IMG_RIBBON_GALLERY_MORE_BUTTON = 'IMG_RIBBON_GALLERY_MORE_BUTTON',\n  IMG_ARROW_DOWN = 'IMG_ARROW_DOWN',\n  IMG_TOOLPANE_NOTICE = 'IMG_TOOLPANE_NOTICE',\n  IMG_TOOLPANE_CLOSE = 'IMG_TOOLPANE_CLOSE',\n  IMG_TOOLPANE_DOCK_DUMMY = 'IMG_TOOLPANE_DOCK_DUMMY',\n  IMG_TOOLPANE_DOCK_DUMMIE = 'IMG_TOOLPANE_DOCK_DUMMIE',\n  IMG_CURSOR_ROTATE = 'IMG_CURSOR_ROTATE',\n  IMG_CURSOR_ROTATE_HOVER = 'IMG_CURSOR_ROTATE_HOVER',\n  IMG_CURSOR_MOVE_HOVER = 'IMG_CURSOR_MOVE_HOVER',\n}\n","/**\n * command의 종류를 나타내는 enum 입니다.\n */\nexport enum CommandEnum {\n  INVALID = 0,\n  SHAPE_INSERT_GALLERY,\n  SHAPE_INSERT_GALLERY_ITEM,\n  GRAPHIC_INSERT_SET_UP,\n  GRAPHIC_INSERT,\n  GRAPHIC_INSERT_DUPLICATE,\n  GRAPHIC_INSERT_ABORT,\n  GRAPHIC_MOVE,\n  GRAPHIC_MOVE_ABORT,\n  GRAPHIC_ROTATE,\n  GRAPHIC_ROTATE_ABORT,\n  GRAPHIC_RESIZE,\n  GRAPHIC_RESIZE_ABORT,\n  GROUP_OBJECTS,\n  UNGROUP,\n  DELETE_GRAPHIC,\n  UNDO,\n  REDO,\n}\n","var map = {\n\t\"./color/PresetColorMap\": [\n\t\t7470,\n\t\t9\n\t],\n\t\"./color/PresetColorMap.ts\": [\n\t\t7470,\n\t\t9\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Bold.woff\": [\n\t\t2151,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Bold.woff2\": [\n\t\t4023,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Light.woff\": [\n\t\t1504,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Light.woff2\": [\n\t\t9250,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Medium.woff\": [\n\t\t411,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Medium.woff2\": [\n\t\t2435,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Regular.woff\": [\n\t\t2328,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Regular.woff2\": [\n\t\t3802,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Thin.woff\": [\n\t\t3127,\n\t\t1\n\t],\n\t\"./fonts/SpoqaHanSansNeo/SpoqaHanSansNeo-Thin.woff2\": [\n\t\t5015,\n\t\t1\n\t],\n\t\"./ko/ResourceData.json\": [\n\t\t1645,\n\t\t3,\n\t\t645\n\t],\n\t\"./ribbon/RibbonData\": [\n\t\t8813,\n\t\t9\n\t],\n\t\"./ribbon/RibbonData.ts\": [\n\t\t8813,\n\t\t9\n\t],\n\t\"./style/cursor/PresetCursorStyle\": [\n\t\t6523,\n\t\t9\n\t],\n\t\"./style/cursor/PresetCursorStyle.ts\": [\n\t\t6523,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9800;\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + \"1932e2020b51ef4b8926\" + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkbumpy\"] = globalThis[\"webpackChunkbumpy\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [105], () => (__webpack_require__(6068)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","___CSS_LOADER_URL_REPLACEMENT_6___","___CSS_LOADER_URL_REPLACEMENT_7___","___CSS_LOADER_URL_REPLACEMENT_8___","___CSS_LOADER_URL_REPLACEMENT_9___","push","module","id","locals","options","uniqueKey","Symbol","uniqueKeyValue","identify","anyClass","getUniqueKey","base","IdentifiableBase","Object","prototype","hasOwnProperty","call","this","TreeNode","constructor","parent","firstChild","lastChild","nextSibling","prevSibling","rerenderChildrenRef","rerenderTrigger","getId","setId","getParent","setParent","getFirstChild","setFirstChild","getLastChild","setLastChild","getNextSibling","setNextSibling","getPrevSibling","setPrevSibling","setRerenderChildrenRef","checkRerenderChildren","current","setRerenderTrigger","requestRerender","ctx","getEditableContext","appendRerenderTrigger","forEachChild","callback","it","mapChild","ret","child","append","parentNode","nextNode","console","error","appendChildBefore","appendChild","remove","removeChild","newChild","refChild","TreeNodeTypeEnum","SlideModel","super","width","height","fillInfo","calculateContentsSizeRef","getSize","getFillInfo","setCalculateContentsSizeRef","checkCalculateContentsSizeRef","getTreeNodeType","SLIDE","GraphicEditEventSubStateEnum","GraphicModelEditRequest","graphicModel","coordinateInfo","getCoordinateInfo","pathInfo","getPathInfo","initialCoordinateInfo","clone","currentEditingCoordinateInfo","initialPathInfo","currentEditingPathInfo","getGraphicModel","getInitialCoordinateInfo","getCurrentEditingCoordinateInfo","getInitialPathInfo","getCurrentEditingPathInfo","GraphicEditInfoContainer","isMultiSelectionEvent","isSelectionRecentlyUpdated","rangeSelectionStratPosition","x","y","rangeSelectionEndPosition","cursorInfo","eventTargetGraphicModel","graphicEditEventSubState","NONE","graphicEditingHandle","editingStartedRenderCoordinate","editingGraphicModelList","Array","editingDependentGraphicModelEditRequestMap","Map","editPreviewLayerGraphicModelList","editPreviewLayerRerenderTrigger","selectionLayerRerenderTrigger","clear","getIsMultiSelectionEvent","setIsMultiSelectionEvent","isMultiSelection","getIsSelectionRecentlyUpdated","setIsSelectionRecentlyUpdated","getRangeSelectionStartPosition","setRangeSelectionStartPosition","getRangeSelectionEndPosition","setRangeSelectionEndPosition","getCursorInfo","setCursorInfo","getEventTargetGraphicModel","setEventTargetGraphicModel","getGraphicEditEventSubState","setGraphicEditEventSubState","getGraphicEditingHandle","setGraphicEditingHandle","handle","getEditingStartedRenderCoordinate","setEditingStartedRenderCoordinate","coordinate","appendEditingGraphicModel","clearEditingGraphicModelList","getEditingGraphicModelList","appendEditingDependentGraphicModelEditRequest","has","set","clearEditingDependentGraphicModelEditRequest","getEditingDependentGraphicModelEditRequest","get","getEditingDependentGraphicModelEditRequestMap","appendEditPreviewLayerGraphicModel","getEditPreviewLayerGraphicModelList","clearEditPreviewLayerGraphicModelList","setIsBeingEditedToAllEditingDependentGraphicModels","isBeingEdited","forEach","graphicModelEditRequest","setIsBeingEdited","abortCurrentEditingState","ABORT","setEditPreviewLayerRerenderTrigger","requestRerenderEditPreviewLayer","setSelectionLayerRerenderTrigger","requestRerenderSelectionLayer","isEditingActivated","DRAG","ProxyLayerInfoContainer","isAppAreaProxyLayerEnabled","isEditViewProxyLayerEnabled","isAppAreaEventProxyEnabled","isEditViewEventProxyEnabled","isAppAreaEventBlocked","appAreaCursorInfo","editViewCursorInfo","rerenderAppAreaProxyLayerFunction","rerenderEditViewProxyLayerFunction","eventTarget","getIsAppAreaProxyLayerEnabled","getIsEditViewProxyLayerEnabled","getIsAppAreaEventProxyEnabled","getIsEditViewEventProxyEnabled","getIsAppAreaEventBlocked","getAppAreaCursorInfo","getEditViewCursorInfo","setRerenderAppAreaProxyLayerFunction","rerenderAppAreaProxyLayer","setRerenderEditViewProxyLayerFunction","rerenderEditViewProxyLayer","getEventTarget","enableAppAreaProxyLayer","disableAppAreaProxyLayer","enableEditViewProxyLayer","disableEditViewProxyLayer","ShortcutContainer","shortcutMap","keyList","initShortCut","appStore","event","stopPropagation","preventDefault","handleCommandEvent","commandId","CommandEnum","UNDO","REDO","GROUP_OBJECTS","UNGROUP","getShortCutAction","keyCombination","getKeyList","pushKey","key","upperCaseKey","toLocaleUpperCase","includes","clearKeyList","clearKey","filter","i","getCombinationString","getConvertedKey","code","ctrlKey","shiftKey","altKey","metaKey","getModifierKey","join","replace","modifierKeyList","isModifier","modifierKey","e","useImgRes","resourceId","result","t","returnObjects","data","useImageResourceToDataURLString","imgResProps","img","svgData","length","window","btoa","children","fills","viewBox","reduce","acc","path","idx","d","convertSvgDataToString","style","res","svg","DOMParser","parseFromString","originWidth","baseVal","value","originHeight","fill","getAttribute","firstTagEnd","indexOf","slice","dangerouslySetInnerHTML","__html","ImgResComponent","imageData","isArray","map","index","className","toString","defaultProps","attr","eventhandler","role","tabIndex","icon","onClick","onMouseEnter","onMouseLeave","onKeyDown","reactKey","subType","container","type","ControlSubTypeEnum","GI1","galleryItem","ShapeInsertGalleryHandler","galleryItemMap","ShapeGalleryData","shapeGalleryGroup","galleryItemList","label","items","shapeGalleryItem","ControlTypeEnum","RIBBON_GALLERY_ITEM","SHAPE_INSERT_GALLERY_ITEM","shapeType","controlInfos","from","values","curr","concat","handleArrowUpButtonClick","handleArrowDownButtonClick","disableUpButton","disableDownButton","displayedControlInfos","currentIndex","maxCount","setCurrentIndex","useState","Math","ceil","flatMap","controlInfo","prev","columnNum","dropdownMenuInfo","menuInfo","shape_insert_gallery","dropdownMenuSubItemInfos","controlInfoList","groupInfo","j","item","selected","createShapeDummyGalleryDropdown","commandProps","GRAPHIC_INSERT_SET_UP","subControlInfos","onArrowUpButtonClick","onArrowDownButtonClick","ShapeInsertGalleryItemHandler","ControlHandlerContainer","controlHandlerMap","initControlHandlerMap","SHAPE_INSERT_GALLERY","getHandledControlProps","handler","defaultControlHandler","props","ref","onCloseIconClick","title","closeIcon","ResourceEnum","IMG_TOOLPANE_CLOSE","toolPaneContainer","getAppContext","getUIContainer","getToolPaneContainer","useRef","closeToolPane","offsetWidth","toolPane","close","useEffect","setCloseToolPaneFunction","isOpenWithAnimation","getIsOpenWithAnimation","open","TXT_DUMMIE_TOOLPANE_TITLE","TXT_DUMMY_TOOLPANE_TITLE","BasicToolPane","ToolPaneTypeEnum","ToolPaneContainer","toolPaneInfoMap","initToolPaneInfoMap","toolPaneList","initToolPaneList","isToolPaneOpened","selectedToolPaneId","rerenderToolPaneWrapperFunction","closeToolPaneFunction","DUMMY","IMG_TOOLPANE_DOCK_DUMMY","content","DUMMIE","IMG_TOOLPANE_DOCK_DUMMIE","getToolPaneInfo","toolPaneId","getToolPaneInfoList","getIsToolPaneOpened","setIsToolPaneOpened","setIsOpenWithAnimation","getSelectedToolPaneId","setSelectedToolPaneId","setRerenderToolPaneWrapperFunction","openToolPane","setTimeout","closeToolPaneByCloseIcon","onToolPaneDockButtonClicked","UIContainer","controlHandlerContainer","getControlHandlerContainer","ViewModeContainer","zoomRatio","isFitZoom","editViewSizeTrackerRef","rerenderEditViewFunction","currentRenderingSlideModel","getZoomRatio","setZoomRatio","getIsFitZoom","setIsFitZoom","setEditViewSizeTrackerRef","getEditViewSizeTrackerRef","setRerenderEditViewFunction","rerenderEditView","setCurrentRenderingSlideModel","slideModel","getCurrentRenderingSlideModel","UndoStack","size","undoStack","redoStack","canUndo","canRedo","commandCompositor","shift","command","pop","next","selectedModel","getModel","GraphicModelSelection","InternalSelectionContainer","GraphicTypeEnum","isGraphicModel","node","nodeTypeEnum","isTreeNodeOfType","GRAPHIC_MODEL","isGroup","getGraphicType","GROUP","getParentGroup","isGroupChild","rootGroup","parentGroup","childGraphicModel","collectChildGraphicModelRecursively","childGraphicModelList","chlid","getAllParentGroupList","startFromRootGroup","ancestorsList","reverse","graphicModelSelections","isRelatedModel","treeNode","appendTreeNode","model","hasSelection","getSelectedModels","getSelectedGraphicModels","graphicModelSelection","getGraphicModelSelections","getFirstGraphicModelSelection","hasGraphicModelSelection","getGraphicModelSelection","find","hasTargetRootGroupMember","hasGroupMemberInSelectionContainer","graphicModelSelectionContainer","GraphicModelSelectionContainer","getGraphicModelSelectionContainer","forEachContainer","selectionContainer","SelectionContainer","CommandModeEnum","EventStateEnum","IdGenerator","generateId","EditableContext","editableContextInitProp","treeNodeRoot","eventState","IDLE","mouseLButtonPressed","commandMode","EDIT","commandController","createSelectionContainer","uiContainer","proxyLayerInfoContainer","viewModeContainer","shortcutContainer","graphicEditInfoContainer","rerenderTriggerList","getTreeNodeRoot","getEventState","setEventState","getUndoStack","isMouseLButtonPressed","setMouseLButtonPressed","getCommandMode","setCommandMode","getCommandProps","setCommandProps","getCommandController","setCommandController","getSelectionContainer","setSelectionContainer","getProxyLayerInfoContainer","getViewModeContainer","getShortcutContainer","getGraphicEditInfoContainer","flushRerenderTriggerList","ReadOnlyContext","readOnlyContextInitProp","handleCommandEventFunction","callHandleCommandEvent","AppContext","appContextInitProp","readOnlyContext","editableContext","getReadOnlyContext","CommandCompositor","simpleCommandList","executalbeSimpleCommandIndex","postSimpleCommandList","undoable","oldEventState","newEventState","oldSelectionContainer","newSelectionContainer","setUndoable","isUndoable","getOldEventState","setOldEventState","getNewEventState","setNewEventState","getOldSelectionContainer","setOldSelectionContainer","getNewSelectionContainer","setNewSelectionContainer","isEmpty","appendSimpleCommand","simpleCommand","appendPostSimpleCommand","applySimpleCommand","apply","applyPostSimpleCommand","unapply","reapply","fallback","at","CommandController","selectioncontainer","preExecuteCommand","executeCommand","executePostCommand","finishApplyProcess","Error","unExecuteCommand","reExecuteCommand","CommandHandlerFactory","commandHandlerMap","getTargetCommandHandler","CommandHandlerConstructor","commandHandler","CommandHandler","rotation","flipH","flipV","groupX","groupY","groupWidth","groupHeight","setX","getX","setY","getY","setWidth","getWidth","setHeight","getHeight","setRotation","getRotation","setFlipH","getFlipH","setFlipV","getFlipV","setGroupX","getGroupX","setGroupY","getGroupY","setGroupWidth","getGroupWidth","setGroupHeight","getGroupHeight","newCoordinateInfo","CoordinateInfo","degreeMod360","degree","rotatePointAroundPivot","point","pivot","rotation360","rotatedPoint","radian","degreeToRadian","rotatePointAroundOrigin","isWHSwitched","setFill","getFill","getFillType","getType","newFillInfo","FillInfo","prstGeom","custGeom","pathBuilder","setPrstGeom","getPrstGeom","setCustGeom","getCustGeom","setPathBuilder","getPathBuilder","getShapeType","ShapeTypeEnum","CUSTOM","getPath","param","build","newPathInfo","cloneDeep","PathInfo","newStrokeInfo","StrokeInfo","graphicType","SHAPE","strokeInfo","initAsShape","initAsGroup","cloned","setGraphicType","setCoordinateInfo","setPathInfo","setFillInfo","setStrokeInfo","getStrokeInfo","getIsBeingEdited","setSelected","getSelected","GraphicModel","PathBuilder","pathList","curX","curY","makeMove","makeLine","PrstDiagonalRectBuilder","r","b","drawing","stroke","PrstRectBuilder","PathBuilderFactory","prstRectBuilder","prstDiagonalRectBuilder","createPathBuilder","RECT","DIAGONAL_RECT","ColorType","colorType","getColorString","color","SRGB","PRESET","PresetColorMap","test","Color","FillBase","FillTypeEnum","SolidFill","SOLID_FILL","getFillString","setColor","getColor","collectEditingTargetGraphicModelList","isSelectedGraphicModel","filterFunction","editingTargetGraphicModelList","eventTargetGraphicModelList","getSelectedGraphicModelList","graphicModelList","filterGraphicModelList","getEditingTargetGraphicModelList","collectEditingDependentGraphicModelList","editingDependentGraphicModelSet","Set","add","collectEditPreviewLayerGraphicModelList","getChildGraphicModelList","clearGraphicEditContext","proxryLayerInfoContainer","updateNewSelectionContainer","selectionTargetList","INVALID","GraphicEditingHandleEnum","getInitialEditingCoordinateInfo","collectParentGroupNoneEditingCoordinateInfo","parentGroupList","collectParentGroupInitialEditingCoordinateInfo","collectParentGroupCurrentEditingCoordinateInfo","getDisplayedCenterCoordinate","isEditPreviewLayer","getCurrentEditingDisplayedCenterCoordinate","getNoneEditingDisplayedCenterCoordinate","getCenterCoordinateUsingCoordinateInfo","getInitialEditingDisplayedCenterCoordinate","targetGraphicModelCoordinateInfo","parentGroupCoordinateInfoList","p","groupMatrix","getAccumulatedTransformMatrix","pp","Number","getNoneEditingDisplayedPosition","centerCoordinate","getNoneEditingDisplayedSize","getInitialEditingDisplayedPosition","getInitialEditingDisplayedSize","getCurrentEditingDisplayedPosition","getCurrentEditingDisplayedSize","getDisplayedSize","resizeRatio","getResizeRatioUsingCoordinateInfo","getNoneEditingDisplayedResizeRatio","widthRatio","heightRatio","getInitialEditingDisplayedResizeRatio","getCurrentEditingDisplayedResizeRatio","renderCoordinate","applyFlip","transformAppliedCoordinate","getInitialEditingDisplayedRotation","getInitialEditingDisplayedFlipH","getInitialEditingDisplayedFlipV","groupWidthRatio","groupHeightRatio","tmp","applyParentCoordinateInfoToCurrentRotation","getDisplayedRotation","getRotationUsingCoordinateInfo","getCurrentEditingDisplayedRotation","getNoneEditingDisplayedRotation","currentRotation","parentCoordinateInfo","getDisplayedFlipH","getFlipHUsingCoordinateInfo","getCurrentEditingDisplayedFlipH","getNoneEditingDisplayedFlipH","getDisplayedFlipV","getFlipVUsingCoordinateInfo","getCurrentEditingDisplayedFlipV","getNoneEditingDisplayedFlipV","getInitialEditingAccumulatedTransformMatrix","coordinateInfoList","accumulatedMatrix","rotationList","widthRatioList","heightRatioList","flipHList","flipVList","coordinateInfoSize","coordinateInfoIndex","currentWidth","currentHeight","currentWidthRatio","currentHeightRatio","currentFlipH","currentFlipV","currentCenterX","currentCenterY","accumulatedCenterPoint","accumulatedWidth","accumulatedHeight","accumulatedFlipH","accumulatedFlipV","accumulatedRotation","listSize","parentRotation","parentWidthRatio","parentHeightRatio","parentFlipH","parentFlipV","getTransformMatrix","scaleX","scaleY","cos","sin","u","uInv","getGroupRFMatrix","getGroupSTMatrix","applyResizeOptions","fixWHRatio","initialSize","currentSize","largerRatio","updateEditingDependentTreeMember","editRequestMap","parentGroupMap","editRequest","depth","distanceArray","sort","a","tuple","minX","Infinity","minY","maxX","maxY","childGraphicModelEditRequest","childCoordInfo","childMinX","childMinY","childMaxX","childMaxY","centerX","centerY","parentEditRequest","parentCurrentCoordInfo","parentInitCoordInfo","newGroupPosition","initialEditingCoordinateInfoList","initialEditingAccumulatedTotalMatrix","currentEditingCoordinateInfoList","currentEditingAccumulatedParentMatrix","currentEditingAccumulatedTotalMatrix","currentEditingDisplayedPosition","currenEditingDisplayedtSize","inverseOfCurrentEditingTranslateMatrix","currentEditingAccumulatedTotalMatrixWithoutTranslation","newAccumulatedTranslationMatrix","newAccumulatedCenterMatrix","newCenterMatrix","calculateNewGroupPosition","updateEditingDependentParentGroupEditRequest","updateEditingDependentParentGroup","SetGraphicAttributeCommand","targetModel","oldValue","newValue","setterFunction","AppendTreeNodeCommand","target","RequestRerenderTreeNodeComponentCommand","onApply","onUnapply","GraphicInsertCommandHandler","processCommand","setUpGraphicModelInsertContext","GRAPHIC_INSERT","insertGraphicModel","GRAPHIC_INSERT_DUPLICATE","insertGraphicModelByDuplicate","GRAPHIC_INSERT_ABORT","clearGraphicModelInsertContext","isValid","terminate","createDefaultFill","createDefaultStrokeFill","createGraphicModelForInsertCommand","READY","cursorType","prop","parentModel","editingGraphicModels","newShapeModel","updateParentGroupCoordinate","rootGroupSet","updateGroupCoordinate","applyEditRequest","targetGraphicModels","updateGroupCoordinateCore","childCenterX","childCenterY","min","max","newGroupX","newGroupY","newGroupW","newGroupH","newW","newH","tmpCoordinateInfo","getNewGroupPosition","targetGroup","targetGroupEditRequest","getParentCoordinateInfoList","currentPosition","getCurrentTransform","tmpParent","parentGraphicModel","targetCoordinateInfo","parentCoordinateInfoList","parentAccumulatedMatrix","centerPointMatrix","currentCenterPointMatrix","oldCoordinateInfo","CommandMapper","getCommandMap","getCommandCreatorMap","GraphicMoveCommandHandler","GRAPHIC_MOVE","moveGraphicModelByEditContext","GRAPHIC_MOVE_ABORT","clearGraphicModelEditContext","setCoordinateInfoCommand","requestRerenderCommand","GraphicRotateCommandHandler","GRAPHIC_ROTATE","rotateGraphicModelByEditContext","GRAPHIC_ROTATE_ABORT","GraphicResizeCommandHandler","GRAPHIC_RESIZE","resizeGraphicModelByEditContext","GRAPHIC_RESIZE_ABORT","RemoveTreeNodeCommand","removeTreeNode","MoveTreeNodeCommand","newParent","newNextSibling","oldParent","oldNextSibling","GraphicDeleteCommandHandler","DELETE_GRAPHIC","deleteGraphic","selectedGraphicModels","deletedGraphicModelList","removeNodeAndAllChild","updateParentGroup","deletedGraphicModelSet","unGroupChild","newGroupWidth","newGroupHeight","newWidth","newHeight","getNewParent","moveNode","getNewNextSibling","removeNode","applyUnGroupTransform","delete","newParentTransformationMatrix","newParentGraphicModel","wRatioList","hRatioList","tmpTreeNode","tmpGraphicModel","applyUnGroupTransformOneDepthChild","childDisplayedPosition","childDisplayedSize","applyUnGroupTransformRecursively","parentTransformationMatrix","childCoordinateInfo","newRotation","accumulatedWRatio","accumulatedHRatio","parentWRatio","parentHRatio","displayedSize","displayedCenterCoordinate","newCenterCoordinate","newX","newY","newFlipH","newFlipV","displayedPosition","newTransformationMatrix","removeChildNode","targetNode","removeNodeCommand","newNext","moveTreeNodeCommand","requestRerenderOldParentCommand","requestRerenderNewParentCommand","currentParent","GraphicGroupCommandHandler","groupObjects","unGroup","isGroupChildSelected","some","rootChildArray","groupNextSibling","createNewGroup","graphicModelListForNewSelection","group","groupChildList","newGroupShape","createGraphicModelForGroupObject","appendTreeNodeCommand","appendTarget","displayedRotation","displayedFlipH","displayedFlipV","applyChildTransformRecursively","removeTreeNodeCommand","EditModeCommandMapper","commandHandlerFactory","commandMap","commandCreatorMap","init","graphicInsertCommandHandler","graphicMoveCommandHandler","graphicRotateCommandHandler","graphicResizeCommandHandler","graphicDeleteCommandHandler","graphicGroupCommandHandler","CommandModeMapper","commandModeMap","CommandManager","commandModeMapper","getCommandMapper","createCommandCompositor","createCommandController","execute","executeUndo","executeRedo","executeCurrentCommand","isCommandValid","response","EventHandlerFactory","eventHandlerMap","getTargetEventHandler","EventHandlerConstructor","eventHandler","MouseEventCoordinateReferenceId","SlideComponentBasicMargin","convertClientCoordinateToRenderCoordinate","clientCoordinate","mouseEventCoordinateReference","document","getElementById","referenceCoordinateRect","getBoundingClientRect","left","top","EventHandler","onMouseDown","onMouseUp","onMouseMove","onDrag","onWheel","onKeyUp","onAppAreaMouseDown","onAppAreaMouseUp","onAppAreaMouseMove","onAppAreaDrag","GraphicInsertEventHandler","eventSubState","isMouseDownValid","PRESSED","getClientX","getClientY","isMouseMoveValid","currentMouseRenderCoordinate","mouseDelta","isShiftDown","largerAbsoluteValue","abs","sign","eventTargetCoordinateInfo","prevEventSubState","RELEASED","isMouseUpValid","setXYWithoutMove","getKey","graphic","GraphicEventHandler","GraphicSelectionEventHandler","getEventTargetModel","isCtrlDown","updateSelectionOnMouseDown","graphicSelectionContainer","updateSelectionOnMouseUp","newSelectedGraphicModelList","isRootGroupSelected","hasRootGroupMemberInSelectionContainer","graphicSelection","newSelectedGraphicModelSet","rootGroupOfSelectedGraphicModel","graphicSelectionSize","isRButton","GraphicMoveEventHandler","setUpGraphicModelMoveContext","moveDelta","calculateMouseDelta","applyMoveDelta","mouseDeltaX","mouseDeltaY","graphicModels","initialPosition","displayedCenterPoint","accumulatedTransformationMatrix","newCenterPoint","applyGraphicMoveDeltaToGraphicEditRequest","GraphicRotateEventHandler","ROTATE","setUpGraphicModelRotateContext","rotatedAngle","angleEnd","angleStart","getAngleBetweenTwoPointsAndOrigin","angleDirection","newAngle","floor","initialResizeRatio","currentEditinginitialResizeRatio","applyRotationToGraphicEditRequest","IMG_CURSOR_ROTATE","position","GraphicResizeEventHandler","setUpGraphicModelResizeContext","appliableMouseDelta","calculateAppliableMouseDelta","LEFT_TOP","TOP","RIGHT_TOP","LEFT","RIGHT","LEFT_BOTTOM","BOTTOM","RIGHT_BOTTOM","calculateResizeRatio","useFlip","editingHandle","graphicModelCenterPointBeforeResize","graphicModelRotation","initialWidth","initialHeight","graphicModelCenterPointAfterResize","rightBottomPoint","leftTopPointAfterResize","leftTopPointWithoutRotation","rightBottomPointWithoutRotation","leftTopPoint","rightBottomPointAfterResize","leftBottomPoint","rightTopPointAfterResize","rightTopPointWithoutRotation","leftBottomPointWithoutRotation","rightTopPoint","leftBottomPointAfterResize","newCoordinate","displayedResizeRatio","applyCoordinateToGraphicEditRequest","applyResizeRatioToGraphicEditRequest","editingStartedPositonBasedOnGraphicModel","currentMousePositonBasedOnGraphicModel","EventMapper","eventHandlerFactory","eventMap","createEventConstructorMap","eventHandlerConstructorList","eventHandlerConstructor","EventManager","SelectionManager","updateSelection","AppStore","commandManager","eventManager","selectionManager","initExecutionProps","executeAllManagers","eventType","handleMouseDown","handleMouseUp","handleMouseMove","handleDrag","handleWheel","handleKeyDown","handleKeyUp","handleAppAreaMouseDown","handleAppAreaMouseUp","handleAppAreaMouseMove","handleAppAreaDrag","AppStoreContext","createContext","Provider","useContext","Control","handledControlProps","IMG_ARROW_DOWN","arrowType","disabled","more","IMG_RIBBON_GALLERY_MORE_BUTTON","dropdownMenuItemGroupInfo","closeAllMenu","closeOnClick","dropdownMenuSubItemInfo","DropdownMenuItemComponent","dropdownMenuItemInfo","ReactKeyEnum","imgWidth","imgHeight","click","dropdownMenuSeparatorInfo","line","htmlFor","dropdownMenuTitleInfo","forwardRef","controlMap","RIBBON_GROUP","RIBBON_GALLERY","isOpen","targetRef","menuRef","toggleMenu","closeMenu","setIsOpen","closeOnClickOutside","useCallback","Element","contains","HTMLInputElement","addEventListener","removeEventListener","openMenu","useLayoutEffect","targetLeft","bottom","targetBottom","targetWidth","menuWidth","menuHeight","right","containerHeight","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","handleResize","arrow","up","down","disableMoreButton","RIBBON_LABEL","controlType","RibbonData","setValue","triggerRerender","EditViewSizeTrackerId","observerRef","ResizeObserver","entries","entry","observe","disconnect","renderedChildren","originalSize","slide_background","strokeWidth","BaseEvent","eventTargetModel","getEvent","getTarget","getCurrentTarget","currentTarget","getNativeEvent","nativeEvent","MouseEvent","getScreenX","screenX","getScreenY","screenY","clientX","clientY","isLButton","button","isAltDown","isMetaDown","WheelEvent","getXOffset","deltaX","getYOffset","deltaY","KeyEvent","isModifierDown","navigator","platform","toUpperCase","isCapsLockDown","getModifierState","isScrollLockDown","isNumLockDown","getCode","getIsComposing","isComposing","option","eventDelay","isDragEnabled","useDrag","useMemo","throttled","throttle","dragged","persist","focus","onBlur","l","isDirectlySelected","needMargin","pathMargin","rotationTransform","flipTransform","editingHandleList","eventPathbuilder","handleMouseDownForMove","handleMouseDownForResize","handleMouseDownForRotation","cursor","strokeDasharray","margin","rotationHandlePosition","rotatationHandleSize","rotationEventRectPosition","rotatationHandleEventSize","rotationHandleLinePosition","SELECTION_GROUP_EXTRA_MARGIN","selectionOutlinePath","graphicSelectionCoordinateStyle","rotate_handle_svg","transform","rotate_handle_event_g","rotate_handle_event_rect","rotate_handle_g","rotate_handle_rect","rotate_handle_line","x1","y1","x2","y2","resize_handle_svg","resize_handle_outline_g","resize_handle_outline","resize_handle_outline_event","handleInfo","objectWidth","objectHeight","objectRotation","resizeAngle","getCursorType","getGraphicEditingHandleInfo","resize_handle_g","resize_handle_rect","extraSelectionTarget","isEditPreivewLayerActivated","conatiner","translate","scale","rotationMatrix","translationMatrix","scaleMatrix","pointerEvents","eventSVG","extraEventWidth","eventPathStrokeWidth","overflow","visibility","getEventSVG","getFillFunction","defaultFill","fillColor","getStrokeFillFunction","defaultStrokeFill","strokeColor","renderSVG","resultFill","gList","opacity","getRenderSVG","TreeNodeComponentMap","contentsWrapperRef","contentsRef","slideBackgroundRef","editViewRectRef","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","contentsBoundingRectRef","slideBackgroundRectRef","slideOffsetTopRef","slideOffsetLeftRef","setRectInfo","rectInfoRef","domRect","rectInfo","editViewSizeTracker","getContentsBoundingRect","element","elementRect","contentsBoundingRect","updateSlideSize","updateScrollBar","containerRect","slideBackgroundRect","slideWrapperWidth","slideWrapperHeight","slideOffsetTop","slideOffsetLeft","editViewScrollTop","editViewScrollLeft","contentsOutsideTop","contentsOutsideLeft","contentsOutsideBottom","contentsOutsideRight","availableWidth","availableHeight","isScrollNeeded","diffTop","diffLeft","cssText","editViewHTMLElement","scrollTo","behavior","contents_wrapper","slide_background_wrapper","coordinateStyle","transformMatrix","targetPosition","getDisplayedPosition","targetSize","targetScale","targetRotation","parentGroupSize","parentGroupScale","parentGroupRotation","parentGroupCenter","lacalizedTargetCenter","distanceVector","calculateDisplayedTransformMatrix","matrix","getGraphicWrapperCoordinateStyle","TargetComponent","size_tracker","contents","compositeViewRef","firstChildRef","dividerViewRef","dividerControllerRef","ratio","flexDirection","mouseCoordinateRef","initialSizeRef","compositeViewSizeRef","firstChildCssStyle","setRatio","newRatio","dividerControllerDivElement","dividerControllerWidth","devicePixelRatio","dividerViewRect","dividerControllerStyle","dividerControllerHeight","getMouseCoordinate","setMouseCoordinate","getFirstChildSize","getCompositeViewSize","ew_resize","ns_resize","handleMouseMoveCapture","currentMouseCoordinate","newSize","stopImmediatePropagation","handleMouseUpCapture","handleMouseDownCapture","secondChild","divider_view","divider_controller","onMouseDownCapture","second","editCompositeViewComponent","edit","listCompositeViewComponent","list","toolPaneInfoList","toolPaneInfo","_","selectedToolPaneInfo","capture","allowRegister","targetElement","cursorImage","cursorPosition","cursorStyle","fallbackCursor","auto","appAreaCursorStyle","isEventProxyEnabled","appAreaProxyLayerRef","handleMouseEnter","handleMouseLeave","handleMouseOut","handleBlur","onMouseUpCapture","onMouseMoveCapture","dispatchEvent","cancel","onMouseOut","block_event","isEnabled","isEventBlocked","editViewProxyLayerRef","editViewRectInfo","editViewBoundingClientRect","rect","editViewProxyLayerElement","editViewCursorStyle","buttons","i18n","i18next","isInitialized","lng","ns","use","fallbackLng","load","keySeparator","nsSeparator","interpolation","escapeValue","defaultNS","fallbackNS","react","useSuspense","nsMode","cursorStyleString","imageURL","PresetCursorInfoList","shortcutHandler","clearKeyHandler","combinationString","shortcutAction","onKeyDownCapture","render","RIBBON_GROUP_INSERT_SHAPE","RG1","TXT_GROUP_INSERT_SHAPE","RIBBON_GALLERY_INSERT_SHAPE","GA1","RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT","TXT_SHAPE_INSERT_GALLERY_RECT","RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT_ITEM_RECT","IMG_INSERT_SHAPE_RECT","RIBBON_GALLERY_INSERT_SHAPE_GROUP_RECT_ITEM_DIAGONAL_RECT","IMG_INSERT_SHAPE_DIAGONAL_RECT","IMG_CURSOR_MOVE_HOVER","IMG_CURSOR_ROTATE_HOVER","CursorType","default","context_menu","help","pointer","progress","wait","cell","crosshair","text","vertical_text","alias","copy","move","no_drop","not_allowed","e_resize","n_resize","ne_resize","nw_resize","s_resize","se_resize","sw_resize","w_resize","nesw_resize","nwse_resize","col_resize","row_resize","all_scroll","zoom_in","zoom_out","grab","grabbing","CLASSNAME_GRAPHIC_CURSOR_MOVE_HOVER","CLASSNAME_GRAPHIC_CURSOR_ROTATE_HOVER","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","ids","all","keys","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","m","amdD","amdO","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","splice","n","getter","__esModule","getPrototypeOf","obj","mode","create","def","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","promises","miniCssF","g","globalThis","Function","url","done","script","needAttach","scripts","getElementsByTagName","s","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","onerror","onload","clearTimeout","doneFns","bind","head","toStringTag","nmd","paths","scriptUrl","importScripts","location","currentScript","tagName","installedChunks","installedChunkData","promise","reject","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}